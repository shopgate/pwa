// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ZoomPanContainer /> applies correct position when panned 1`] = `
<ZoomPanContainer
  maxZoom={4}
  minZoom={1}
  onZoom={[Function]}
  smoothness={500}
  zoomBounce={0.3}
  zoomOnTap={2}
>
  <div
    className="css-70kdmd"
  >
    <Hammer
      direction="DIRECTION_ALL"
      onDoubleTap={[Function]}
      onPan={[Function]}
      onPanEnd={[Function]}
      onPanStart={[Function]}
      onPinch={[Function]}
      onPinchEnd={[Function]}
      onPinchStart={[Function]}
      options={
        Object {
          "recognizers": Object {
            "pinch": Object {
              "enable": true,
            },
          },
        }
      }
    >
      <div>
        <div
          className="css-1b510lo"
        >
          <div
            className="css-ivsd5g"
          >
            <TestElement>
              <Image
                alt={null}
                animating={true}
                backgroundColor="#f2f2f2"
                className=""
                forcePlaceholder={false}
                highestResolutionLoaded={[Function]}
                onError={null}
                onLoad={null}
                ratio={null}
                resolutions={
                  Array [
                    Object {
                      "blur": 2,
                      "height": 50,
                      "width": 50,
                    },
                    Object {
                      "height": 440,
                      "width": 440,
                    },
                  ]
                }
                src="http://placekitten.com/300/300"
                srcmap={null}
                transition={null}
              >
                <div
                  className="css-vfdozt "
                />
              </Image>
            </TestElement>
          </div>
        </div>
      </div>
    </Hammer>
  </div>
</ZoomPanContainer>
`;

exports[`<ZoomPanContainer /> applies correct zoom factor when pinched 1`] = `
<ZoomPanContainer
  maxZoom={4}
  minZoom={1}
  onZoom={[Function]}
  smoothness={500}
  zoomBounce={0.3}
  zoomOnTap={2}
>
  <div
    className="css-70kdmd"
  >
    <Hammer
      direction="DIRECTION_ALL"
      onDoubleTap={[Function]}
      onPan={[Function]}
      onPanEnd={[Function]}
      onPanStart={[Function]}
      onPinch={[Function]}
      onPinchEnd={[Function]}
      onPinchStart={[Function]}
      options={
        Object {
          "recognizers": Object {
            "pinch": Object {
              "enable": true,
            },
          },
        }
      }
    >
      <div>
        <div
          className="css-1b510lo"
        >
          <div
            className="css-ivsd5g"
          >
            <TestElement>
              <Image
                alt={null}
                animating={true}
                backgroundColor="#f2f2f2"
                className=""
                forcePlaceholder={false}
                highestResolutionLoaded={[Function]}
                onError={null}
                onLoad={null}
                ratio={null}
                resolutions={
                  Array [
                    Object {
                      "blur": 2,
                      "height": 50,
                      "width": 50,
                    },
                    Object {
                      "height": 440,
                      "width": 440,
                    },
                  ]
                }
                src="http://placekitten.com/300/300"
                srcmap={null}
                transition={null}
              >
                <div
                  className="css-vfdozt "
                />
              </Image>
            </TestElement>
          </div>
        </div>
      </div>
    </Hammer>
  </div>
</ZoomPanContainer>
`;

exports[`<ZoomPanContainer /> applies the correct zoom when double tapped 1`] = `
<ZoomPanContainer
  maxZoom={4}
  minZoom={1}
  onZoom={[Function]}
  smoothness={500}
  zoomBounce={0.3}
  zoomOnTap={2}
>
  <div
    className="css-70kdmd"
  >
    <Hammer
      direction="DIRECTION_ALL"
      onDoubleTap={[Function]}
      onPan={[Function]}
      onPanEnd={[Function]}
      onPanStart={[Function]}
      onPinch={[Function]}
      onPinchEnd={[Function]}
      onPinchStart={[Function]}
      options={
        Object {
          "recognizers": Object {
            "pinch": Object {
              "enable": true,
            },
          },
        }
      }
    >
      <div>
        <div
          className="css-1b510lo"
        >
          <div
            className="css-ivsd5g"
          >
            <TestElement>
              <Image
                alt={null}
                animating={true}
                backgroundColor="#f2f2f2"
                className=""
                forcePlaceholder={false}
                highestResolutionLoaded={[Function]}
                onError={null}
                onLoad={null}
                ratio={null}
                resolutions={
                  Array [
                    Object {
                      "blur": 2,
                      "height": 50,
                      "width": 50,
                    },
                    Object {
                      "height": 440,
                      "width": 440,
                    },
                  ]
                }
                src="http://placekitten.com/300/300"
                srcmap={null}
                transition={null}
              >
                <div
                  className="css-vfdozt "
                />
              </Image>
            </TestElement>
          </div>
        </div>
      </div>
    </Hammer>
  </div>
</ZoomPanContainer>
`;

exports[`<ZoomPanContainer /> renders the correct initial zoom when minZoom < 1 1`] = `
<div
  className="css-70kdmd"
>
  <Hammer
    direction="DIRECTION_ALL"
    onDoubleTap={[Function]}
    onPan={[Function]}
    onPanEnd={[Function]}
    onPanStart={[Function]}
    onPinch={[Function]}
    onPinchEnd={[Function]}
    onPinchStart={[Function]}
    options={
      Object {
        "recognizers": Object {
          "pinch": Object {
            "enable": true,
          },
        },
      }
    }
  >
    <div>
      <div
        className="css-1b510lo"
      >
        <div
          className="css-ivsd5g"
        >
          <TestElement />
        </div>
      </div>
    </div>
  </Hammer>
</div>
`;

exports[`<ZoomPanContainer /> renders the correct initial zoom when minZoom > 1 1`] = `
<div
  className="css-70kdmd"
>
  <Hammer
    direction="DIRECTION_ALL"
    onDoubleTap={[Function]}
    onPan={[Function]}
    onPanEnd={[Function]}
    onPanStart={[Function]}
    onPinch={[Function]}
    onPinchEnd={[Function]}
    onPinchStart={[Function]}
    options={
      Object {
        "recognizers": Object {
          "pinch": Object {
            "enable": true,
          },
        },
      }
    }
  >
    <div>
      <div
        className="css-1b510lo"
      >
        <div
          className="css-ivsd5g"
        >
          <TestElement />
        </div>
      </div>
    </div>
  </Hammer>
</div>
`;

exports[`<ZoomPanContainer /> renders with children 1`] = `
<ZoomPanContainer
  maxZoom={4}
  minZoom={1}
  onZoom={[Function]}
  smoothness={500}
  zoomBounce={0.3}
  zoomOnTap={2}
>
  <div
    className="css-70kdmd"
  >
    <Hammer
      direction="DIRECTION_ALL"
      onDoubleTap={[Function]}
      onPan={[Function]}
      onPanEnd={[Function]}
      onPanStart={[Function]}
      onPinch={[Function]}
      onPinchEnd={[Function]}
      onPinchStart={[Function]}
      options={
        Object {
          "recognizers": Object {
            "pinch": Object {
              "enable": true,
            },
          },
        }
      }
    >
      <div>
        <div
          className="css-1b510lo"
        >
          <div
            className="css-ivsd5g"
          >
            <TestElement>
              <Image
                alt={null}
                animating={true}
                backgroundColor="#f2f2f2"
                className=""
                forcePlaceholder={false}
                highestResolutionLoaded={[Function]}
                onError={null}
                onLoad={null}
                ratio={null}
                resolutions={
                  Array [
                    Object {
                      "blur": 2,
                      "height": 50,
                      "width": 50,
                    },
                    Object {
                      "height": 440,
                      "width": 440,
                    },
                  ]
                }
                src="http://placekitten.com/300/300"
                srcmap={null}
                transition={null}
              >
                <div
                  className="css-vfdozt "
                />
              </Image>
            </TestElement>
            <TestElement>
              <Image
                alt={null}
                animating={true}
                backgroundColor="#f2f2f2"
                className=""
                forcePlaceholder={false}
                highestResolutionLoaded={[Function]}
                onError={null}
                onLoad={null}
                ratio={null}
                resolutions={
                  Array [
                    Object {
                      "blur": 2,
                      "height": 50,
                      "width": 50,
                    },
                    Object {
                      "height": 440,
                      "width": 440,
                    },
                  ]
                }
                src="http://placekitten.com/300/300"
                srcmap={null}
                transition={null}
              >
                <div
                  className="css-vfdozt "
                />
              </Image>
            </TestElement>
            <TestElement>
              <Image
                alt={null}
                animating={true}
                backgroundColor="#f2f2f2"
                className=""
                forcePlaceholder={false}
                highestResolutionLoaded={[Function]}
                onError={null}
                onLoad={null}
                ratio={null}
                resolutions={
                  Array [
                    Object {
                      "blur": 2,
                      "height": 50,
                      "width": 50,
                    },
                    Object {
                      "height": 440,
                      "width": 440,
                    },
                  ]
                }
                src="http://placekitten.com/300/300"
                srcmap={null}
                transition={null}
              >
                <div
                  className="css-vfdozt "
                />
              </Image>
            </TestElement>
            <TestElement>
              <Image
                alt={null}
                animating={true}
                backgroundColor="#f2f2f2"
                className=""
                forcePlaceholder={false}
                highestResolutionLoaded={[Function]}
                onError={null}
                onLoad={null}
                ratio={null}
                resolutions={
                  Array [
                    Object {
                      "blur": 2,
                      "height": 50,
                      "width": 50,
                    },
                    Object {
                      "height": 440,
                      "width": 440,
                    },
                  ]
                }
                src="http://placekitten.com/300/300"
                srcmap={null}
                transition={null}
              >
                <div
                  className="css-vfdozt "
                />
              </Image>
            </TestElement>
            <TestElement>
              <Image
                alt={null}
                animating={true}
                backgroundColor="#f2f2f2"
                className=""
                forcePlaceholder={false}
                highestResolutionLoaded={[Function]}
                onError={null}
                onLoad={null}
                ratio={null}
                resolutions={
                  Array [
                    Object {
                      "blur": 2,
                      "height": 50,
                      "width": 50,
                    },
                    Object {
                      "height": 440,
                      "width": 440,
                    },
                  ]
                }
                src="http://placekitten.com/300/300"
                srcmap={null}
                transition={null}
              >
                <div
                  className="css-vfdozt "
                />
              </Image>
            </TestElement>
          </div>
        </div>
      </div>
    </Hammer>
  </div>
</ZoomPanContainer>
`;

exports[`<ZoomPanContainer /> triggers the zoom event 1`] = `
<ZoomPanContainer
  maxZoom={4}
  minZoom={1}
  onZoom={[MockFunction]}
  smoothness={500}
  zoomBounce={0.3}
  zoomOnTap={2}
>
  <div
    className="css-70kdmd"
  >
    <Hammer
      direction="DIRECTION_ALL"
      onDoubleTap={[Function]}
      onPan={[Function]}
      onPanEnd={[Function]}
      onPanStart={[Function]}
      onPinch={[Function]}
      onPinchEnd={[Function]}
      onPinchStart={[Function]}
      options={
        Object {
          "recognizers": Object {
            "pinch": Object {
              "enable": true,
            },
          },
        }
      }
    >
      <div>
        <div
          className="css-1b510lo"
        >
          <div
            className="css-ivsd5g"
          >
            <TestElement>
              <Image
                alt={null}
                animating={true}
                backgroundColor="#f2f2f2"
                className=""
                forcePlaceholder={false}
                highestResolutionLoaded={[Function]}
                onError={null}
                onLoad={null}
                ratio={null}
                resolutions={
                  Array [
                    Object {
                      "blur": 2,
                      "height": 50,
                      "width": 50,
                    },
                    Object {
                      "height": 440,
                      "width": 440,
                    },
                  ]
                }
                src="http://placekitten.com/300/300"
                srcmap={null}
                transition={null}
              >
                <div
                  className="css-vfdozt "
                />
              </Image>
            </TestElement>
          </div>
        </div>
      </div>
    </Hammer>
  </div>
</ZoomPanContainer>
`;
