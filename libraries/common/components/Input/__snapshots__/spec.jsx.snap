// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Input /> should change the value on user input 1`] = `
<Component
  value="My initial value"
>
  <SimpleInput
    autoComplete={false}
    autoCorrect={false}
    className=""
    disabled={false}
    id={null}
    isControlled={false}
    name={null}
    onChange={[Function]}
    onFocusChange={[Function]}
    onKeyPress={[Function]}
    onSanitize={[Function]}
    onValidate={[Function]}
    password={false}
    setRef={[Function]}
    type="text"
    validateOnBlur={true}
    value="My initial value"
  >
    <input
      autoComplete="off"
      autoCorrect="off"
      className=""
      disabled={false}
      id={null}
      name={null}
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyPress={[Function]}
      type="text"
      value="My initial value"
    />
  </SimpleInput>
</Component>
`;

exports[`<Input /> should focus the input 1`] = `
<Component
  onFocusChange={[MockFunction]}
>
  <SimpleInput
    autoComplete={false}
    autoCorrect={false}
    className=""
    disabled={false}
    id={null}
    isControlled={false}
    name={null}
    onChange={[Function]}
    onFocusChange={[MockFunction]}
    onKeyPress={[Function]}
    onSanitize={[Function]}
    onValidate={[Function]}
    password={false}
    setRef={[Function]}
    type="text"
    validateOnBlur={true}
    value=""
  >
    <input
      autoComplete="off"
      autoCorrect="off"
      className=""
      disabled={false}
      id={null}
      name={null}
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyPress={[Function]}
      type="text"
      value=""
    />
  </SimpleInput>
</Component>
`;

exports[`<Input /> should receive the correct value while typing 1`] = `
<Component>
  <SimpleInput
    autoComplete={false}
    autoCorrect={false}
    className=""
    disabled={false}
    id={null}
    isControlled={false}
    name={null}
    onChange={[Function]}
    onFocusChange={[Function]}
    onKeyPress={[Function]}
    onSanitize={[Function]}
    onValidate={[Function]}
    password={false}
    setRef={[Function]}
    type="text"
    validateOnBlur={true}
    value=""
  >
    <input
      autoComplete="off"
      autoCorrect="off"
      className=""
      disabled={false}
      id={null}
      name={null}
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyPress={[Function]}
      type="text"
      value="foobar"
    />
  </SimpleInput>
</Component>
`;

exports[`<Input /> should render a multiline input with empty content and react on change 1`] = `
<Component
  multiLine={true}
  value=""
>
  <MultiLineInput
    autoComplete={false}
    autoCorrect={false}
    className=""
    disabled={false}
    id={null}
    isControlled={false}
    multiLine={true}
    name={null}
    onChange={[Function]}
    onFocusChange={[Function]}
    onKeyPress={[Function]}
    onSanitize={[Function]}
    onValidate={[Function]}
    password={false}
    setRef={[Function]}
    type="text"
    validateOnBlur={true}
    value=""
  >
    <textarea
      className=""
      disabled={false}
      id={null}
      name={null}
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      type="text"
      value=""
    />
  </MultiLineInput>
</Component>
`;

exports[`<Input /> should render a simple input field 1`] = `
<Component>
  <SimpleInput
    autoComplete={false}
    autoCorrect={false}
    className=""
    disabled={false}
    id={null}
    isControlled={false}
    name={null}
    onChange={[Function]}
    onFocusChange={[Function]}
    onKeyPress={[Function]}
    onSanitize={[Function]}
    onValidate={[Function]}
    password={false}
    setRef={[Function]}
    type="text"
    validateOnBlur={true}
    value=""
  >
    <input
      autoComplete="off"
      autoCorrect="off"
      className=""
      disabled={false}
      id={null}
      name={null}
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyPress={[Function]}
      type="text"
      value=""
    />
  </SimpleInput>
</Component>
`;

exports[`<Input /> should render the input as password 1`] = `
<Component
  password={true}
>
  <SimpleInput
    autoComplete={false}
    autoCorrect={false}
    className=""
    disabled={false}
    id={null}
    isControlled={false}
    name={null}
    onChange={[Function]}
    onFocusChange={[Function]}
    onKeyPress={[Function]}
    onSanitize={[Function]}
    onValidate={[Function]}
    password={true}
    setRef={[Function]}
    type="text"
    validateOnBlur={true}
    value=""
  >
    <input
      autoComplete="off"
      autoCorrect="off"
      className=""
      disabled={false}
      id={null}
      name={null}
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyPress={[Function]}
      type="password"
      value=""
    />
  </SimpleInput>
</Component>
`;

exports[`<Input /> should render the input with a default value 1`] = `
<Component
  value="FooBar"
>
  <SimpleInput
    autoComplete={false}
    autoCorrect={false}
    className=""
    disabled={false}
    id={null}
    isControlled={false}
    name={null}
    onChange={[Function]}
    onFocusChange={[Function]}
    onKeyPress={[Function]}
    onSanitize={[Function]}
    onValidate={[Function]}
    password={false}
    setRef={[Function]}
    type="text"
    validateOnBlur={true}
    value="FooBar"
  >
    <input
      autoComplete="off"
      autoCorrect="off"
      className=""
      disabled={false}
      id={null}
      name={null}
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyPress={[Function]}
      type="text"
      value="FooBar"
    />
  </SimpleInput>
</Component>
`;

exports[`<Input /> should sanitize the input 1`] = `
<Component
  onSanitize={[Function]}
>
  <SimpleInput
    autoComplete={false}
    autoCorrect={false}
    className=""
    disabled={false}
    id={null}
    isControlled={false}
    name={null}
    onChange={[Function]}
    onFocusChange={[Function]}
    onKeyPress={[Function]}
    onSanitize={[Function]}
    onValidate={[Function]}
    password={false}
    setRef={[Function]}
    type="text"
    validateOnBlur={true}
    value=""
  >
    <input
      autoComplete="off"
      autoCorrect="off"
      className=""
      disabled={false}
      id={null}
      name={null}
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyPress={[Function]}
      type="text"
      value="FOOBAR"
    />
  </SimpleInput>
</Component>
`;

exports[`<Input /> should trigger the onChange callback 1`] = `
<Component
  onChange={
    [MockFunction] {
      "calls": Array [
        Array [
          "",
        ],
        Array [
          "a",
        ],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": undefined,
        },
        Object {
          "isThrow": false,
          "value": undefined,
        },
      ],
    }
  }
>
  <SimpleInput
    autoComplete={false}
    autoCorrect={false}
    className=""
    disabled={false}
    id={null}
    isControlled={false}
    name={null}
    onChange={
      [MockFunction] {
        "calls": Array [
          Array [
            "",
          ],
          Array [
            "a",
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    onFocusChange={[Function]}
    onKeyPress={[Function]}
    onSanitize={[Function]}
    onValidate={[Function]}
    password={false}
    setRef={[Function]}
    type="text"
    validateOnBlur={true}
    value=""
  >
    <input
      autoComplete="off"
      autoCorrect="off"
      className=""
      disabled={false}
      id={null}
      name={null}
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyPress={[Function]}
      type="text"
      value="a"
    />
  </SimpleInput>
</Component>
`;

exports[`<Input /> should validate the input 1`] = `
<Component
  onValidate={[Function]}
>
  <SimpleInput
    autoComplete={false}
    autoCorrect={false}
    className=""
    disabled={false}
    id={null}
    isControlled={false}
    name={null}
    onChange={[Function]}
    onFocusChange={[Function]}
    onKeyPress={[Function]}
    onSanitize={[Function]}
    onValidate={[Function]}
    password={false}
    setRef={[Function]}
    type="text"
    validateOnBlur={true}
    value=""
  >
    <input
      autoComplete="off"
      autoCorrect="off"
      className=""
      disabled={false}
      id={null}
      name={null}
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyPress={[Function]}
      type="text"
      value=""
    />
  </SimpleInput>
</Component>
`;
