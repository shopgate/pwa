// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Password> should render a password field 1`] = `
<Password
  name="test-input"
>
  <TextField
    attributes={null}
    className="ui-shared__form__password undefined"
    errorText=""
    hasUnderline={true}
    label=""
    leftElement={null}
    maxLength=""
    multiLine={false}
    name="test-input"
    onChange={[Function]}
    onFocusChange={[Function]}
    placeholder=""
    rightElement={
      <ToggleIcon
        offIcon={
          <VisibilityOffIcon
            className="css-1fekhao"
            size={24}
          />
        }
        on={false}
        onIcon={
          <VisibilityIcon
            size={24}
          />
        }
        toggleHandler={[Function]}
      />
    }
    type="password"
    value=""
  >
    <FormElement
      className="ui-shared__form__password undefined ui-shared__form__text-field"
      disabled={false}
      errorText=""
      hasPlaceholder={true}
      hasUnderline={true}
      hasValue={false}
      htmlFor="test-input"
      isFocused={false}
      label=""
      labelStatic={false}
      placeholder=""
      showErrorText={true}
      translateErrorText={true}
    >
      <div
        className="css-1vjh8yv ui-shared__form__password undefined ui-shared__form__text-field formElement ui-shared__form-element"
      >
        <Grid
          className=""
          component="ul"
          wrap={false}
        >
          <ul
            className=" css-h7r55a common__grid"
          >
            <GridItem
              className="css-1kppfx4"
              component="li"
              grow={1}
              shrink={1}
            >
              <li
                className="css-1kppfx4 css-1gs0ko2"
              >
                <_default
                  attributes={null}
                  className="css-keangt"
                  maxLength=""
                  multiLine={false}
                  name="test-input"
                  onChange={[Function]}
                  onFocusChange={[Function]}
                  type="password"
                  validateOnBlur={true}
                  value=""
                >
                  <SimpleInput
                    attributes={null}
                    autoComplete={false}
                    autoCorrect={false}
                    className="css-keangt"
                    disabled={false}
                    id={null}
                    inputComponent="input"
                    isControlled={false}
                    maxLength=""
                    multiLine={false}
                    name="test-input"
                    onChange={[Function]}
                    onFocusChange={[Function]}
                    onKeyPress={[Function]}
                    onSanitize={[Function]}
                    onValidate={[Function]}
                    password={false}
                    setRef={[Function]}
                    type="password"
                    validateOnBlur={true}
                    value=""
                  >
                    <input
                      autoComplete="off"
                      autoCorrect="off"
                      className="css-keangt simpleInput common__simple-input"
                      disabled={false}
                      id={null}
                      inputMode={null}
                      maxLength=""
                      min={null}
                      name="test-input"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      onInput={null}
                      onKeyPress={[Function]}
                      pattern={null}
                      step={null}
                      type="password"
                      value=""
                    />
                  </SimpleInput>
                </_default>
              </li>
            </GridItem>
            <GridItem
              className="css-h3zoee"
              component="li"
              grow={0}
              shrink={1}
            >
              <li
                className="css-h3zoee"
              >
                <ToggleIcon
                  offIcon={
                    <VisibilityOffIcon
                      className="css-1fekhao"
                      size={24}
                    />
                  }
                  on={false}
                  onIcon={
                    <VisibilityIcon
                      size={24}
                    />
                  }
                  toggleHandler={[Function]}
                >
                  <div
                    aria-hidden={true}
                    className="ui-shared__toggle-icon"
                    onClick={[Function]}
                  >
                    <VisibilityOffIcon
                      className="css-1fekhao"
                      size={24}
                    >
                      <Icon
                        className="css-1fekhao"
                        color={null}
                        content="<path d=\\"M0 0h24v24H0zm0 0h24v24H0zm0 0h24v24H0zm0 0h24v24H0z\\" fill=\\"none\\"/><path d=\\"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\\"/>"
                        size={24}
                        viewBox="0 0 24 24"
                      >
                        <svg
                          className="css-yys9hb css-1fekhao common__icon"
                          dangerouslySetInnerHTML={
                            Object {
                              "__html": "<path d=\\"M0 0h24v24H0zm0 0h24v24H0zm0 0h24v24H0zm0 0h24v24H0z\\" fill=\\"none\\"/><path d=\\"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\\"/>",
                            }
                          }
                          style={
                            Object {
                              "fill": null,
                              "fontSize": 24,
                            }
                          }
                          viewBox="0 0 24 24"
                          xmlns="http://www.w3.org/2000/svg"
                        />
                      </Icon>
                    </VisibilityOffIcon>
                  </div>
                </ToggleIcon>
              </li>
            </GridItem>
          </ul>
        </Grid>
        <Underline
          hasErrorMessage={false}
          isFocused={false}
        >
          <div
            className="css-ycal4l underline"
          >
            <div
              className="css-1tpmuef"
              style={
                Object {
                  "borderBottomColor": "var(--color-primary, #fa5400)",
                  "transform": "scale3d(0,1,1)",
                }
              }
            />
          </div>
        </Underline>
      </div>
    </FormElement>
  </TextField>
</Password>
`;
