// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TextField> should focus the input 1`] = `
<TextField
  attributes={null}
  className=""
  errorText=""
  hasUnderline={true}
  label=""
  leftElement={null}
  maxlength=""
  multiLine={false}
  name="test-input"
  onChange={[Function]}
  onFocusChange={[MockFunction]}
  placeholder=""
  rightElement={null}
  type="text"
  value=""
>
  <FormElement
    className=" ui-shared__form__text-field"
    errorText=""
    hasPlaceholder={true}
    hasUnderline={true}
    hasValue={false}
    htmlFor="test-input"
    isFocused={false}
    label=""
    placeholder=""
    translateErrorText={true}
  >
    <div
      className="css-1vjh8yv  ui-shared__form__text-field formElement ui-shared__form-element"
    >
      <Placeholder
        aria-hidden={true}
        placeholder=""
        visible={true}
      >
        <div
          aria-hidden={true}
          className="css-rkuo1o placeholder"
        >
          <Translate
            acceptPlainTextWithPlaceholders={false}
            className={null}
            params={Object {}}
            role={null}
            string=""
          />
        </div>
      </Placeholder>
      <Label
        hasErrorMessage={false}
        htmlFor="test-input"
        isFloating={false}
        isFocused={false}
        label=""
      >
        <label
          className="css-1nn9zl4 css-1jyyyen label"
          htmlFor="test-input"
        >
          <Translate
            acceptPlainTextWithPlaceholders={false}
            className={null}
            params={Object {}}
            role={null}
            string=""
          />
        </label>
      </Label>
      <Grid
        className=""
        component="ul"
        wrap={false}
      >
        <ul
          className=" css-h7r55a common__grid"
        >
          <GridItem
            className="css-1kppfx4"
            component="li"
            grow={1}
            shrink={1}
          >
            <li
              className="css-1kppfx4 css-1gs0ko2"
            >
              <_default
                attributes={null}
                className="css-keangt"
                maxlength=""
                multiLine={false}
                name="test-input"
                onChange={[Function]}
                onFocusChange={[Function]}
                type="text"
                validateOnBlur={true}
                value=""
              >
                <SimpleInput
                  attributes={null}
                  autoComplete={false}
                  autoCorrect={false}
                  className="css-keangt"
                  disabled={false}
                  id={null}
                  isControlled={false}
                  maxlength=""
                  multiLine={false}
                  name="test-input"
                  onChange={[Function]}
                  onFocusChange={[Function]}
                  onKeyPress={[Function]}
                  onSanitize={[Function]}
                  onValidate={[Function]}
                  password={false}
                  setRef={[Function]}
                  type="text"
                  validateOnBlur={true}
                  value=""
                >
                  <input
                    autoComplete="off"
                    autoCorrect="off"
                    className="css-keangt simpleInput common__simple-input"
                    disabled={false}
                    id={null}
                    maxLength=""
                    name="test-input"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    onKeyPress={[Function]}
                    type="text"
                    value=""
                  />
                </SimpleInput>
              </_default>
            </li>
          </GridItem>
        </ul>
      </Grid>
      <Underline
        hasErrorMessage={false}
        isFocused={false}
      >
        <div
          className="css-ycal4l underline"
        >
          <div
            className="css-1tpmuef"
            style={
              Object {
                "borderBottomColor": "#fa5400",
                "transform": "scale3d(0,1,1)",
              }
            }
          />
        </div>
      </Underline>
      <ErrorText
        className={null}
        errorText=""
        translate={true}
      >
        <div
          className="css-hyvrm8 errorText"
        >
          <Translate
            acceptPlainTextWithPlaceholders={false}
            className={null}
            params={Object {}}
            role={null}
            string=""
          />
        </div>
      </ErrorText>
    </div>
  </FormElement>
</TextField>
`;

exports[`<TextField> should receive the correct value while typing 1`] = `
<TextField
  attributes={null}
  className=""
  errorText=""
  hasUnderline={true}
  label=""
  leftElement={null}
  maxlength=""
  multiLine={false}
  name="test-input"
  onChange={[Function]}
  placeholder=""
  rightElement={null}
  type="text"
  value=""
>
  <FormElement
    className=" ui-shared__form__text-field"
    errorText=""
    hasPlaceholder={true}
    hasUnderline={true}
    hasValue={false}
    htmlFor="test-input"
    isFocused={false}
    label=""
    placeholder=""
    translateErrorText={true}
  >
    <div
      className="css-1vjh8yv  ui-shared__form__text-field formElement ui-shared__form-element"
    >
      <Placeholder
        aria-hidden={true}
        placeholder=""
        visible={true}
      >
        <div
          aria-hidden={true}
          className="css-rkuo1o placeholder"
        >
          <Translate
            acceptPlainTextWithPlaceholders={false}
            className={null}
            params={Object {}}
            role={null}
            string=""
          />
        </div>
      </Placeholder>
      <Label
        hasErrorMessage={false}
        htmlFor="test-input"
        isFloating={false}
        isFocused={false}
        label=""
      >
        <label
          className="css-1nn9zl4 css-1jyyyen label"
          htmlFor="test-input"
        >
          <Translate
            acceptPlainTextWithPlaceholders={false}
            className={null}
            params={Object {}}
            role={null}
            string=""
          />
        </label>
      </Label>
      <Grid
        className=""
        component="ul"
        wrap={false}
      >
        <ul
          className=" css-h7r55a common__grid"
        >
          <GridItem
            className="css-1kppfx4"
            component="li"
            grow={1}
            shrink={1}
          >
            <li
              className="css-1kppfx4 css-1gs0ko2"
            >
              <_default
                attributes={null}
                className="css-keangt"
                maxlength=""
                multiLine={false}
                name="test-input"
                onChange={[Function]}
                onFocusChange={[Function]}
                type="text"
                validateOnBlur={true}
                value=""
              >
                <SimpleInput
                  attributes={null}
                  autoComplete={false}
                  autoCorrect={false}
                  className="css-keangt"
                  disabled={false}
                  id={null}
                  isControlled={false}
                  maxlength=""
                  multiLine={false}
                  name="test-input"
                  onChange={[Function]}
                  onFocusChange={[Function]}
                  onKeyPress={[Function]}
                  onSanitize={[Function]}
                  onValidate={[Function]}
                  password={false}
                  setRef={[Function]}
                  type="text"
                  validateOnBlur={true}
                  value=""
                >
                  <input
                    autoComplete="off"
                    autoCorrect="off"
                    className="css-keangt simpleInput common__simple-input"
                    disabled={false}
                    id={null}
                    maxLength=""
                    name="test-input"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    onKeyPress={[Function]}
                    type="text"
                    value="foobar"
                  />
                </SimpleInput>
              </_default>
            </li>
          </GridItem>
        </ul>
      </Grid>
      <Underline
        hasErrorMessage={false}
        isFocused={false}
      >
        <div
          className="css-ycal4l underline"
        >
          <div
            className="css-1tpmuef"
            style={
              Object {
                "borderBottomColor": "#fa5400",
                "transform": "scale3d(0,1,1)",
              }
            }
          />
        </div>
      </Underline>
      <ErrorText
        className={null}
        errorText=""
        translate={true}
      >
        <div
          className="css-hyvrm8 errorText"
        >
          <Translate
            acceptPlainTextWithPlaceholders={false}
            className={null}
            params={Object {}}
            role={null}
            string=""
          />
        </div>
      </ErrorText>
    </div>
  </FormElement>
</TextField>
`;

exports[`<TextField> should render a simple text field 1`] = `
<TextField
  attributes={null}
  className=""
  errorText=""
  hasUnderline={true}
  label=""
  leftElement={null}
  maxlength=""
  multiLine={false}
  name="test-input"
  onChange={[Function]}
  placeholder=""
  rightElement={null}
  type="text"
  value=""
>
  <FormElement
    className=" ui-shared__form__text-field"
    errorText=""
    hasPlaceholder={true}
    hasUnderline={true}
    hasValue={false}
    htmlFor="test-input"
    isFocused={false}
    label=""
    placeholder=""
    translateErrorText={true}
  >
    <div
      className="css-1vjh8yv  ui-shared__form__text-field formElement ui-shared__form-element"
    >
      <Placeholder
        aria-hidden={true}
        placeholder=""
        visible={true}
      >
        <div
          aria-hidden={true}
          className="css-rkuo1o placeholder"
        >
          <Translate
            acceptPlainTextWithPlaceholders={false}
            className={null}
            params={Object {}}
            role={null}
            string=""
          />
        </div>
      </Placeholder>
      <Label
        hasErrorMessage={false}
        htmlFor="test-input"
        isFloating={false}
        isFocused={false}
        label=""
      >
        <label
          className="css-1nn9zl4 css-1jyyyen label"
          htmlFor="test-input"
        >
          <Translate
            acceptPlainTextWithPlaceholders={false}
            className={null}
            params={Object {}}
            role={null}
            string=""
          />
        </label>
      </Label>
      <Grid
        className=""
        component="ul"
        wrap={false}
      >
        <ul
          className=" css-h7r55a common__grid"
        >
          <GridItem
            className="css-1kppfx4"
            component="li"
            grow={1}
            shrink={1}
          >
            <li
              className="css-1kppfx4 css-1gs0ko2"
            >
              <_default
                attributes={null}
                className="css-keangt"
                maxlength=""
                multiLine={false}
                name="test-input"
                onChange={[Function]}
                onFocusChange={[Function]}
                type="text"
                validateOnBlur={true}
                value=""
              >
                <SimpleInput
                  attributes={null}
                  autoComplete={false}
                  autoCorrect={false}
                  className="css-keangt"
                  disabled={false}
                  id={null}
                  isControlled={false}
                  maxlength=""
                  multiLine={false}
                  name="test-input"
                  onChange={[Function]}
                  onFocusChange={[Function]}
                  onKeyPress={[Function]}
                  onSanitize={[Function]}
                  onValidate={[Function]}
                  password={false}
                  setRef={[Function]}
                  type="text"
                  validateOnBlur={true}
                  value=""
                >
                  <input
                    autoComplete="off"
                    autoCorrect="off"
                    className="css-keangt simpleInput common__simple-input"
                    disabled={false}
                    id={null}
                    maxLength=""
                    name="test-input"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    onKeyPress={[Function]}
                    type="text"
                    value=""
                  />
                </SimpleInput>
              </_default>
            </li>
          </GridItem>
        </ul>
      </Grid>
      <Underline
        hasErrorMessage={false}
        isFocused={false}
      >
        <div
          className="css-ycal4l underline"
        >
          <div
            className="css-1tpmuef"
            style={
              Object {
                "borderBottomColor": "#fa5400",
                "transform": "scale3d(0,1,1)",
              }
            }
          />
        </div>
      </Underline>
      <ErrorText
        className={null}
        errorText=""
        translate={true}
      >
        <div
          className="css-hyvrm8 errorText"
        >
          <Translate
            acceptPlainTextWithPlaceholders={false}
            className={null}
            params={Object {}}
            role={null}
            string=""
          />
        </div>
      </ErrorText>
    </div>
  </FormElement>
</TextField>
`;

exports[`<TextField> should render the text field as password 1`] = `
<TextField
  attributes={null}
  className=""
  errorText=""
  hasUnderline={true}
  label=""
  leftElement={null}
  maxlength=""
  multiLine={false}
  name="test-input"
  onChange={[Function]}
  password={true}
  placeholder=""
  rightElement={null}
  type="text"
  value=""
>
  <FormElement
    className=" ui-shared__form__text-field"
    errorText=""
    hasPlaceholder={true}
    hasUnderline={true}
    hasValue={false}
    htmlFor="test-input"
    isFocused={false}
    label=""
    placeholder=""
    translateErrorText={true}
  >
    <div
      className="css-1vjh8yv  ui-shared__form__text-field formElement ui-shared__form-element"
    >
      <Placeholder
        aria-hidden={true}
        placeholder=""
        visible={true}
      >
        <div
          aria-hidden={true}
          className="css-rkuo1o placeholder"
        >
          <Translate
            acceptPlainTextWithPlaceholders={false}
            className={null}
            params={Object {}}
            role={null}
            string=""
          />
        </div>
      </Placeholder>
      <Label
        hasErrorMessage={false}
        htmlFor="test-input"
        isFloating={false}
        isFocused={false}
        label=""
      >
        <label
          className="css-1nn9zl4 css-1jyyyen label"
          htmlFor="test-input"
        >
          <Translate
            acceptPlainTextWithPlaceholders={false}
            className={null}
            params={Object {}}
            role={null}
            string=""
          />
        </label>
      </Label>
      <Grid
        className=""
        component="ul"
        wrap={false}
      >
        <ul
          className=" css-h7r55a common__grid"
        >
          <GridItem
            className="css-1kppfx4"
            component="li"
            grow={1}
            shrink={1}
          >
            <li
              className="css-1kppfx4 css-1gs0ko2"
            >
              <_default
                attributes={null}
                className="css-keangt"
                maxlength=""
                multiLine={false}
                name="test-input"
                onChange={[Function]}
                onFocusChange={[Function]}
                password={true}
                type="text"
                validateOnBlur={true}
                value=""
              >
                <SimpleInput
                  attributes={null}
                  autoComplete={false}
                  autoCorrect={false}
                  className="css-keangt"
                  disabled={false}
                  id={null}
                  isControlled={false}
                  maxlength=""
                  multiLine={false}
                  name="test-input"
                  onChange={[Function]}
                  onFocusChange={[Function]}
                  onKeyPress={[Function]}
                  onSanitize={[Function]}
                  onValidate={[Function]}
                  password={true}
                  setRef={[Function]}
                  type="text"
                  validateOnBlur={true}
                  value=""
                >
                  <input
                    autoComplete="off"
                    autoCorrect="off"
                    className="css-keangt simpleInput common__simple-input"
                    disabled={false}
                    id={null}
                    maxLength=""
                    name="test-input"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    onKeyPress={[Function]}
                    type="password"
                    value=""
                  />
                </SimpleInput>
              </_default>
            </li>
          </GridItem>
        </ul>
      </Grid>
      <Underline
        hasErrorMessage={false}
        isFocused={false}
      >
        <div
          className="css-ycal4l underline"
        >
          <div
            className="css-1tpmuef"
            style={
              Object {
                "borderBottomColor": "#fa5400",
                "transform": "scale3d(0,1,1)",
              }
            }
          />
        </div>
      </Underline>
      <ErrorText
        className={null}
        errorText=""
        translate={true}
      >
        <div
          className="css-hyvrm8 errorText"
        >
          <Translate
            acceptPlainTextWithPlaceholders={false}
            className={null}
            params={Object {}}
            role={null}
            string=""
          />
        </div>
      </ErrorText>
    </div>
  </FormElement>
</TextField>
`;

exports[`<TextField> should render the text field with a default value 1`] = `
<TextField
  attributes={null}
  className=""
  errorText=""
  hasUnderline={true}
  label=""
  leftElement={null}
  maxlength=""
  multiLine={false}
  name="test-input"
  onChange={[Function]}
  placeholder=""
  rightElement={null}
  type="text"
  value="FooBar"
>
  <FormElement
    className=" ui-shared__form__text-field"
    errorText=""
    hasPlaceholder={true}
    hasUnderline={true}
    hasValue={true}
    htmlFor="test-input"
    isFocused={false}
    label=""
    placeholder=""
    translateErrorText={true}
  >
    <div
      className="css-1vjh8yv  ui-shared__form__text-field formElement ui-shared__form-element"
    >
      <Placeholder
        aria-hidden={true}
        placeholder=""
        visible={false}
      >
        <div
          aria-hidden={true}
          className="css-rkuo1o css-1jyyyen placeholder"
        >
          <Translate
            acceptPlainTextWithPlaceholders={false}
            className={null}
            params={Object {}}
            role={null}
            string=""
          />
        </div>
      </Placeholder>
      <Label
        hasErrorMessage={false}
        htmlFor="test-input"
        isFloating={true}
        isFocused={false}
        label=""
      >
        <label
          className="css-1nn9zl4 css-1r91c0g css-1jyyyen label"
          htmlFor="test-input"
        >
          <Translate
            acceptPlainTextWithPlaceholders={false}
            className={null}
            params={Object {}}
            role={null}
            string=""
          />
        </label>
      </Label>
      <Grid
        className=""
        component="ul"
        wrap={false}
      >
        <ul
          className=" css-h7r55a common__grid"
        >
          <GridItem
            className="css-1kppfx4"
            component="li"
            grow={1}
            shrink={1}
          >
            <li
              className="css-1kppfx4 css-1gs0ko2"
            >
              <_default
                attributes={null}
                className="css-keangt"
                maxlength=""
                multiLine={false}
                name="test-input"
                onChange={[Function]}
                onFocusChange={[Function]}
                type="text"
                validateOnBlur={true}
                value="FooBar"
              >
                <SimpleInput
                  attributes={null}
                  autoComplete={false}
                  autoCorrect={false}
                  className="css-keangt"
                  disabled={false}
                  id={null}
                  isControlled={false}
                  maxlength=""
                  multiLine={false}
                  name="test-input"
                  onChange={[Function]}
                  onFocusChange={[Function]}
                  onKeyPress={[Function]}
                  onSanitize={[Function]}
                  onValidate={[Function]}
                  password={false}
                  setRef={[Function]}
                  type="text"
                  validateOnBlur={true}
                  value="FooBar"
                >
                  <input
                    autoComplete="off"
                    autoCorrect="off"
                    className="css-keangt simpleInput common__simple-input"
                    disabled={false}
                    id={null}
                    maxLength=""
                    name="test-input"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    onKeyPress={[Function]}
                    type="text"
                    value="FooBar"
                  />
                </SimpleInput>
              </_default>
            </li>
          </GridItem>
        </ul>
      </Grid>
      <Underline
        hasErrorMessage={false}
        isFocused={false}
      >
        <div
          className="css-ycal4l underline"
        >
          <div
            className="css-1tpmuef"
            style={
              Object {
                "borderBottomColor": "#fa5400",
                "transform": "scale3d(0,1,1)",
              }
            }
          />
        </div>
      </Underline>
      <ErrorText
        className={null}
        errorText=""
        translate={true}
      >
        <div
          className="css-hyvrm8 errorText"
        >
          <Translate
            acceptPlainTextWithPlaceholders={false}
            className={null}
            params={Object {}}
            role={null}
            string=""
          />
        </div>
      </ErrorText>
    </div>
  </FormElement>
</TextField>
`;

exports[`<TextField> should sanitize the input 1`] = `
<TextField
  attributes={null}
  className=""
  errorText=""
  hasUnderline={true}
  label=""
  leftElement={null}
  maxlength=""
  multiLine={false}
  name="test-input"
  onChange={[Function]}
  onSanitize={[Function]}
  placeholder=""
  rightElement={null}
  type="text"
  value=""
>
  <FormElement
    className=" ui-shared__form__text-field"
    errorText=""
    hasPlaceholder={true}
    hasUnderline={true}
    hasValue={false}
    htmlFor="test-input"
    isFocused={false}
    label=""
    placeholder=""
    translateErrorText={true}
  >
    <div
      className="css-1vjh8yv  ui-shared__form__text-field formElement ui-shared__form-element"
    >
      <Placeholder
        aria-hidden={true}
        placeholder=""
        visible={true}
      >
        <div
          aria-hidden={true}
          className="css-rkuo1o placeholder"
        >
          <Translate
            acceptPlainTextWithPlaceholders={false}
            className={null}
            params={Object {}}
            role={null}
            string=""
          />
        </div>
      </Placeholder>
      <Label
        hasErrorMessage={false}
        htmlFor="test-input"
        isFloating={false}
        isFocused={false}
        label=""
      >
        <label
          className="css-1nn9zl4 css-1jyyyen label"
          htmlFor="test-input"
        >
          <Translate
            acceptPlainTextWithPlaceholders={false}
            className={null}
            params={Object {}}
            role={null}
            string=""
          />
        </label>
      </Label>
      <Grid
        className=""
        component="ul"
        wrap={false}
      >
        <ul
          className=" css-h7r55a common__grid"
        >
          <GridItem
            className="css-1kppfx4"
            component="li"
            grow={1}
            shrink={1}
          >
            <li
              className="css-1kppfx4 css-1gs0ko2"
            >
              <_default
                attributes={null}
                className="css-keangt"
                maxlength=""
                multiLine={false}
                name="test-input"
                onChange={[Function]}
                onFocusChange={[Function]}
                onSanitize={[Function]}
                type="text"
                validateOnBlur={true}
                value=""
              >
                <SimpleInput
                  attributes={null}
                  autoComplete={false}
                  autoCorrect={false}
                  className="css-keangt"
                  disabled={false}
                  id={null}
                  isControlled={false}
                  maxlength=""
                  multiLine={false}
                  name="test-input"
                  onChange={[Function]}
                  onFocusChange={[Function]}
                  onKeyPress={[Function]}
                  onSanitize={[Function]}
                  onValidate={[Function]}
                  password={false}
                  setRef={[Function]}
                  type="text"
                  validateOnBlur={true}
                  value=""
                >
                  <input
                    autoComplete="off"
                    autoCorrect="off"
                    className="css-keangt simpleInput common__simple-input"
                    disabled={false}
                    id={null}
                    maxLength=""
                    name="test-input"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    onKeyPress={[Function]}
                    type="text"
                    value="FOOBAR"
                  />
                </SimpleInput>
              </_default>
            </li>
          </GridItem>
        </ul>
      </Grid>
      <Underline
        hasErrorMessage={false}
        isFocused={false}
      >
        <div
          className="css-ycal4l underline"
        >
          <div
            className="css-1tpmuef"
            style={
              Object {
                "borderBottomColor": "#fa5400",
                "transform": "scale3d(0,1,1)",
              }
            }
          />
        </div>
      </Underline>
      <ErrorText
        className={null}
        errorText=""
        translate={true}
      >
        <div
          className="css-hyvrm8 errorText"
        >
          <Translate
            acceptPlainTextWithPlaceholders={false}
            className={null}
            params={Object {}}
            role={null}
            string=""
          />
        </div>
      </ErrorText>
    </div>
  </FormElement>
</TextField>
`;

exports[`<TextField> should show the error message 1`] = `
<TextField
  attributes={null}
  className=""
  errorText="This is an error here"
  hasUnderline={true}
  label=""
  leftElement={null}
  maxlength=""
  multiLine={false}
  name="test-input"
  onChange={[Function]}
  placeholder=""
  rightElement={null}
  type="text"
  value=""
>
  <FormElement
    className=" ui-shared__form__text-field"
    errorText="This is an error here"
    hasPlaceholder={true}
    hasUnderline={true}
    hasValue={false}
    htmlFor="test-input"
    isFocused={false}
    label=""
    placeholder=""
    translateErrorText={true}
  >
    <div
      className="css-1vjh8yv  ui-shared__form__text-field formElement ui-shared__form-element"
    >
      <Placeholder
        aria-hidden={true}
        placeholder=""
        visible={true}
      >
        <div
          aria-hidden={true}
          className="css-rkuo1o placeholder"
        >
          <Translate
            acceptPlainTextWithPlaceholders={false}
            className={null}
            params={Object {}}
            role={null}
            string=""
          />
        </div>
      </Placeholder>
      <Label
        hasErrorMessage={true}
        htmlFor="test-input"
        isFloating={false}
        isFocused={false}
        label=""
      >
        <label
          className="css-1nn9zl4 css-1jyyyen label"
          htmlFor="test-input"
        >
          <Translate
            acceptPlainTextWithPlaceholders={false}
            className={null}
            params={Object {}}
            role={null}
            string=""
          />
        </label>
      </Label>
      <Grid
        className=""
        component="ul"
        wrap={false}
      >
        <ul
          className=" css-h7r55a common__grid"
        >
          <GridItem
            className="css-1kppfx4"
            component="li"
            grow={1}
            shrink={1}
          >
            <li
              className="css-1kppfx4 css-1gs0ko2"
            >
              <_default
                attributes={null}
                className="css-keangt"
                maxlength=""
                multiLine={false}
                name="test-input"
                onChange={[Function]}
                onFocusChange={[Function]}
                type="text"
                validateOnBlur={true}
                value=""
              >
                <SimpleInput
                  attributes={null}
                  autoComplete={false}
                  autoCorrect={false}
                  className="css-keangt"
                  disabled={false}
                  id={null}
                  isControlled={false}
                  maxlength=""
                  multiLine={false}
                  name="test-input"
                  onChange={[Function]}
                  onFocusChange={[Function]}
                  onKeyPress={[Function]}
                  onSanitize={[Function]}
                  onValidate={[Function]}
                  password={false}
                  setRef={[Function]}
                  type="text"
                  validateOnBlur={true}
                  value=""
                >
                  <input
                    autoComplete="off"
                    autoCorrect="off"
                    className="css-keangt simpleInput common__simple-input"
                    disabled={false}
                    id={null}
                    maxLength=""
                    name="test-input"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    onKeyPress={[Function]}
                    type="text"
                    value=""
                  />
                </SimpleInput>
              </_default>
            </li>
          </GridItem>
        </ul>
      </Grid>
      <Underline
        hasErrorMessage={true}
        isFocused={false}
      >
        <div
          className="css-ycal4l underline"
        >
          <div
            className="css-1tpmuef"
            style={
              Object {
                "borderBottomColor": "#ff0000",
              }
            }
          />
        </div>
      </Underline>
      <ErrorText
        className={null}
        errorText="This is an error here"
        translate={true}
      >
        <div
          className="css-hyvrm8 errorText"
        >
          <Translate
            acceptPlainTextWithPlaceholders={false}
            className={null}
            params={Object {}}
            role={null}
            string="This is an error here"
          >
            <span
              className={null}
              role={null}
            >
              This is an error here
            </span>
          </Translate>
        </div>
      </ErrorText>
    </div>
  </FormElement>
</TextField>
`;

exports[`<TextField> should show the label 1`] = `
<TextField
  attributes={null}
  className=""
  errorText=""
  hasUnderline={true}
  label="This is the label"
  leftElement={null}
  maxlength=""
  multiLine={false}
  name="test-input"
  onChange={[Function]}
  placeholder=""
  rightElement={null}
  type="text"
  value=""
>
  <FormElement
    className=" ui-shared__form__text-field"
    errorText=""
    hasPlaceholder={true}
    hasUnderline={true}
    hasValue={false}
    htmlFor="test-input"
    isFocused={false}
    label="This is the label"
    placeholder=""
    translateErrorText={true}
  >
    <div
      className="css-1vjh8yv  ui-shared__form__text-field formElement ui-shared__form-element"
    >
      <Placeholder
        aria-hidden={true}
        placeholder="This is the label"
        visible={true}
      >
        <div
          aria-hidden={true}
          className="css-rkuo1o placeholder"
        >
          <Translate
            acceptPlainTextWithPlaceholders={false}
            className={null}
            params={Object {}}
            role={null}
            string="This is the label"
          >
            <span
              className={null}
              role={null}
            >
              This is the label
            </span>
          </Translate>
        </div>
      </Placeholder>
      <Label
        hasErrorMessage={false}
        htmlFor="test-input"
        isFloating={false}
        isFocused={false}
        label="This is the label"
      >
        <label
          className="css-1nn9zl4 css-1jyyyen label"
          htmlFor="test-input"
        >
          <Translate
            acceptPlainTextWithPlaceholders={false}
            className={null}
            params={Object {}}
            role={null}
            string="This is the label"
          >
            <span
              className={null}
              role={null}
            >
              This is the label
            </span>
          </Translate>
        </label>
      </Label>
      <Grid
        className=""
        component="ul"
        wrap={false}
      >
        <ul
          className=" css-h7r55a common__grid"
        >
          <GridItem
            className="css-1kppfx4"
            component="li"
            grow={1}
            shrink={1}
          >
            <li
              className="css-1kppfx4 css-1gs0ko2"
            >
              <_default
                attributes={null}
                className="css-keangt"
                maxlength=""
                multiLine={false}
                name="test-input"
                onChange={[Function]}
                onFocusChange={[Function]}
                type="text"
                validateOnBlur={true}
                value=""
              >
                <SimpleInput
                  attributes={null}
                  autoComplete={false}
                  autoCorrect={false}
                  className="css-keangt"
                  disabled={false}
                  id={null}
                  isControlled={false}
                  maxlength=""
                  multiLine={false}
                  name="test-input"
                  onChange={[Function]}
                  onFocusChange={[Function]}
                  onKeyPress={[Function]}
                  onSanitize={[Function]}
                  onValidate={[Function]}
                  password={false}
                  setRef={[Function]}
                  type="text"
                  validateOnBlur={true}
                  value=""
                >
                  <input
                    autoComplete="off"
                    autoCorrect="off"
                    className="css-keangt simpleInput common__simple-input"
                    disabled={false}
                    id={null}
                    maxLength=""
                    name="test-input"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    onKeyPress={[Function]}
                    type="text"
                    value=""
                  />
                </SimpleInput>
              </_default>
            </li>
          </GridItem>
        </ul>
      </Grid>
      <Underline
        hasErrorMessage={false}
        isFocused={false}
      >
        <div
          className="css-ycal4l underline"
        >
          <div
            className="css-1tpmuef"
            style={
              Object {
                "borderBottomColor": "#fa5400",
                "transform": "scale3d(0,1,1)",
              }
            }
          />
        </div>
      </Underline>
      <ErrorText
        className={null}
        errorText=""
        translate={true}
      >
        <div
          className="css-hyvrm8 errorText"
        >
          <Translate
            acceptPlainTextWithPlaceholders={false}
            className={null}
            params={Object {}}
            role={null}
            string=""
          />
        </div>
      </ErrorText>
    </div>
  </FormElement>
</TextField>
`;

exports[`<TextField> should show the placeholder text 1`] = `
<TextField
  attributes={null}
  className=""
  errorText=""
  hasUnderline={true}
  label=""
  leftElement={null}
  maxlength=""
  multiLine={false}
  name="test-input"
  onChange={[Function]}
  placeholder="This is the placeholder text"
  rightElement={null}
  type="text"
  value=""
>
  <FormElement
    className=" ui-shared__form__text-field"
    errorText=""
    hasPlaceholder={true}
    hasUnderline={true}
    hasValue={false}
    htmlFor="test-input"
    isFocused={false}
    label=""
    placeholder="This is the placeholder text"
    translateErrorText={true}
  >
    <div
      className="css-1vjh8yv  ui-shared__form__text-field formElement ui-shared__form-element"
    >
      <Placeholder
        aria-hidden={true}
        placeholder="This is the placeholder text"
        visible={true}
      >
        <div
          aria-hidden={true}
          className="css-rkuo1o placeholder"
        >
          <Translate
            acceptPlainTextWithPlaceholders={false}
            className={null}
            params={Object {}}
            role={null}
            string="This is the placeholder text"
          >
            <span
              className={null}
              role={null}
            >
              This is the placeholder text
            </span>
          </Translate>
        </div>
      </Placeholder>
      <Label
        hasErrorMessage={false}
        htmlFor="test-input"
        isFloating={false}
        isFocused={false}
        label=""
      >
        <label
          className="css-1nn9zl4 css-1jyyyen label"
          htmlFor="test-input"
        >
          <Translate
            acceptPlainTextWithPlaceholders={false}
            className={null}
            params={Object {}}
            role={null}
            string=""
          />
        </label>
      </Label>
      <Grid
        className=""
        component="ul"
        wrap={false}
      >
        <ul
          className=" css-h7r55a common__grid"
        >
          <GridItem
            className="css-1kppfx4"
            component="li"
            grow={1}
            shrink={1}
          >
            <li
              className="css-1kppfx4 css-1gs0ko2"
            >
              <_default
                attributes={null}
                className="css-keangt"
                maxlength=""
                multiLine={false}
                name="test-input"
                onChange={[Function]}
                onFocusChange={[Function]}
                type="text"
                validateOnBlur={true}
                value=""
              >
                <SimpleInput
                  attributes={null}
                  autoComplete={false}
                  autoCorrect={false}
                  className="css-keangt"
                  disabled={false}
                  id={null}
                  isControlled={false}
                  maxlength=""
                  multiLine={false}
                  name="test-input"
                  onChange={[Function]}
                  onFocusChange={[Function]}
                  onKeyPress={[Function]}
                  onSanitize={[Function]}
                  onValidate={[Function]}
                  password={false}
                  setRef={[Function]}
                  type="text"
                  validateOnBlur={true}
                  value=""
                >
                  <input
                    autoComplete="off"
                    autoCorrect="off"
                    className="css-keangt simpleInput common__simple-input"
                    disabled={false}
                    id={null}
                    maxLength=""
                    name="test-input"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    onKeyPress={[Function]}
                    type="text"
                    value=""
                  />
                </SimpleInput>
              </_default>
            </li>
          </GridItem>
        </ul>
      </Grid>
      <Underline
        hasErrorMessage={false}
        isFocused={false}
      >
        <div
          className="css-ycal4l underline"
        >
          <div
            className="css-1tpmuef"
            style={
              Object {
                "borderBottomColor": "#fa5400",
                "transform": "scale3d(0,1,1)",
              }
            }
          />
        </div>
      </Underline>
      <ErrorText
        className={null}
        errorText=""
        translate={true}
      >
        <div
          className="css-hyvrm8 errorText"
        >
          <Translate
            acceptPlainTextWithPlaceholders={false}
            className={null}
            params={Object {}}
            role={null}
            string=""
          />
        </div>
      </ErrorText>
    </div>
  </FormElement>
</TextField>
`;

exports[`<TextField> should trigger the onChange callback 1`] = `
<TextField
  attributes={null}
  className=""
  errorText=""
  hasUnderline={true}
  label=""
  leftElement={null}
  maxlength=""
  multiLine={false}
  name="test-input"
  onChange={
    [MockFunction] {
      "calls": Array [
        Array [
          "",
        ],
        Array [
          "a",
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  placeholder=""
  rightElement={null}
  type="text"
  value=""
>
  <FormElement
    className=" ui-shared__form__text-field"
    errorText=""
    hasPlaceholder={true}
    hasUnderline={true}
    hasValue={false}
    htmlFor="test-input"
    isFocused={false}
    label=""
    placeholder=""
    translateErrorText={true}
  >
    <div
      className="css-1vjh8yv  ui-shared__form__text-field formElement ui-shared__form-element"
    >
      <Placeholder
        aria-hidden={true}
        placeholder=""
        visible={true}
      >
        <div
          aria-hidden={true}
          className="css-rkuo1o placeholder"
        >
          <Translate
            acceptPlainTextWithPlaceholders={false}
            className={null}
            params={Object {}}
            role={null}
            string=""
          />
        </div>
      </Placeholder>
      <Label
        hasErrorMessage={false}
        htmlFor="test-input"
        isFloating={false}
        isFocused={false}
        label=""
      >
        <label
          className="css-1nn9zl4 css-1jyyyen label"
          htmlFor="test-input"
        >
          <Translate
            acceptPlainTextWithPlaceholders={false}
            className={null}
            params={Object {}}
            role={null}
            string=""
          />
        </label>
      </Label>
      <Grid
        className=""
        component="ul"
        wrap={false}
      >
        <ul
          className=" css-h7r55a common__grid"
        >
          <GridItem
            className="css-1kppfx4"
            component="li"
            grow={1}
            shrink={1}
          >
            <li
              className="css-1kppfx4 css-1gs0ko2"
            >
              <_default
                attributes={null}
                className="css-keangt"
                maxlength=""
                multiLine={false}
                name="test-input"
                onChange={
                  [MockFunction] {
                    "calls": Array [
                      Array [
                        "",
                      ],
                      Array [
                        "a",
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                    ],
                  }
                }
                onFocusChange={[Function]}
                type="text"
                validateOnBlur={true}
                value=""
              >
                <SimpleInput
                  attributes={null}
                  autoComplete={false}
                  autoCorrect={false}
                  className="css-keangt"
                  disabled={false}
                  id={null}
                  isControlled={false}
                  maxlength=""
                  multiLine={false}
                  name="test-input"
                  onChange={
                    [MockFunction] {
                      "calls": Array [
                        Array [
                          "",
                        ],
                        Array [
                          "a",
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    }
                  }
                  onFocusChange={[Function]}
                  onKeyPress={[Function]}
                  onSanitize={[Function]}
                  onValidate={[Function]}
                  password={false}
                  setRef={[Function]}
                  type="text"
                  validateOnBlur={true}
                  value=""
                >
                  <input
                    autoComplete="off"
                    autoCorrect="off"
                    className="css-keangt simpleInput common__simple-input"
                    disabled={false}
                    id={null}
                    maxLength=""
                    name="test-input"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    onKeyPress={[Function]}
                    type="text"
                    value="a"
                  />
                </SimpleInput>
              </_default>
            </li>
          </GridItem>
        </ul>
      </Grid>
      <Underline
        hasErrorMessage={false}
        isFocused={false}
      >
        <div
          className="css-ycal4l underline"
        >
          <div
            className="css-1tpmuef"
            style={
              Object {
                "borderBottomColor": "#fa5400",
                "transform": "scale3d(0,1,1)",
              }
            }
          />
        </div>
      </Underline>
      <ErrorText
        className={null}
        errorText=""
        translate={true}
      >
        <div
          className="css-hyvrm8 errorText"
        >
          <Translate
            acceptPlainTextWithPlaceholders={false}
            className={null}
            params={Object {}}
            role={null}
            string=""
          />
        </div>
      </ErrorText>
    </div>
  </FormElement>
</TextField>
`;

exports[`<TextField> should trigger the validation callback 1`] = `
<TextField
  attributes={null}
  className=""
  errorText=""
  hasUnderline={true}
  label=""
  leftElement={null}
  maxlength=""
  multiLine={false}
  name="test-input"
  onChange={[Function]}
  onValidate={
    [MockFunction] {
      "calls": Array [
        Array [
          "",
          true,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  placeholder=""
  rightElement={null}
  type="text"
  value=""
>
  <FormElement
    className=" ui-shared__form__text-field"
    errorText=""
    hasPlaceholder={true}
    hasUnderline={true}
    hasValue={false}
    htmlFor="test-input"
    isFocused={false}
    label=""
    placeholder=""
    translateErrorText={true}
  >
    <div
      className="css-1vjh8yv  ui-shared__form__text-field formElement ui-shared__form-element"
    >
      <Placeholder
        aria-hidden={true}
        placeholder=""
        visible={true}
      >
        <div
          aria-hidden={true}
          className="css-rkuo1o placeholder"
        >
          <Translate
            acceptPlainTextWithPlaceholders={false}
            className={null}
            params={Object {}}
            role={null}
            string=""
          />
        </div>
      </Placeholder>
      <Label
        hasErrorMessage={false}
        htmlFor="test-input"
        isFloating={false}
        isFocused={false}
        label=""
      >
        <label
          className="css-1nn9zl4 css-1jyyyen label"
          htmlFor="test-input"
        >
          <Translate
            acceptPlainTextWithPlaceholders={false}
            className={null}
            params={Object {}}
            role={null}
            string=""
          />
        </label>
      </Label>
      <Grid
        className=""
        component="ul"
        wrap={false}
      >
        <ul
          className=" css-h7r55a common__grid"
        >
          <GridItem
            className="css-1kppfx4"
            component="li"
            grow={1}
            shrink={1}
          >
            <li
              className="css-1kppfx4 css-1gs0ko2"
            >
              <_default
                attributes={null}
                className="css-keangt"
                maxlength=""
                multiLine={false}
                name="test-input"
                onChange={[Function]}
                onFocusChange={[Function]}
                onValidate={
                  [MockFunction] {
                    "calls": Array [
                      Array [
                        "",
                        true,
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                    ],
                  }
                }
                type="text"
                validateOnBlur={true}
                value=""
              >
                <SimpleInput
                  attributes={null}
                  autoComplete={false}
                  autoCorrect={false}
                  className="css-keangt"
                  disabled={false}
                  id={null}
                  isControlled={false}
                  maxlength=""
                  multiLine={false}
                  name="test-input"
                  onChange={[Function]}
                  onFocusChange={[Function]}
                  onKeyPress={[Function]}
                  onSanitize={[Function]}
                  onValidate={
                    [MockFunction] {
                      "calls": Array [
                        Array [
                          "",
                          true,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    }
                  }
                  password={false}
                  setRef={[Function]}
                  type="text"
                  validateOnBlur={true}
                  value=""
                >
                  <input
                    autoComplete="off"
                    autoCorrect="off"
                    className="css-keangt simpleInput common__simple-input"
                    disabled={false}
                    id={null}
                    maxLength=""
                    name="test-input"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    onKeyPress={[Function]}
                    type="text"
                    value=""
                  />
                </SimpleInput>
              </_default>
            </li>
          </GridItem>
        </ul>
      </Grid>
      <Underline
        hasErrorMessage={false}
        isFocused={false}
      >
        <div
          className="css-ycal4l underline"
        >
          <div
            className="css-1tpmuef"
            style={
              Object {
                "borderBottomColor": "#fa5400",
                "transform": "scale3d(0,1,1)",
              }
            }
          />
        </div>
      </Underline>
      <ErrorText
        className={null}
        errorText=""
        translate={true}
      >
        <div
          className="css-hyvrm8 errorText"
        >
          <Translate
            acceptPlainTextWithPlaceholders={false}
            className={null}
            params={Object {}}
            role={null}
            string=""
          />
        </div>
      </ErrorText>
    </div>
  </FormElement>
</TextField>
`;
