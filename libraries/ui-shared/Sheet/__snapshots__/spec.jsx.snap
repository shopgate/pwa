// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Sheet /> should open 1`] = `
<Sheet
  animation={Object {}}
  backdrop={true}
  className={null}
  contentClassName={null}
  duration={300}
  isOpen={true}
  onClose={[Function]}
  onOpen={[Function]}
  title="Test-Title"
>
  <section>
    <Drawer
      alwaysActive={false}
      animation={
        Object {
          "duration": 300,
          "in": "css-32zjx4",
          "out": "css-15ct02m",
        }
      }
      className="css-ruonn8"
      isOpen={true}
      onClose={[Function]}
      onDidClose={[Function]}
      onOpen={[Function]}
    >
      <div
        className="css-ruonn8 css-1rg7udn css-32zjx4"
        onAnimationEnd={[Function]}
        style={
          Object {
            "animationDuration": "300ms",
          }
        }
      >
        <Header
          onToggleClose={[Function]}
          shadow={false}
          title="Test-Title"
        >
          <Grid
            className="css-1hncgty"
            component="div"
            wrap={false}
          >
            <div
              className="css-1hncgty css-h7r55a"
            >
              <button
                className="css-b3dcfs"
                onClick={[Function]}
              >
                <Ripple
                  className="css-ugy6xl"
                  color="#000"
                  disabled={false}
                  fill={false}
                  onClick={[Function]}
                  onComplete={[Function]}
                  overflow={false}
                  size={null}
                >
                  <div
                    aria-hidden={true}
                    className="css-ugy6xl"
                    data-test-id="Ripple"
                    onClick={[Function]}
                    style={null}
                  >
                    <Cross
                      size={24}
                    >
                      <Icon
                        className=""
                        color={null}
                        content="<path d=\\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\\"/>"
                        size={24}
                        viewBox="0 0 24 24"
                      >
                        <svg
                          className="css-yys9hb "
                          dangerouslySetInnerHTML={
                            Object {
                              "__html": "<path d=\\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\\"/>",
                            }
                          }
                          style={
                            Object {
                              "fill": null,
                              "fontSize": 24,
                            }
                          }
                          viewBox="0 0 24 24"
                          xmlns="http://www.w3.org/2000/svg"
                        />
                      </Icon>
                    </Cross>
                  </div>
                </Ripple>
              </button>
              <GridItem
                className="css-1mjy0de"
                component="div"
                grow={1}
                shrink={1}
              >
                <div
                  className="css-1mjy0de css-1gs0ko2"
                >
                  Test-Title
                </div>
              </GridItem>
            </div>
          </Grid>
        </Header>
        <div
          className="css-1aon90l"
          onScroll={[Function]}
        >
          <div
            key=".0"
          >
            Test
          </div>
        </div>
      </div>
    </Drawer>
    <Backdrop
      className=""
      color="#000"
      duration={200}
      isVisible={true}
      level={4}
      onClick={[Function]}
      opacity={20}
    >
      <Transition
        childrenStyles={
          Object {
            "appear": Object {
              "opacity": 0.2,
            },
            "base": Object {
              "background": "#000",
              "opacity": 0,
              "transition": "opacity 200ms ease-out",
              "zIndex": 4,
            },
            "enter": Object {
              "opacity": 0.2,
            },
            "leave": Object {
              "opacity": 0,
            },
          }
        }
        component="div"
      >
        <TransitionHooks
          component="div"
        >
          <div>
            <TransitionChild
              childrenAppearStyle={
                Object {
                  "opacity": 0.2,
                }
              }
              childrenBaseStyle={
                Object {
                  "background": "#000",
                  "opacity": 0,
                  "transition": "opacity 200ms ease-out",
                  "zIndex": 4,
                }
              }
              childrenEnterStyle={
                Object {
                  "opacity": 0.2,
                }
              }
              childrenLeaveStyle={
                Object {
                  "opacity": 0,
                }
              }
              key=".$.0"
            >
              <div
                aria-hidden={true}
                className="css-hlk66h "
                data-test-id="Backdrop"
                onClick={[Function]}
                style={
                  Object {
                    "background": "#000",
                    "opacity": 0,
                    "transition": "opacity 200ms ease-out",
                    "zIndex": 4,
                  }
                }
              />
            </TransitionChild>
          </div>
        </TransitionHooks>
      </Transition>
    </Backdrop>
  </section>
</Sheet>
`;

exports[`<Sheet /> should render closed without content 1`] = `
<section>
  <Drawer
    alwaysActive={false}
    animation={
      Object {
        "duration": 300,
        "in": "css-32zjx4",
        "out": "css-15ct02m",
      }
    }
    className="css-ruonn8"
    isOpen={false}
    onClose={[Function]}
    onDidClose={[Function]}
    onOpen={[Function]}
  >
    <div
      className="css-1aon90l"
      onScroll={[Function]}
    />
  </Drawer>
  <Backdrop
    className=""
    color="#000"
    duration={200}
    isVisible={false}
    level={4}
    onClick={[Function]}
    opacity={20}
  />
</section>
`;

exports[`<Sheet /> should render opened without content 1`] = `
<section>
  <Drawer
    alwaysActive={false}
    animation={
      Object {
        "duration": 300,
        "in": "css-32zjx4",
        "out": "css-15ct02m",
      }
    }
    className="css-ruonn8"
    isOpen={true}
    onClose={[Function]}
    onDidClose={[Function]}
    onOpen={[Function]}
  >
    <div
      className="css-1aon90l"
      onScroll={[Function]}
    />
  </Drawer>
  <Backdrop
    className=""
    color="#000"
    duration={200}
    isVisible={true}
    level={4}
    onClick={[Function]}
    opacity={20}
  />
</section>
`;

exports[`<Sheet /> should render with content and title 1`] = `
<section>
  <Drawer
    alwaysActive={false}
    animation={
      Object {
        "duration": 300,
        "in": "css-32zjx4",
        "out": "css-15ct02m",
      }
    }
    className="css-ruonn8"
    isOpen={true}
    onClose={[Function]}
    onDidClose={[Function]}
    onOpen={[Function]}
  >
    <Header
      onToggleClose={[Function]}
      shadow={false}
      title="Test-Title"
    />
    <div
      className="css-1aon90l"
      onScroll={[Function]}
    >
      <div
        key=".0"
      >
        Test
      </div>
    </div>
  </Drawer>
  <Backdrop
    className=""
    color="#000"
    duration={200}
    isVisible={true}
    level={4}
    onClick={[Function]}
    opacity={20}
  />
</section>
`;

exports[`<Sheet /> should trigger onClose callback and close the Sheet 1`] = `
<Sheet
  animation={Object {}}
  backdrop={true}
  className={null}
  contentClassName={null}
  duration={300}
  isOpen={true}
  onClose={
    [MockFunction] {
      "calls": Array [
        Array [],
        Array [],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": undefined,
        },
        Object {
          "isThrow": false,
          "value": undefined,
        },
      ],
    }
  }
  onOpen={[Function]}
  title="Test-Title"
>
  <section>
    <Drawer
      alwaysActive={false}
      animation={
        Object {
          "duration": 300,
          "in": "css-32zjx4",
          "out": "css-15ct02m",
        }
      }
      className="css-ruonn8"
      isOpen={false}
      onClose={[Function]}
      onDidClose={[Function]}
      onOpen={[Function]}
    >
      <div
        className="css-ruonn8 css-1rg7udn css-15ct02m"
        onAnimationEnd={[Function]}
        style={
          Object {
            "animationDuration": "300ms",
          }
        }
      >
        <Header
          onToggleClose={[Function]}
          shadow={false}
          title="Test-Title"
        >
          <Grid
            className="css-1hncgty"
            component="div"
            wrap={false}
          >
            <div
              className="css-1hncgty css-h7r55a"
            >
              <button
                className="css-b3dcfs"
                onClick={[Function]}
              >
                <Ripple
                  className="css-ugy6xl"
                  color="#000"
                  disabled={false}
                  fill={false}
                  onClick={[Function]}
                  onComplete={[Function]}
                  overflow={false}
                  size={null}
                >
                  <div
                    aria-hidden={true}
                    className="css-ugy6xl"
                    data-test-id="Ripple"
                    onClick={[Function]}
                    style={null}
                  >
                    <Cross
                      size={24}
                    >
                      <Icon
                        className=""
                        color={null}
                        content="<path d=\\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\\"/>"
                        size={24}
                        viewBox="0 0 24 24"
                      >
                        <svg
                          className="css-yys9hb "
                          dangerouslySetInnerHTML={
                            Object {
                              "__html": "<path d=\\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\\"/>",
                            }
                          }
                          style={
                            Object {
                              "fill": null,
                              "fontSize": 24,
                            }
                          }
                          viewBox="0 0 24 24"
                          xmlns="http://www.w3.org/2000/svg"
                        />
                      </Icon>
                    </Cross>
                  </div>
                </Ripple>
              </button>
              <GridItem
                className="css-1mjy0de"
                component="div"
                grow={1}
                shrink={1}
              >
                <div
                  className="css-1mjy0de css-1gs0ko2"
                >
                  Test-Title
                </div>
              </GridItem>
            </div>
          </Grid>
        </Header>
        <div
          className="css-1aon90l"
          onScroll={[Function]}
        >
          <div
            key=".0"
          >
            Test
          </div>
        </div>
      </div>
    </Drawer>
    <Backdrop
      className=""
      color="#000"
      duration={200}
      isVisible={false}
      level={4}
      onClick={[Function]}
      opacity={20}
    >
      <Transition
        childrenStyles={
          Object {
            "appear": Object {
              "opacity": 0.2,
            },
            "base": Object {
              "background": "#000",
              "opacity": 0,
              "transition": "opacity 200ms ease-out",
              "zIndex": 4,
            },
            "enter": Object {
              "opacity": 0.2,
            },
            "leave": Object {
              "opacity": 0,
            },
          }
        }
        component="div"
      >
        <TransitionHooks
          component="div"
        >
          <div>
            <TransitionChild
              childrenAppearStyle={
                Object {
                  "opacity": 0.2,
                }
              }
              childrenBaseStyle={
                Object {
                  "background": "#000",
                  "opacity": 0,
                  "transition": "opacity 200ms ease-out",
                  "zIndex": 4,
                }
              }
              childrenEnterStyle={
                Object {
                  "opacity": 0.2,
                }
              }
              childrenLeaveStyle={
                Object {
                  "opacity": 0,
                }
              }
              key=".$.0"
            >
              <div
                aria-hidden={true}
                className="css-hlk66h "
                data-test-id="Backdrop"
                onClick={[Function]}
                style={
                  Object {
                    "background": "#000",
                    "opacity": 0,
                    "transition": "opacity 200ms ease-out",
                    "zIndex": 4,
                  }
                }
              />
            </TransitionChild>
          </div>
        </TransitionHooks>
      </Transition>
    </Backdrop>
  </section>
</Sheet>
`;
