// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<CartItemQuantityPicker /> Given editMode prop is handled correctly should blur the input, if the editMode is disabled via prop 1`] = `
<CartItemQuantityPicker
  disabled={false}
  editMode={false}
  hasCatchWeight={false}
  onChange={[Function]}
  onToggleEditMode={[Function]}
  quantity={1}
  unit={null}
>
  <form
    className="theme__cart__product__quantity-picker"
    onSubmit={[Function]}
  >
    <ForwardRef
      aria-label="product.quantity"
      className="css-1bncmx2"
      data-test-id="quantityPicker"
      disabled={false}
      maxDecimals={0}
      maxValue={null}
      minValue={null}
      onBlur={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      unit={null}
      value={1}
    >
      <input
        aria-label="product.quantity"
        className="css-1bncmx2"
        data-test-id="quantityPicker"
        disabled={false}
        inputMode="numeric"
        onBlur={[Function]}
        onChange={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        pattern="[0–9]*"
        value="1"
      />
    </ForwardRef>
  </form>
</CartItemQuantityPicker>
`;

exports[`<CartItemQuantityPicker /> Given editMode prop is handled correctly should focus the input, if the editMode is enabled via prop 1`] = `
<CartItemQuantityPicker
  disabled={false}
  editMode={true}
  hasCatchWeight={false}
  onChange={[Function]}
  onToggleEditMode={[Function]}
  quantity={1}
  unit={null}
>
  <form
    className="theme__cart__product__quantity-picker"
    onSubmit={[Function]}
  >
    <ForwardRef
      aria-label="product.quantity"
      className="css-1bncmx2"
      data-test-id="quantityPicker"
      disabled={false}
      maxDecimals={0}
      maxValue={null}
      minValue={null}
      onBlur={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      unit={null}
      value={1}
    >
      <input
        aria-label="product.quantity"
        className="css-1bncmx2"
        data-test-id="quantityPicker"
        disabled={false}
        inputMode="numeric"
        onBlur={[Function]}
        onChange={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        pattern="[0–9]*"
        value="1"
      />
    </ForwardRef>
  </form>
</CartItemQuantityPicker>
`;

exports[`<CartItemQuantityPicker /> Given onChange callback is triggered correctly should not trigger the callback when the input didn't change 1`] = `
<CartItemQuantityPicker
  disabled={false}
  editMode={false}
  hasCatchWeight={false}
  onChange={[MockFunction]}
  onToggleEditMode={[Function]}
  quantity={2}
  unit={null}
>
  <form
    className="theme__cart__product__quantity-picker"
    onSubmit={[Function]}
  >
    <ForwardRef
      aria-label="product.quantity"
      className="css-1bncmx2"
      data-test-id="quantityPicker"
      disabled={false}
      maxDecimals={0}
      maxValue={null}
      minValue={null}
      onBlur={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      unit={null}
      value={2}
    >
      <input
        aria-label="product.quantity"
        className="css-1bncmx2"
        data-test-id="quantityPicker"
        disabled={false}
        inputMode="numeric"
        onBlur={[Function]}
        onChange={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        pattern="[0–9]*"
        value="2"
      />
    </ForwardRef>
  </form>
</CartItemQuantityPicker>
`;

exports[`<CartItemQuantityPicker /> Given onChange callback is triggered correctly should trigger the callback when the input changed 1`] = `
<CartItemQuantityPicker
  disabled={false}
  editMode={false}
  hasCatchWeight={false}
  onChange={
    [MockFunction] {
      "calls": Array [
        Array [
          123,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  onToggleEditMode={[Function]}
  quantity={2}
  unit={null}
>
  <form
    className="theme__cart__product__quantity-picker"
    onSubmit={[Function]}
  >
    <ForwardRef
      aria-label="product.quantity"
      className="css-1bncmx2"
      data-test-id="quantityPicker"
      disabled={false}
      maxDecimals={0}
      maxValue={null}
      minValue={null}
      onBlur={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      unit={null}
      value={2}
    >
      <input
        aria-label="product.quantity"
        className="css-1bncmx2"
        data-test-id="quantityPicker"
        disabled={false}
        inputMode="numeric"
        onBlur={[Function]}
        onChange={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        pattern="[0–9]*"
        value="123"
      />
    </ForwardRef>
  </form>
</CartItemQuantityPicker>
`;

exports[`<CartItemQuantityPicker /> Given onToggleEditMode callback is triggered correctly should trigger the callback when the input was blurred 1`] = `
<CartItemQuantityPicker
  disabled={false}
  editMode={false}
  hasCatchWeight={false}
  onChange={[Function]}
  onToggleEditMode={
    [MockFunction] {
      "calls": Array [
        Array [
          true,
        ],
        Array [
          false,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  quantity={1}
  unit={null}
>
  <form
    className="theme__cart__product__quantity-picker"
    onSubmit={[Function]}
  >
    <ForwardRef
      aria-label="product.quantity"
      className="css-1bncmx2"
      data-test-id="quantityPicker"
      disabled={false}
      maxDecimals={0}
      maxValue={null}
      minValue={null}
      onBlur={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      unit={null}
      value={1}
    >
      <input
        aria-label="product.quantity"
        className="css-1bncmx2"
        data-test-id="quantityPicker"
        disabled={false}
        inputMode="numeric"
        onBlur={[Function]}
        onChange={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        pattern="[0–9]*"
        value="1"
      />
    </ForwardRef>
  </form>
</CartItemQuantityPicker>
`;

exports[`<CartItemQuantityPicker /> Given onToggleEditMode callback is triggered correctly should trigger the callback when the input was focused 1`] = `
<CartItemQuantityPicker
  disabled={false}
  editMode={false}
  hasCatchWeight={false}
  onChange={[Function]}
  onToggleEditMode={
    [MockFunction] {
      "calls": Array [
        Array [
          true,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  quantity={1}
  unit={null}
>
  <form
    className="theme__cart__product__quantity-picker"
    onSubmit={[Function]}
  >
    <ForwardRef
      aria-label="product.quantity"
      className="css-1bncmx2"
      data-test-id="quantityPicker"
      disabled={false}
      maxDecimals={0}
      maxValue={null}
      minValue={null}
      onBlur={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      unit={null}
      value={1}
    >
      <input
        aria-label="product.quantity"
        className="css-1bncmx2"
        data-test-id="quantityPicker"
        disabled={false}
        inputMode="numeric"
        onBlur={[Function]}
        onChange={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        pattern="[0–9]*"
        value="1"
      />
    </ForwardRef>
  </form>
</CartItemQuantityPicker>
`;

exports[`<CartItemQuantityPicker /> should fall back to the previous value when the last value was invalid 1`] = `
<CartItemQuantityPicker
  disabled={false}
  editMode={false}
  onChange={[Function]}
  onToggleEditMode={[Function]}
  quantity={124}
  unit={null}
>
  <form
    onSubmit={[Function]}
  >
    <ForwardRef
      aria-label="product.quantity"
      className="css-1bncmx2"
      data-test-id="quantityPicker"
      disabled={false}
      maxDecimals={0}
      onBlur={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      unit={null}
      value={124}
    >
      <input
        aria-label="product.quantity"
        className="css-1bncmx2"
        data-test-id="quantityPicker"
        disabled={false}
        inputMode="decimal"
        onBlur={[Function]}
        onChange={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        pattern="[0-9.,]*"
        value="124"
      />
    </ForwardRef>
  </form>
</CartItemQuantityPicker>
`;

exports[`<CartItemQuantityPicker /> should have an amount of 1 by default 1`] = `
<CartItemQuantityPicker
  disabled={false}
  editMode={false}
  hasCatchWeight={false}
  onChange={[Function]}
  onToggleEditMode={[Function]}
  quantity={1}
  unit={null}
>
  <form
    className="theme__cart__product__quantity-picker"
    onSubmit={[Function]}
  >
    <ForwardRef
      aria-label="product.quantity"
      className="css-1bncmx2"
      data-test-id="quantityPicker"
      disabled={false}
      maxDecimals={0}
      maxValue={null}
      minValue={null}
      onBlur={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      unit={null}
      value={1}
    >
      <input
        aria-label="product.quantity"
        className="css-1bncmx2"
        data-test-id="quantityPicker"
        disabled={false}
        inputMode="numeric"
        onBlur={[Function]}
        onChange={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        pattern="[0–9]*"
        value="1"
      />
    </ForwardRef>
  </form>
</CartItemQuantityPicker>
`;

exports[`<CartItemQuantityPicker /> should have an amount of 3 via prop 1`] = `
<CartItemQuantityPicker
  disabled={false}
  editMode={false}
  hasCatchWeight={false}
  onChange={[Function]}
  onToggleEditMode={[Function]}
  quantity={3}
  unit={null}
>
  <form
    className="theme__cart__product__quantity-picker"
    onSubmit={[Function]}
  >
    <ForwardRef
      aria-label="product.quantity"
      className="css-1bncmx2"
      data-test-id="quantityPicker"
      disabled={false}
      maxDecimals={0}
      maxValue={null}
      minValue={null}
      onBlur={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      unit={null}
      value={3}
    >
      <input
        aria-label="product.quantity"
        className="css-1bncmx2"
        data-test-id="quantityPicker"
        disabled={false}
        inputMode="numeric"
        onBlur={[Function]}
        onChange={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        pattern="[0–9]*"
        value="3"
      />
    </ForwardRef>
  </form>
</CartItemQuantityPicker>
`;

exports[`<CartItemQuantityPicker /> should have an mount of 0, if 0 is supplied 1`] = `
<CartItemQuantityPicker
  disabled={false}
  editMode={false}
  hasCatchWeight={false}
  onChange={[Function]}
  onToggleEditMode={[Function]}
  quantity={0}
  unit={null}
>
  <form
    className="theme__cart__product__quantity-picker"
    onSubmit={[Function]}
  >
    <ForwardRef
      aria-label="product.quantity"
      className="css-1bncmx2"
      data-test-id="quantityPicker"
      disabled={false}
      maxDecimals={0}
      maxValue={null}
      minValue={null}
      onBlur={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      unit={null}
      value={0}
    >
      <input
        aria-label="product.quantity"
        className="css-1bncmx2"
        data-test-id="quantityPicker"
        disabled={false}
        inputMode="numeric"
        onBlur={[Function]}
        onChange={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        pattern="[0–9]*"
        value="0"
      />
    </ForwardRef>
  </form>
</CartItemQuantityPicker>
`;

exports[`<CartItemQuantityPicker /> should reset the amount to 1 if set to lower than 0 1`] = `
<CartItemQuantityPicker
  disabled={false}
  editMode={false}
  onChange={[Function]}
  onToggleEditMode={[Function]}
  quantity={-1}
  unit={null}
>
  <form
    onSubmit={[Function]}
  >
    <ForwardRef
      aria-label="product.quantity"
      className="css-1bncmx2"
      data-test-id="quantityPicker"
      disabled={false}
      maxDecimals={0}
      onBlur={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      unit={null}
      value={-1}
    >
      <input
        aria-label="product.quantity"
        className="css-1bncmx2"
        data-test-id="quantityPicker"
        disabled={false}
        inputMode="decimal"
        onBlur={[Function]}
        onChange={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        pattern="[0-9.,]*"
        value="-1"
      />
    </ForwardRef>
  </form>
</CartItemQuantityPicker>
`;
