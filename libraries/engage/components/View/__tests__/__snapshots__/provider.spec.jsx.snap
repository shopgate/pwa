// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`engage > components > view > provider should initialize and provider context 1`] = `
<Provider
  store={
    Object {
      "@@observable": [Function],
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(ViewProvider)>
    <ViewProvider
      dispatch={[Function]}
      modalCount={0}
    >
      <Provider
        value={
          Object {
            "ariaHidden": false,
            "bottom": 0,
            "contentRef": Object {
              "current": null,
            },
            "getContentRef": [Function],
            "scrollTop": [Function],
            "set": [Function],
            "setAriaHidden": [Function],
            "setBottom": [Function],
            "setContentRef": [Function],
            "setTop": [Function],
            "top": 0,
          }
        }
      >
        <div>
          Page #1
        </div>
      </Provider>
    </ViewProvider>
  </Connect(ViewProvider)>
</Provider>
`;

exports[`engage > components > view > provider should toggle aria-hidden context value when modalCount redux state changes 1`] = `
<Provider
  store={
    Object {
      "@@observable": [Function],
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(ViewProvider)>
    <ViewProvider
      dispatch={[Function]}
      modalCount={0}
    >
      <Provider
        value={
          Object {
            "ariaHidden": false,
            "bottom": 0,
            "contentRef": Object {
              "current": null,
            },
            "getContentRef": [Function],
            "scrollTop": [Function],
            "set": [Function],
            "setAriaHidden": [Function],
            "setBottom": [Function],
            "setContentRef": [Function],
            "setTop": [Function],
            "top": 0,
          }
        }
      >
        <div>
          Page #1
        </div>
      </Provider>
    </ViewProvider>
  </Connect(ViewProvider)>
</Provider>
`;
