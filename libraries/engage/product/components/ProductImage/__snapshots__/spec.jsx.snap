// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ProductImage /> should apply an inner shadow to the image if turned off via the widget settings 1`] = `
<SurroundPortals
  portalName="component.product-image"
  portalProps={null}
>
  <div
    aria-hidden={null}
    className={null}
  >
    <Image
      alt={null}
      animating={true}
      aria-hidden={null}
      backgroundColor="#fff"
      className="css-3hjqnz"
      classNameImg=""
      forcePlaceholder={false}
      highestResolutionLoaded={[Function]}
      noBackground={false}
      onError={[Function]}
      onLoad={null}
      placeholderSrc={null}
      ratio={null}
      resolutions={
        Array [
          Object {
            "blur": 2,
            "height": 50,
            "width": 50,
          },
          Object {
            "height": 440,
            "width": 440,
          },
        ]
      }
      src="http://placehold.it/300x300"
      srcmap={null}
      transition={null}
      unwrapped={false}
      widgetSettings={
        Object {
          "showInnerShadow": true,
        }
      }
    />
  </div>
</SurroundPortals>
`;

exports[`<ProductImage /> should apply an inner shadow to the placeholder if turned off via the widget settings 1`] = `
<SurroundPortals
  portalName="component.product-image"
  portalProps={null}
>
  <div
    aria-hidden={null}
    className="css-y5kkpq css-3hjqnz"
  >
    <div
      className="css-1vq3byi"
      data-test-id="placeHolder"
    >
      <Placeholder
        className="css-1g8mrwn"
      />
    </div>
  </div>
</SurroundPortals>
`;

exports[`<ProductImage /> should not apply an inner shadow to the image if turned off via the app config 1`] = `
<SurroundPortals
  portalName="component.product-image"
  portalProps={null}
>
  <div
    aria-hidden={null}
    className={null}
  >
    <Image
      alt={null}
      animating={true}
      aria-hidden={null}
      backgroundColor="#fff"
      className=""
      classNameImg=""
      forcePlaceholder={false}
      highestResolutionLoaded={[Function]}
      noBackground={false}
      onError={[Function]}
      onLoad={null}
      placeholderSrc={null}
      ratio={null}
      resolutions={
        Array [
          Object {
            "blur": 2,
            "height": 50,
            "width": 50,
          },
          Object {
            "height": 440,
            "width": 440,
          },
        ]
      }
      src="http://placehold.it/300x300"
      srcmap={null}
      transition={null}
      unwrapped={false}
      widgetSettings={
        Object {
          "mocked": "widgetSetting",
        }
      }
    />
  </div>
</SurroundPortals>
`;

exports[`<ProductImage /> should not apply an inner shadow to the image if turned off via the widget settings 1`] = `
<ProductImage
  alt={null}
  animating={true}
  aria-hidden={null}
  className={null}
  forcePlaceholder={false}
  highestResolutionLoaded={[Function]}
  noBackground={false}
  placeholderSrc={null}
  ratio={null}
  resolutions={
    Array [
      Object {
        "blur": 2,
        "height": 50,
        "width": 50,
      },
      Object {
        "height": 440,
        "width": 440,
      },
    ]
  }
  src="http://placehold.it/300x300"
  srcmap={null}
  widgetSettings={
    Object {
      "showInnerShadow": false,
    }
  }
/>
`;

exports[`<ProductImage /> should not apply an inner shadow to the placeholder if turned off via the app config 1`] = `
<SurroundPortals
  portalName="component.product-image"
  portalProps={null}
>
  <div
    aria-hidden={null}
    className="css-y5kkpq"
  >
    <div
      className="css-1vq3byi"
      data-test-id="placeHolder"
    >
      <Placeholder
        className="css-1g8mrwn"
      />
    </div>
  </div>
</SurroundPortals>
`;

exports[`<ProductImage /> should not apply an inner shadow to the placeholder if turned off via the widget settings 1`] = `
<SurroundPortals
  portalName="component.product-image"
  portalProps={null}
>
  <div
    aria-hidden={null}
    className="css-y5kkpq"
  >
    <div
      className="css-1vq3byi"
      data-test-id="placeHolder"
    >
      <Placeholder
        className="css-1g8mrwn"
      />
    </div>
  </div>
</SurroundPortals>
`;

exports[`<ProductImage /> should render a placeholder if no src prop is provided 1`] = `
<SurroundPortals
  portalName="component.product-image"
  portalProps={null}
>
  <div
    aria-hidden={null}
    className="css-y5kkpq"
  >
    <div
      className="css-1vq3byi"
      data-test-id="placeHolder"
    >
      <Placeholder
        className="css-1g8mrwn"
      />
    </div>
  </div>
</SurroundPortals>
`;

exports[`<ProductImage /> should render the image without a placeholder 1`] = `
<SurroundPortals
  portalName="component.product-image"
  portalProps={null}
>
  <div
    aria-hidden={null}
    className={null}
  >
    <Image
      alt={null}
      animating={true}
      aria-hidden={null}
      backgroundColor="#fff"
      className=""
      classNameImg=""
      forcePlaceholder={false}
      highestResolutionLoaded={[Function]}
      noBackground={false}
      onError={[Function]}
      onLoad={null}
      placeholderSrc={null}
      ratio={null}
      resolutions={
        Array [
          Object {
            "blur": 2,
            "height": 50,
            "width": 50,
          },
          Object {
            "height": 440,
            "width": 440,
          },
        ]
      }
      src="http://placehold.it/300x300"
      srcmap={null}
      transition={null}
      unwrapped={false}
      widgetSettings={
        Object {
          "mocked": "widgetSetting",
        }
      }
    />
  </div>
</SurroundPortals>
`;
