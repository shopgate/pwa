// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ProductCard /> should not render when no product could be found 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(ProductCard)>
    <ProductCard
      dispatch={[Function]}
      product={null}
      render={[Function]}
      shadow={true}
      style={Object {}}
    />
  </Connect(ProductCard)>
</Provider>
`;

exports[`<ProductCard /> should render as expected 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(ProductCard)
    productId="PR0DUCTID"
  >
    <ProductCard
      dispatch={[Function]}
      product={
        Object {
          "featuredImageUrl": null,
          "id": "PR0DUCTID",
          "name": "Product Name",
          "price": Object {
            "currency": "EUR",
            "discount": 50,
            "info": "Price Info",
            "unitPrice": 5,
            "unitPriceStriked": 10,
          },
          "rating": Object {
            "average": 80,
            "count": 4,
            "reviewCount": 3,
          },
        }
      }
      productId="PR0DUCTID"
      render={[Function]}
      shadow={true}
      style={Object {}}
    >
      <section
        className={
          Object {
            "data-css-5luenq": "",
          }
        }
        data-test-id="Product: Product Name"
        style={
          Object {
            "boxShadow": "0 4px 8px rgba(0, 0, 0, 0.16)",
          }
        }
      >
        <ProductCardRender
          product={
            Object {
              "featuredImageUrl": null,
              "id": "PR0DUCTID",
              "name": "Product Name",
              "price": Object {
                "currency": "EUR",
                "discount": 50,
                "info": "Price Info",
                "unitPrice": 5,
                "unitPriceStriked": 10,
              },
              "rating": Object {
                "average": 80,
                "count": 4,
                "reviewCount": 3,
              },
            }
          }
          url="/item/505230445543544944"
        />
      </section>
    </ProductCard>
  </Connect(ProductCard)>
</Provider>
`;

exports[`<ProductCard /> should render with a custom render prop 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(ProductCard)
    productId="PR0DUCTID"
    render={[Function]}
  >
    <ProductCard
      dispatch={[Function]}
      product={
        Object {
          "featuredImageUrl": null,
          "id": "PR0DUCTID",
          "name": "Product Name",
          "price": Object {
            "currency": "EUR",
            "discount": 50,
            "info": "Price Info",
            "unitPrice": 5,
            "unitPriceStriked": 10,
          },
          "rating": Object {
            "average": 80,
            "count": 4,
            "reviewCount": 3,
          },
        }
      }
      productId="PR0DUCTID"
      render={[Function]}
      shadow={true}
      style={Object {}}
    >
      <section
        className={
          Object {
            "data-css-5luenq": "",
          }
        }
        data-test-id="Product: Product Name"
        style={
          Object {
            "boxShadow": "0 4px 8px rgba(0, 0, 0, 0.16)",
          }
        }
      >
        <div>
          Custom Output
        </div>
      </section>
    </ProductCard>
  </Connect(ProductCard)>
</Provider>
`;
