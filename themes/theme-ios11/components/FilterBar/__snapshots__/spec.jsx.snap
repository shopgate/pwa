// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<FilterBar> should render 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(FilterBar)
    getFilters={[Function]}
    handleOpenFiltersView={[Function]}
    handleSortChange={[Function]}
    handleToggleViewMode={[Function]}
  >
    <FilterBar
      dispatch={[Function]}
      getFilters={[Function]}
      handleOpenFiltersView={[Function]}
      handleSortChange={[Function]}
      handleToggleViewMode={[Function]}
      isActive={false}
      viewRef={null}
    >
      <div>
        <div
          className="css-3f6ntq"
          data-test-id="filterBar"
          style={
            Object {
              "background": "#fff",
              "color": "#00c3e6",
              "transform": "translate3d(0, 0px, 0)",
            }
          }
        >
          <Connect(Content)
            componentUpdated={[Function]}
          >
            <Content
              activeFilters={null}
              componentUpdated={[Function]}
              getFilters={[Function]}
            >
              <section>
                <div
                  className="css-1cqgl9p"
                >
                  <Connect(Sort)>
                    <Sort
                      changeSort={[Function]}
                      sort="desc"
                    >
                      <SelectBox
                        className="css-1bjlaf3"
                        classNames={
                          Object {
                            "button": "css-62xi8",
                            "dropdown": "css-pfutkw",
                            "icon": "css-xf397u",
                            "selectBox": "css-1bjlaf3",
                            "selectItem": "css-soupjv",
                            "selection": "css-lrzy2d",
                          }
                        }
                        defaultText="filter.sort.default"
                        duration={225}
                        handleSelectionUpdate={[Function]}
                        icon={[Function]}
                        initialValue="desc"
                        item={[Function]}
                        items={
                          Array [
                            Object {
                              "label": "filter.sort.most_popular",
                              "value": "relevance",
                            },
                            Object {
                              "label": "filter.sort.price_desc",
                              "value": "priceDesc",
                            },
                            Object {
                              "label": "filter.sort.price_asc",
                              "value": "priceAsc",
                            },
                          ]
                        }
                        testId="sorting"
                      >
                        <div
                          className="css-1bjlaf3"
                          data-test-id="sorting"
                        >
                          <button
                            className="css-62xi8"
                            data-test-id="filter.sort.default"
                            onClick={[Function]}
                          >
                            <span
                              className="css-lrzy2d"
                            >
                              <Translate
                                className=""
                                params={Object {}}
                                string="filter.sort.default"
                              >
                                <span
                                  className=""
                                >
                                  filter.sort.default
                                </span>
                              </Translate>
                            </span>
                            <div
                              className="css-xf397u"
                            >
                              <Sort>
                                <Icon
                                  className=""
                                  color={null}
                                  content="<path d=\\"M5.5,6C5.2,6,4.9,6.3,4.9,6.7c0,0,0,0,0,0v9l-1.3-1.1c-0.3-0.2-0.7-0.2-0.9,0.1 c-0.2,0.3-0.2,0.7,0.1,0.9l0,0l1,0.9l0,0l0.7,0.6L5,17.6l0,0L5.5,18l0,0L6,17.6l0.3-0.2l1-0.9l0,0l1-0.9c0.3-0.2,0.3-0.7,0.1-0.9 c-0.2-0.3-0.7-0.3-0.9-0.1l0,0l-1.3,1.1v-9C6.2,6.3,5.9,6,5.5,6C5.5,6,5.5,6,5.5,6L5.5,6z M10.4,6.1c-0.4,0-0.7,0.3-0.7,0.7 c0,0.4,0.3,0.7,0.7,0.7l0,0h10.3c0.4,0,0.7-0.3,0.7-0.7c0-0.4-0.3-0.7-0.7-0.7H10.4z M10.4,9.5c-0.4,0-0.7,0.3-0.7,0.7 c0,0.4,0.3,0.7,0.7,0.7l0,0h8.1c0.4,0,0.7-0.3,0.7-0.7c0-0.4-0.3-0.7-0.7-0.7H10.4z M10.4,12.9c-0.4,0-0.7,0.3-0.7,0.7 c0,0.4,0.3,0.7,0.7,0.7l0,0h5.8c0.4,0,0.7-0.3,0.7-0.7c0-0.4-0.3-0.7-0.7-0.7H10.4z M10.4,16.3c-0.4,0-0.7,0.3-0.7,0.7 s0.3,0.7,0.7,0.7H14c0.4,0,0.7-0.3,0.7-0.7s-0.3-0.7-0.7-0.7l0,0H10.4z\\"/>"
                                  size="inherit"
                                  viewBox="0 0 24 24"
                                >
                                  <svg
                                    className="css-yys9hb "
                                    dangerouslySetInnerHTML={
                                      Object {
                                        "__html": "<path d=\\"M5.5,6C5.2,6,4.9,6.3,4.9,6.7c0,0,0,0,0,0v9l-1.3-1.1c-0.3-0.2-0.7-0.2-0.9,0.1 c-0.2,0.3-0.2,0.7,0.1,0.9l0,0l1,0.9l0,0l0.7,0.6L5,17.6l0,0L5.5,18l0,0L6,17.6l0.3-0.2l1-0.9l0,0l1-0.9c0.3-0.2,0.3-0.7,0.1-0.9 c-0.2-0.3-0.7-0.3-0.9-0.1l0,0l-1.3,1.1v-9C6.2,6.3,5.9,6,5.5,6C5.5,6,5.5,6,5.5,6L5.5,6z M10.4,6.1c-0.4,0-0.7,0.3-0.7,0.7 c0,0.4,0.3,0.7,0.7,0.7l0,0h10.3c0.4,0,0.7-0.3,0.7-0.7c0-0.4-0.3-0.7-0.7-0.7H10.4z M10.4,9.5c-0.4,0-0.7,0.3-0.7,0.7 c0,0.4,0.3,0.7,0.7,0.7l0,0h8.1c0.4,0,0.7-0.3,0.7-0.7c0-0.4-0.3-0.7-0.7-0.7H10.4z M10.4,12.9c-0.4,0-0.7,0.3-0.7,0.7 c0,0.4,0.3,0.7,0.7,0.7l0,0h5.8c0.4,0,0.7-0.3,0.7-0.7c0-0.4-0.3-0.7-0.7-0.7H10.4z M10.4,16.3c-0.4,0-0.7,0.3-0.7,0.7 s0.3,0.7,0.7,0.7H14c0.4,0,0.7-0.3,0.7-0.7s-0.3-0.7-0.7-0.7l0,0H10.4z\\"/>",
                                      }
                                    }
                                    style={
                                      Object {
                                        "fill": null,
                                        "fontSize": "inherit",
                                      }
                                    }
                                    viewBox="0 0 24 24"
                                    xmlns="http://www.w3.org/2000/svg"
                                  />
                                </Icon>
                              </Sort>
                            </div>
                          </button>
                          <Dropdown
                            className="css-pfutkw"
                            duration={225}
                            easing={null}
                            isOpen={false}
                            onComplete={[Function]}
                            onStart={[Function]}
                          >
                            <Transition
                              duration={225}
                              easing={null}
                              from={
                                Object {
                                  "height": 0,
                                }
                              }
                              onComplete={[Function]}
                              onStart={[Function]}
                              origin="0 0 0"
                              set={null}
                              to={
                                Object {
                                  "height": 0,
                                }
                              }
                            >
                              <div
                                className="css-rdsogp css-pfutkw"
                                key=".0"
                              >
                                <div>
                                  <SelectBoxItem
                                    className="css-soupjv"
                                    handleSelectionUpdate={[Function]}
                                    key="relevance"
                                    label="filter.sort.most_popular"
                                    value="relevance"
                                    wrapper={[Function]}
                                  >
                                    <button
                                      className="css-soupjv"
                                      data-test-id="filter.sort.most_popular"
                                      onClick={[Function]}
                                    >
                                      <Item>
                                        <div
                                          className="css-1711wqu"
                                        >
                                          <Translate
                                            className=""
                                            params={Object {}}
                                            string="filter.sort.most_popular"
                                          >
                                            <span
                                              className=""
                                            >
                                              filter.sort.most_popular
                                            </span>
                                          </Translate>
                                        </div>
                                      </Item>
                                    </button>
                                  </SelectBoxItem>
                                  <SelectBoxItem
                                    className="css-soupjv"
                                    handleSelectionUpdate={[Function]}
                                    key="priceDesc"
                                    label="filter.sort.price_desc"
                                    value="priceDesc"
                                    wrapper={[Function]}
                                  >
                                    <button
                                      className="css-soupjv"
                                      data-test-id="filter.sort.price_desc"
                                      onClick={[Function]}
                                    >
                                      <Item>
                                        <div
                                          className="css-1711wqu"
                                        >
                                          <Translate
                                            className=""
                                            params={Object {}}
                                            string="filter.sort.price_desc"
                                          >
                                            <span
                                              className=""
                                            >
                                              filter.sort.price_desc
                                            </span>
                                          </Translate>
                                        </div>
                                      </Item>
                                    </button>
                                  </SelectBoxItem>
                                  <SelectBoxItem
                                    className="css-soupjv"
                                    handleSelectionUpdate={[Function]}
                                    key="priceAsc"
                                    label="filter.sort.price_asc"
                                    value="priceAsc"
                                    wrapper={[Function]}
                                  >
                                    <button
                                      className="css-soupjv"
                                      data-test-id="filter.sort.price_asc"
                                      onClick={[Function]}
                                    >
                                      <Item>
                                        <div
                                          className="css-1711wqu"
                                        >
                                          <Translate
                                            className=""
                                            params={Object {}}
                                            string="filter.sort.price_asc"
                                          >
                                            <span
                                              className=""
                                            >
                                              filter.sort.price_asc
                                            </span>
                                          </Translate>
                                        </div>
                                      </Item>
                                    </button>
                                  </SelectBoxItem>
                                </div>
                              </div>
                            </Transition>
                          </Dropdown>
                        </div>
                      </SelectBox>
                    </Sort>
                  </Connect(Sort)>
                  <Connect(FilterButton)>
                    <FilterButton
                      handleOpenFilters={[Function]}
                    >
                      <button
                        className="css-1x5kceo"
                        data-test-id="filterButton"
                        onClick={[Function]}
                      >
                        <Ripple
                          className="css-18the6n"
                          color="#000"
                          disabled={false}
                          fill={true}
                          onComplete={[Function]}
                          overflow={false}
                          size={null}
                        >
                          <div
                            aria-hidden={true}
                            className="css-18the6n"
                            data-test-id="Ripple"
                            onClick={[Function]}
                            style={null}
                          >
                            <Grid
                              className=""
                              component="div"
                              wrap={false}
                            >
                              <div
                                className=" css-h7r55a"
                              >
                                <GridItem
                                  className="css-qnnim0"
                                  component="div"
                                  grow={0}
                                  shrink={1}
                                >
                                  <div
                                    className="css-qnnim0"
                                  >
                                    <Filter>
                                      <Icon
                                        className=""
                                        color={null}
                                        content="<path d=\\"M4,6H20c0.6,0,1.1,0.5,1.1,1.1v0c0,0.6-0.5,1.1-1.1,1.1H4c-0.6,0-1.1-0.5-1.1-1.1v0 C2.8,6.5,3.3,6,4,6z\\"/><path d=\\"M7.4,10.6h9.2c0.6,0,1.1,0.5,1.1,1.1v0c0,0.6-0.5,1.1-1.1,1.1H7.4c-0.6,0-1.1-0.5-1.1-1.1 v0C6.3,11.1,6.8,10.6,7.4,10.6z\\"/><path d=\\"M10.9,15.2h2.3c0.6,0,1.1,0.5,1.1,1.1v0c0,0.6-0.5,1.1-1.1,1.1h-2.3 c-0.6,0-1.1-0.5-1.1-1.1v0C9.7,15.7,10.2,15.2,10.9,15.2z\\"/>"
                                        size="inherit"
                                        viewBox="0 0 24 24"
                                      >
                                        <svg
                                          className="css-yys9hb "
                                          dangerouslySetInnerHTML={
                                            Object {
                                              "__html": "<path d=\\"M4,6H20c0.6,0,1.1,0.5,1.1,1.1v0c0,0.6-0.5,1.1-1.1,1.1H4c-0.6,0-1.1-0.5-1.1-1.1v0 C2.8,6.5,3.3,6,4,6z\\"/><path d=\\"M7.4,10.6h9.2c0.6,0,1.1,0.5,1.1,1.1v0c0,0.6-0.5,1.1-1.1,1.1H7.4c-0.6,0-1.1-0.5-1.1-1.1 v0C6.3,11.1,6.8,10.6,7.4,10.6z\\"/><path d=\\"M10.9,15.2h2.3c0.6,0,1.1,0.5,1.1,1.1v0c0,0.6-0.5,1.1-1.1,1.1h-2.3 c-0.6,0-1.1-0.5-1.1-1.1v0C9.7,15.7,10.2,15.2,10.9,15.2z\\"/>",
                                            }
                                          }
                                          style={
                                            Object {
                                              "fill": null,
                                              "fontSize": "inherit",
                                            }
                                          }
                                          viewBox="0 0 24 24"
                                          xmlns="http://www.w3.org/2000/svg"
                                        />
                                      </Icon>
                                    </Filter>
                                  </div>
                                </GridItem>
                                <GridItem
                                  className="css-1cqgl9p"
                                  component="div"
                                  grow={0}
                                  shrink={1}
                                >
                                  <div
                                    className="css-1cqgl9p"
                                  >
                                    <span
                                      className="css-fg63ja"
                                    >
                                      <Translate
                                        className=""
                                        params={Object {}}
                                        string="titles.filter"
                                      >
                                        <span
                                          className=""
                                        >
                                          titles.filter
                                        </span>
                                      </Translate>
                                    </span>
                                  </div>
                                </GridItem>
                              </div>
                            </Grid>
                          </div>
                        </Ripple>
                      </button>
                    </FilterButton>
                  </Connect(FilterButton)>
                </div>
                <Connect(FilterChips)
                  currency="USD"
                >
                  <FilterChips
                    activeFilters={null}
                    currency="USD"
                    currentPathname=""
                    handleFilterRemove={[Function]}
                    handleOpenFilters={[Function]}
                  />
                </Connect(FilterChips)>
              </section>
            </Content>
          </Connect(Content)>
        </div>
        <div
          style={
            Object {
              "height": 48,
            }
          }
        />
      </div>
    </FilterBar>
  </Connect(FilterBar)>
</Provider>
`;
