// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<UserMenu /> should render additional links when logged in and new services are enabled 1`] = `
<Provider
  store={
    Object {
      "@@observable": [Function],
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <UserMenu
    entries={null}
    isLoggedIn={true}
    logout={[Function]}
    user={null}
  >
    <Portal
      name="user-menu.container.before"
      props={
        Object {
          "entries": null,
          "handleLogout": [Function],
          "isLoggedIn": true,
          "logout": [Function],
          "user": null,
        }
      }
    />
    <Portal
      name="user-menu.container"
      props={
        Object {
          "entries": null,
          "handleLogout": [Function],
          "isLoggedIn": true,
          "logout": [Function],
          "user": null,
        }
      }
    >
      <LoggedIn
        logout={[Function]}
      >
        <SurroundPortals
          portalName="nav-menu.my-account"
          portalProps={
            Object {
              "Item": [Function],
            }
          }
        >
          <div
            data-test-id="userMenu"
          >
            <Section
              title="navigation.your_account"
            >
              <Headline
                style={
                  Object {
                    "margin": "24px 20px 16px",
                  }
                }
                tag="h2"
                text="navigation.your_account"
              >
                <h2
                  className="css-18cwfw7 headline theme__headline"
                  data-test-id="Headline"
                  style={
                    Object {
                      "margin": "24px 20px 16px",
                    }
                  }
                >
                  <Text
                    string="navigation.your_account"
                  >
                    navigation.your_account
                  </Text>
                </h2>
              </Headline>
              <div
                className={
                  Object {
                    "data-css-13ch7sr": "",
                  }
                }
              >
                <MoreMenuItem
                  className={null}
                  href="/account/profile"
                  label="navigation.profile"
                  onClick={null}
                  testId="accountButton"
                >
                  <Link
                    className="css-1hj8a57"
                    href="/account/profile"
                    role="button"
                  >
                    <Text
                      string="navigation.profile"
                    >
                      navigation.profile
                    </Text>
                  </Link>
                </MoreMenuItem>
                <MoreMenuItem
                  className={null}
                  href="/account/orders"
                  label="navigation.order_history"
                  onClick={null}
                  testId="accountButton"
                >
                  <Link
                    className="css-1hj8a57"
                    href="/account/orders"
                    role="button"
                  >
                    <Text
                      string="navigation.order_history"
                    >
                      navigation.order_history
                    </Text>
                  </Link>
                </MoreMenuItem>
                <MoreMenuItem
                  className={null}
                  href="/account/wish-list"
                  label="navigation.favorites"
                  onClick={null}
                  testId="accountButton"
                >
                  <Link
                    className="css-1hj8a57"
                    href="/account/wish-list"
                    role="button"
                  >
                    <Text
                      string="navigation.favorites"
                    >
                      navigation.favorites
                    </Text>
                  </Link>
                </MoreMenuItem>
                <SurroundPortals
                  portalName="nav-menu.logout"
                  portalProps={
                    Object {
                      "Item": [Function],
                    }
                  }
                >
                  <MoreMenuItem
                    className={null}
                    href={null}
                    label="navigation.logout"
                    onClick={[Function]}
                    testId="logoutButton"
                  >
                    <button
                      className="css-1hj8a57"
                      data-test-id="logoutButton"
                      onClick={[Function]}
                      type="button"
                    >
                      <Text
                        string="navigation.logout"
                      >
                        navigation.logout
                      </Text>
                    </button>
                  </MoreMenuItem>
                </SurroundPortals>
              </div>
            </Section>
          </div>
        </SurroundPortals>
      </LoggedIn>
    </Portal>
    <Portal
      name="user-menu.container.after"
      props={
        Object {
          "entries": null,
          "handleLogout": [Function],
          "isLoggedIn": true,
          "logout": [Function],
          "user": null,
        }
      }
    />
  </UserMenu>
</Provider>
`;

exports[`<UserMenu /> should render as expected when the user is logged in 1`] = `
<Provider
  store={
    Object {
      "@@observable": [Function],
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <UserMenu
    entries={null}
    isLoggedIn={true}
    logout={[MockFunction]}
    user={null}
  >
    <Portal
      name="user-menu.container.before"
      props={
        Object {
          "entries": null,
          "handleLogout": [MockFunction],
          "isLoggedIn": true,
          "logout": [MockFunction],
          "user": null,
        }
      }
    />
    <Portal
      name="user-menu.container"
      props={
        Object {
          "entries": null,
          "handleLogout": [MockFunction],
          "isLoggedIn": true,
          "logout": [MockFunction],
          "user": null,
        }
      }
    >
      <LoggedIn
        logout={[MockFunction]}
      >
        <SurroundPortals
          portalName="nav-menu.my-account"
          portalProps={
            Object {
              "Item": [Function],
            }
          }
        >
          <div
            data-test-id="userMenu"
          >
            <Section
              title="navigation.your_account"
            >
              <Headline
                style={
                  Object {
                    "margin": "24px 20px 16px",
                  }
                }
                tag="h2"
                text="navigation.your_account"
              >
                <h2
                  className="css-18cwfw7 headline theme__headline"
                  data-test-id="Headline"
                  style={
                    Object {
                      "margin": "24px 20px 16px",
                    }
                  }
                >
                  <Text
                    string="navigation.your_account"
                  >
                    navigation.your_account
                  </Text>
                </h2>
              </Headline>
              <div
                className={
                  Object {
                    "data-css-13ch7sr": "",
                  }
                }
              >
                <SurroundPortals
                  portalName="nav-menu.logout"
                  portalProps={
                    Object {
                      "Item": [Function],
                    }
                  }
                >
                  <MoreMenuItem
                    className={null}
                    href={null}
                    label="navigation.logout"
                    onClick={[MockFunction]}
                    testId="logoutButton"
                  >
                    <button
                      className="css-1hj8a57"
                      data-test-id="logoutButton"
                      onClick={[MockFunction]}
                      type="button"
                    >
                      <Text
                        string="navigation.logout"
                      >
                        navigation.logout
                      </Text>
                    </button>
                  </MoreMenuItem>
                </SurroundPortals>
              </div>
            </Section>
          </div>
        </SurroundPortals>
      </LoggedIn>
    </Portal>
    <Portal
      name="user-menu.container.after"
      props={
        Object {
          "entries": null,
          "handleLogout": [MockFunction],
          "isLoggedIn": true,
          "logout": [MockFunction],
          "user": null,
        }
      }
    />
  </UserMenu>
</Provider>
`;

exports[`<UserMenu /> should render as expected when the user is logged out and the buttons are disabled 1`] = `
<Provider
  store={
    Object {
      "@@observable": [Function],
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <UserMenu
    entries={null}
    isLoggedIn={false}
    logout={[Function]}
    user={null}
  >
    <Portal
      name="user-menu.container.before"
      props={
        Object {
          "entries": null,
          "handleLogout": [Function],
          "isLoggedIn": false,
          "logout": [Function],
          "user": null,
        }
      }
    />
    <Portal
      name="user-menu.container"
      props={
        Object {
          "entries": null,
          "handleLogout": [Function],
          "isLoggedIn": false,
          "logout": [Function],
          "user": null,
        }
      }
    >
      <Connect(LoggedOut)>
        <LoggedOut
          dispatch={[Function]}
          isDisabled={true}
        >
          <div
            data-test-id="userMenu"
          >
            <Grid
              className="css-az18cj theme__more-page__user-menu__container"
            >
              <Grid.Item
                className="css-mzzsxh theme__more-page__login-button__container"
              >
                <Link
                  disabled={true}
                  href="/login"
                  tabIndex={0}
                >
                  <Button
                    className="css-6f03lb theme__more-page__login-button"
                    disabled={true}
                    testId="UserMenuLogin"
                    type="secondary"
                  >
                    <Text
                      string="login.button"
                    >
                      login.button
                    </Text>
                  </Button>
                </Link>
              </Grid.Item>
              <Grid.Item
                className="css-mzzsxh theme__more-page-register-button__container"
              >
                <Link
                  disabled={true}
                  href="/register"
                  tabIndex={0}
                >
                  <Button
                    className="css-6f03lb theme__more-page-register-button"
                    disabled={true}
                    testId="UserMenuRegister"
                    type="secondary"
                  >
                    <Text
                      string="login.signup"
                    >
                      login.signup
                    </Text>
                  </Button>
                </Link>
              </Grid.Item>
            </Grid>
          </div>
        </LoggedOut>
      </Connect(LoggedOut)>
    </Portal>
    <Portal
      name="user-menu.container.after"
      props={
        Object {
          "entries": null,
          "handleLogout": [Function],
          "isLoggedIn": false,
          "logout": [Function],
          "user": null,
        }
      }
    />
  </UserMenu>
</Provider>
`;

exports[`<UserMenu /> should render as expected when the user is logged out and the buttons are enabled 1`] = `
<Provider
  store={
    Object {
      "@@observable": [Function],
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <UserMenu
    entries={null}
    isLoggedIn={false}
    logout={[Function]}
    user={null}
  >
    <Portal
      name="user-menu.container.before"
      props={
        Object {
          "entries": null,
          "handleLogout": [Function],
          "isLoggedIn": false,
          "logout": [Function],
          "user": null,
        }
      }
    />
    <Portal
      name="user-menu.container"
      props={
        Object {
          "entries": null,
          "handleLogout": [Function],
          "isLoggedIn": false,
          "logout": [Function],
          "user": null,
        }
      }
    >
      <Connect(LoggedOut)>
        <LoggedOut
          dispatch={[Function]}
          isDisabled={false}
        >
          <div
            data-test-id="userMenu"
          >
            <Grid
              className="css-az18cj theme__more-page__user-menu__container"
            >
              <Grid.Item
                className="css-mzzsxh theme__more-page__login-button__container"
              >
                <Link
                  disabled={false}
                  href="/login"
                  tabIndex={0}
                >
                  <Button
                    className="css-6f03lb theme__more-page__login-button"
                    disabled={false}
                    testId="UserMenuLogin"
                    type="secondary"
                  >
                    <Text
                      string="login.button"
                    >
                      login.button
                    </Text>
                  </Button>
                </Link>
              </Grid.Item>
              <Grid.Item
                className="css-mzzsxh theme__more-page-register-button__container"
              >
                <Link
                  disabled={false}
                  href="/register"
                  tabIndex={0}
                >
                  <Button
                    className="css-6f03lb theme__more-page-register-button"
                    disabled={false}
                    testId="UserMenuRegister"
                    type="secondary"
                  >
                    <Text
                      string="login.signup"
                    >
                      login.signup
                    </Text>
                  </Button>
                </Link>
              </Grid.Item>
            </Grid>
          </div>
        </LoggedOut>
      </Connect(LoggedOut)>
    </Portal>
    <Portal
      name="user-menu.container.after"
      props={
        Object {
          "entries": null,
          "handleLogout": [Function],
          "isLoggedIn": false,
          "logout": [Function],
          "user": null,
        }
      }
    />
  </UserMenu>
</Provider>
`;
