// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`pages / Browse / components / SearchField Check search field should render with initial search query 1`] = `
<SearchField
  fetchSuggestions={[MockFunction]}
  name="search"
  openScanner={[MockFunction]}
  pageId="1234"
  query="foo"
  showScannerIcon={false}
  submitSearch={[MockFunction]}
>
  <div
    className="theme__browse__search-field"
    data-test-id="SearchField"
  >
    <div
      className="css-2ciheh"
    >
      <div
        className="css-1utu657"
      >
        <form
          action="."
          onSubmit={[Function]}
        >
          <label
            className="css-19t1ju7"
            htmlFor="search"
          >
            <div
              className="css-tfmeke"
            >
              <MagnifierIcon />
            </div>
          </label>
          <_default
            autoComplete={false}
            className="css-11ngaym"
            onChange={[Function]}
            onFocusChange={[Function]}
            onSubmit={[Function]}
            setRef={[Function]}
            type="search"
            value="foo"
          >
            <SimpleInput
              attributes={null}
              autoComplete={false}
              autoCorrect={false}
              className="css-11ngaym"
              disabled={false}
              id={null}
              inputComponent="input"
              isControlled={false}
              maxLength=""
              name={null}
              onChange={[Function]}
              onFocusChange={[Function]}
              onKeyPress={[Function]}
              onSanitize={[Function]}
              onSubmit={[Function]}
              onValidate={[Function]}
              password={false}
              setRef={[Function]}
              type="search"
              validateOnBlur={true}
              value="foo"
            >
              <input
                autoComplete="off"
                autoCorrect="off"
                className="css-11ngaym simpleInput common__simple-input"
                disabled={false}
                id={null}
                inputMode={null}
                maxLength=""
                min={null}
                name={null}
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                onInput={null}
                onKeyPress={[Function]}
                pattern={null}
                step={null}
                type="search"
                value="foo"
              />
            </SimpleInput>
          </_default>
        </form>
      </div>
      <div>
        <button
          className="css-1sdx55c css-gyrv08"
          onClick={[Function]}
          type="button"
        >
          <Text
            string="search.cancel"
          >
            I18n.Text
          </Text>
        </button>
      </div>
    </div>
    <Component
      bottomHeight={0}
      onClick={[Function]}
      searchPhrase="foo"
      visible={false}
    />
  </div>
</SearchField>
`;

exports[`pages / Browse / components / SearchField Check search field should show suggestions when focused 1`] = `
<SearchField
  fetchSuggestions={[MockFunction]}
  name="search"
  openScanner={[MockFunction]}
  pageId="1234"
  query="foo"
  showScannerIcon={false}
  submitSearch={[MockFunction]}
>
  <div
    className="theme__browse__search-field"
    data-test-id="SearchField"
  >
    <div
      className="css-2ciheh"
    >
      <div
        className="css-1utu657"
      >
        <form
          action="."
          onSubmit={[Function]}
        >
          <label
            className="css-19t1ju7"
            htmlFor="search"
          >
            <div
              className="css-tfmeke"
            >
              <MagnifierIcon />
            </div>
          </label>
          <_default
            autoComplete={false}
            className="css-11ngaym"
            onChange={[Function]}
            onFocusChange={[Function]}
            onSubmit={[Function]}
            setRef={[Function]}
            type="search"
            value="foo"
          >
            <SimpleInput
              attributes={null}
              autoComplete={false}
              autoCorrect={false}
              className="css-11ngaym"
              disabled={false}
              id={null}
              inputComponent="input"
              isControlled={false}
              maxLength=""
              name={null}
              onChange={[Function]}
              onFocusChange={[Function]}
              onKeyPress={[Function]}
              onSanitize={[Function]}
              onSubmit={[Function]}
              onValidate={[Function]}
              password={false}
              setRef={[Function]}
              type="search"
              validateOnBlur={true}
              value="foo"
            >
              <input
                autoComplete="off"
                autoCorrect="off"
                className="css-11ngaym simpleInput common__simple-input"
                disabled={false}
                id={null}
                inputMode={null}
                maxLength=""
                min={null}
                name={null}
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                onInput={null}
                onKeyPress={[Function]}
                pattern={null}
                step={null}
                type="search"
                value="foo"
              />
            </SimpleInput>
          </_default>
        </form>
      </div>
      <div>
        <button
          className="css-1sdx55c"
          onClick={[Function]}
          type="button"
        >
          <Text
            string="search.cancel"
          >
            I18n.Text
          </Text>
        </button>
      </div>
    </div>
    <div
      className="css-1su8uh1"
    />
    <Component
      bottomHeight={0}
      onClick={[Function]}
      searchPhrase="foo"
      visible={true}
    />
  </div>
</SearchField>
`;
