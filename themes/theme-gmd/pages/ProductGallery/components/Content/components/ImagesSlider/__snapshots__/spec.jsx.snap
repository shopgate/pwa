// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ProductGallery.Content> page should pass initialSlide prop 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(Wrapper)
    initialSlide={3}
  >
    <Wrapper
      dispatch={[Function]}
      images={
        Array [
          "foo",
          "bar",
        ]
      }
      initialSlide={3}
      product={
        Object {
          "id": 123,
        }
      }
    >
      <SurroundPortals
        portalName="product.gallery.images"
        portalProps={
          Object {
            "dispatch": [Function],
            "images": Array [
              "foo",
              "bar",
            ],
            "initialSlide": 3,
            "product": Object {
              "id": 123,
            },
          }
        }
      >
        <ProductGalleryImages
          dispatch={[Function]}
          images={
            Array [
              "foo",
              "bar",
            ]
          }
          initialSlide={3}
          product={
            Object {
              "id": 123,
            }
          }
        >
          <div
            className="css-f7yea6"
          >
            <Swiper
              className="css-2ypihg"
              classNames={
                Object {
                  "container": "css-sa13d4",
                  "indicator": "css-vsp2nx",
                }
              }
              disabled={false}
              indicators={true}
              initialSlide={3}
              loop={true}
              zoom={
                Object {
                  "enabled": true,
                  "maxRatio": 4,
                  "minRation": 1,
                }
              }
            >
              <SwiperItem
                key="foo"
              >
                <div
                  className="swiper-zoom-container"
                >
                  <Image
                    alt=""
                    animating={false}
                    backgroundColor="transparent"
                    classNameImg="css-4kgshc"
                    resolutions={
                      Array [
                        Object {
                          "height": 1024,
                          "width": 1024,
                        },
                        Object {
                          "height": 2048,
                          "width": 2048,
                        },
                      ]
                    }
                    src="foo"
                    unwrapped={true}
                  >
                    Image
                  </Image>
                </div>
              </SwiperItem>
              <SwiperItem
                key="bar"
              >
                <div
                  className="swiper-zoom-container"
                >
                  <Image
                    alt=""
                    animating={false}
                    backgroundColor="transparent"
                    classNameImg="css-4kgshc"
                    resolutions={
                      Array [
                        Object {
                          "height": 1024,
                          "width": 1024,
                        },
                        Object {
                          "height": 2048,
                          "width": 2048,
                        },
                      ]
                    }
                    src="bar"
                    unwrapped={true}
                  >
                    Image
                  </Image>
                </div>
              </SwiperItem>
            </Swiper>
          </div>
        </ProductGalleryImages>
      </SurroundPortals>
    </Wrapper>
  </Connect(Wrapper)>
</Provider>
`;

exports[`<ProductGallery.Content> page should render Swiper with images 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(Wrapper)
    initialSlide={0}
  >
    <Wrapper
      dispatch={[Function]}
      images={
        Array [
          "foo",
          "bar",
        ]
      }
      initialSlide={0}
      product={
        Object {
          "id": 123,
        }
      }
    >
      <SurroundPortals
        portalName="product.gallery.images"
        portalProps={
          Object {
            "dispatch": [Function],
            "images": Array [
              "foo",
              "bar",
            ],
            "initialSlide": 0,
            "product": Object {
              "id": 123,
            },
          }
        }
      >
        <ProductGalleryImages
          dispatch={[Function]}
          images={
            Array [
              "foo",
              "bar",
            ]
          }
          initialSlide={0}
          product={
            Object {
              "id": 123,
            }
          }
        >
          <div
            className="css-f7yea6"
          >
            <Swiper
              className="css-2ypihg"
              classNames={
                Object {
                  "container": "css-sa13d4",
                  "indicator": "css-vsp2nx",
                }
              }
              disabled={false}
              indicators={true}
              initialSlide={0}
              loop={true}
              zoom={
                Object {
                  "enabled": true,
                  "maxRatio": 4,
                  "minRation": 1,
                }
              }
            >
              <SwiperItem
                key="foo"
              >
                <div
                  className="swiper-zoom-container"
                >
                  <Image
                    alt=""
                    animating={false}
                    backgroundColor="transparent"
                    classNameImg="css-4kgshc"
                    resolutions={
                      Array [
                        Object {
                          "height": 1024,
                          "width": 1024,
                        },
                        Object {
                          "height": 2048,
                          "width": 2048,
                        },
                      ]
                    }
                    src="foo"
                    unwrapped={true}
                  >
                    Image
                  </Image>
                </div>
              </SwiperItem>
              <SwiperItem
                key="bar"
              >
                <div
                  className="swiper-zoom-container"
                >
                  <Image
                    alt=""
                    animating={false}
                    backgroundColor="transparent"
                    classNameImg="css-4kgshc"
                    resolutions={
                      Array [
                        Object {
                          "height": 1024,
                          "width": 1024,
                        },
                        Object {
                          "height": 2048,
                          "width": 2048,
                        },
                      ]
                    }
                    src="bar"
                    unwrapped={true}
                  >
                    Image
                  </Image>
                </div>
              </SwiperItem>
            </Swiper>
          </div>
        </ProductGalleryImages>
      </SurroundPortals>
    </Wrapper>
  </Connect(Wrapper)>
</Provider>
`;
