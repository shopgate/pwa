// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Shipping label should render free shipping 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(pure(Shipping))
    productId="fakeId"
  >
    <pure(Shipping)
      dispatch={[Function]}
      productId="fakeId"
      shipping={
        Object {
          "currency": "EUR",
          "price": 0,
        }
      }
    >
      <Shipping
        dispatch={[Function]}
        productId="fakeId"
        shipping={
          Object {
            "currency": "EUR",
            "price": 0,
          }
        }
      >
        <Portal
          name="product.shipping.before"
          props={null}
        />
        <Portal
          name="product.shipping"
          props={null}
        >
          <PlaceholderLabel
            className="css-1n196ny"
            ready={true}
            style={null}
          >
            <Label
              className="css-117ocmm"
              currency="EUR"
              price={0}
            >
              <div
                className="css-117ocmm css-1ixzglu"
              >
                <Translate
                  className=""
                  params={Object {}}
                  string="shipping.free"
                >
                  <span
                    className=""
                  >
                    shipping.free
                  </span>
                </Translate>
              </div>
            </Label>
          </PlaceholderLabel>
        </Portal>
        <Portal
          name="product.shipping.after"
          props={null}
        />
      </Shipping>
    </pure(Shipping)>
  </Connect(pure(Shipping))>
</Provider>
`;

exports[`Shipping label should render shipping price 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(pure(Shipping))
    productId="fakeId"
  >
    <pure(Shipping)
      dispatch={[Function]}
      productId="fakeId"
      shipping={
        Object {
          "currency": "EUR",
          "price": 1,
        }
      }
    >
      <Shipping
        dispatch={[Function]}
        productId="fakeId"
        shipping={
          Object {
            "currency": "EUR",
            "price": 1,
          }
        }
      >
        <Portal
          name="product.shipping.before"
          props={null}
        />
        <Portal
          name="product.shipping"
          props={null}
        >
          <PlaceholderLabel
            className="css-1n196ny"
            ready={true}
            style={null}
          >
            <Label
              className="css-117ocmm"
              currency="EUR"
              price={1}
            >
              <div
                className="css-117ocmm css-1ixzglu"
              >
                <Translate
                  className=""
                  params={Object {}}
                  string="shipping.cost"
                >
                  <span
                    className=""
                  >
                    shipping.cost
                    <FormatPrice
                      className=""
                      currency="EUR"
                      forKey="price"
                      fractions={true}
                      key=".0"
                      price={1}
                    >
                      <span
                        className=""
                      >
                        p
                      </span>
                    </FormatPrice>
                  </span>
                </Translate>
              </div>
            </Label>
          </PlaceholderLabel>
        </Portal>
        <Portal
          name="product.shipping.after"
          props={null}
        />
      </Shipping>
    </pure(Shipping)>
  </Connect(pure(Shipping))>
</Provider>
`;
