// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Shipping label should render free shipping 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(Shipping)
    productId="fakeId"
  >
    <Shipping
      dispatch={[Function]}
      productId="fakeId"
      shipping={
        Object {
          "currency": "EUR",
          "price": 0,
        }
      }
    >
      <Portal
        name="product.shipping.before"
        props={null}
      />
      <Portal
        name="product.shipping"
        props={null}
      >
        <PlaceholderLabel
          className="css-1n196ny"
          ready={true}
          style={null}
        >
          <Label
            className="css-117ocmm"
            currency="EUR"
            price={0}
          >
            <div
              className="css-117ocmm css-1ixzglu"
              role="text"
            >
              <Translate
                className={null}
                params={Object {}}
                role={null}
                string="shipping.free"
              >
                <span
                  className={null}
                  role={null}
                >
                  shipping.free
                </span>
              </Translate>
            </div>
          </Label>
        </PlaceholderLabel>
      </Portal>
      <Portal
        name="product.shipping.after"
        props={null}
      />
    </Shipping>
  </Connect(Shipping)>
</Provider>
`;

exports[`Shipping label should render shipping price 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(Shipping)
    productId="fakeId"
  >
    <Shipping
      dispatch={[Function]}
      productId="fakeId"
      shipping={
        Object {
          "currency": "EUR",
          "price": 1,
        }
      }
    >
      <Portal
        name="product.shipping.before"
        props={null}
      />
      <Portal
        name="product.shipping"
        props={null}
      >
        <PlaceholderLabel
          className="css-1n196ny"
          ready={true}
          style={null}
        >
          <Label
            className="css-117ocmm"
            currency="EUR"
            price={1}
          >
            <div
              className="css-117ocmm css-1ixzglu"
              role="text"
            >
              <Translate
                className={null}
                params={Object {}}
                role={null}
                string="shipping.cost"
              >
                <span
                  className={null}
                  role={null}
                >
                  shipping.cost
                  <FormatPrice
                    className={null}
                    currency="EUR"
                    forKey="price"
                    fractions={true}
                    key=".0"
                    price={1}
                  >
                    p
                  </FormatPrice>
                </span>
              </Translate>
            </div>
          </Label>
        </PlaceholderLabel>
      </Portal>
      <Portal
        name="product.shipping.after"
        props={null}
      />
    </Shipping>
  </Connect(Shipping)>
</Provider>
`;
