// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ProductVariants /> should render with variants 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(_class)>
    <_class
      currentBaseProductId="1013"
      currentProductVariantId={null}
      getProductData={[Function]}
      getVariantsByProductId={[Function]}
      selection={null}
      setProductVariantId={[Function]}
      variants={
        Object {
          "characteristics": Array [
            Object {
              "id": "1",
              "label": "Color",
              "values": Array [
                Object {
                  "id": "1",
                  "label": "Black",
                },
                Object {
                  "id": "2",
                  "label": "Blue",
                },
              ],
            },
            Object {
              "id": "2",
              "label": "Size",
              "values": Array [
                Object {
                  "id": "1",
                  "label": "0",
                },
                Object {
                  "id": "2",
                  "label": "11",
                },
                Object {
                  "id": "3",
                  "label": "7",
                },
              ],
            },
          ],
          "products": Array [
            Object {
              "availability": Object {
                "state": "waning",
                "text": "Limited stock available",
              },
              "characteristics": Object {
                "1": "1",
                "2": "1",
              },
              "hasOptions": false,
              "id": "1013-1014",
            },
            Object {
              "availability": Object {
                "state": "alert",
                "text": "Out of stock",
              },
              "characteristics": Object {
                "1": "1",
                "2": "2",
              },
              "hasOptions": false,
              "id": "1013-1015",
            },
            Object {
              "availability": Object {
                "state": "ok",
                "text": "Available",
              },
              "characteristics": Object {
                "1": "1",
                "2": "3",
              },
              "hasOptions": false,
              "id": "1013-1016",
            },
            Object {
              "availability": Object {
                "state": "ok",
                "text": "Available",
              },
              "characteristics": Object {
                "1": "2",
                "2": "1",
              },
              "hasOptions": false,
              "id": "1013-1017",
            },
            Object {
              "availability": Object {
                "state": "ok",
                "text": "Available",
              },
              "characteristics": Object {
                "1": "2",
                "2": "2",
              },
              "hasOptions": false,
              "id": "1013-1018",
            },
            Object {
              "availability": Object {
                "state": "ok",
                "text": "Available",
              },
              "characteristics": Object {
                "1": "2",
                "2": "3",
              },
              "hasOptions": false,
              "id": "1013-1019",
            },
          ],
        }
      }
    >
      <VariantSelects
        closeDelay={300}
        currentBaseProductId="1013"
        currentProductVariantId={null}
        getProductData={[Function]}
        getVariantsByProductId={[Function]}
        handleSelectionUpdate={[Function]}
        selection={
          Array [
            Object {
              "disabled": false,
              "id": "1",
              "label": "Color",
              "selected": false,
              "value": null,
              "values": Array [
                Object {
                  "availability": null,
                  "disabled": false,
                  "id": "1",
                  "label": "Black",
                  "selected": false,
                },
                Object {
                  "availability": null,
                  "disabled": false,
                  "id": "2",
                  "label": "Blue",
                  "selected": false,
                },
              ],
            },
            Object {
              "disabled": true,
              "id": "2",
              "label": "Size",
              "selected": false,
              "value": null,
              "values": Array [
                Object {
                  "availability": null,
                  "disabled": true,
                  "id": "1",
                  "label": "0",
                  "selected": false,
                },
                Object {
                  "availability": null,
                  "disabled": true,
                  "id": "2",
                  "label": "11",
                  "selected": false,
                },
                Object {
                  "availability": null,
                  "disabled": true,
                  "id": "3",
                  "label": "7",
                  "selected": false,
                },
              ],
            },
          ]
        }
        setAnimationState={[Function]}
        setProductVariantId={[Function]}
      >
        <div
          data-test-id="variantsPicker"
        >
          <Connect(RouteGuard)>
            <RouteGuard
              currentRoute="item/1013"
              dispatch={[Function]}
            >
              <div>
                <div
                  data-test-id="Color"
                >
                  <Picker
                    buttonComponent={[Function]}
                    buttonProps={
                      Object {
                        "highlighted": false,
                      }
                    }
                    clickDelay={150}
                    disabled={false}
                    duration={350}
                    isOpen={false}
                    items={
                      Array [
                        Object {
                          "disabled": false,
                          "label": "Black",
                          "rightComponent": <React.Fragment>
                            <Portal
                              name="product.variant-select.picker.availability.before"
                              props={
                                Object {
                                  "state": undefined,
                                  "text": undefined,
                                }
                              }
                            />
                            <Portal
                              name="product.variant-select.picker.availability"
                              props={
                                Object {
                                  "state": undefined,
                                  "text": undefined,
                                }
                              }
                            />
                            <Portal
                              name="product.variant-select.picker.availability.after"
                              props={
                                Object {
                                  "state": undefined,
                                  "text": undefined,
                                }
                              }
                            />
                          </React.Fragment>,
                          "value": "1",
                        },
                        Object {
                          "disabled": false,
                          "label": "Blue",
                          "rightComponent": <React.Fragment>
                            <Portal
                              name="product.variant-select.picker.availability.before"
                              props={
                                Object {
                                  "state": undefined,
                                  "text": undefined,
                                }
                              }
                            />
                            <Portal
                              name="product.variant-select.picker.availability"
                              props={
                                Object {
                                  "state": undefined,
                                  "text": undefined,
                                }
                              }
                            />
                            <Portal
                              name="product.variant-select.picker.availability.after"
                              props={
                                Object {
                                  "state": undefined,
                                  "text": undefined,
                                }
                              }
                            />
                          </React.Fragment>,
                          "value": "2",
                        },
                      ]
                    }
                    key="1"
                    label="Color"
                    onChange={[Function]}
                    onClose={[Function]}
                    placeholder={
                      <Translate
                        className=""
                        params={
                          Array [
                            "Color",
                          ]
                        }
                        string="product.pick_an_attribute"
                      />
                    }
                    value={null}
                  >
                    <Picker
                      buttonComponent={[Function]}
                      buttonProps={
                        Object {
                          "highlighted": false,
                        }
                      }
                      className="css-degt7t"
                      clickDelay={150}
                      disabled={false}
                      duration={350}
                      isOpen={false}
                      items={
                        Array [
                          Object {
                            "disabled": false,
                            "label": "Black",
                            "rightComponent": <React.Fragment>
                              <Portal
                                name="product.variant-select.picker.availability.before"
                                props={
                                  Object {
                                    "state": undefined,
                                    "text": undefined,
                                  }
                                }
                              />
                              <Portal
                                name="product.variant-select.picker.availability"
                                props={
                                  Object {
                                    "state": undefined,
                                    "text": undefined,
                                  }
                                }
                              />
                              <Portal
                                name="product.variant-select.picker.availability.after"
                                props={
                                  Object {
                                    "state": undefined,
                                    "text": undefined,
                                  }
                                }
                              />
                            </React.Fragment>,
                            "value": "1",
                          },
                          Object {
                            "disabled": false,
                            "label": "Blue",
                            "rightComponent": <React.Fragment>
                              <Portal
                                name="product.variant-select.picker.availability.before"
                                props={
                                  Object {
                                    "state": undefined,
                                    "text": undefined,
                                  }
                                }
                              />
                              <Portal
                                name="product.variant-select.picker.availability"
                                props={
                                  Object {
                                    "state": undefined,
                                    "text": undefined,
                                  }
                                }
                              />
                              <Portal
                                name="product.variant-select.picker.availability.after"
                                props={
                                  Object {
                                    "state": undefined,
                                    "text": undefined,
                                  }
                                }
                              />
                            </React.Fragment>,
                            "value": "2",
                          },
                        ]
                      }
                      label="Color"
                      listComponent={[Function]}
                      modalComponent={[Function]}
                      onChange={[Function]}
                      onClose={[Function]}
                      onSelect={[Function]}
                      placeholder={
                        <Translate
                          className=""
                          params={
                            Array [
                              "Color",
                            ]
                          }
                          string="product.pick_an_attribute"
                        />
                      }
                      value={null}
                    >
                      <div
                        className="css-degt7t"
                      >
                        <ProductVariantPickerButton
                          disabled={false}
                          highlighted={false}
                          label={
                            <Translate
                              className=""
                              params={
                                Array [
                                  "Color",
                                ]
                              }
                              string="product.pick_an_attribute"
                            />
                          }
                          openList={[Function]}
                          value=""
                        >
                          <button
                            className="css-upjo2d css-164ggb6"
                            data-test-id="variantSelector"
                            onClick={[Function]}
                          >
                            <span
                              className="css-1358lbd"
                            >
                              <Translate
                                className=""
                                params={
                                  Array [
                                    "Color",
                                  ]
                                }
                                string="product.pick_an_attribute"
                              >
                                <span
                                  className=""
                                >
                                  product.pick_an_attribute
                                </span>
                              </Translate>
                            </span>
                          </button>
                        </ProductVariantPickerButton>
                        <Portal
                          isOpened={true}
                          onClose={[Function]}
                          onOpen={[Function]}
                          onUpdate={[Function]}
                        />
                      </div>
                    </Picker>
                  </Picker>
                </div>
                <div
                  data-test-id="Size"
                >
                  <Picker
                    buttonComponent={[Function]}
                    buttonProps={
                      Object {
                        "highlighted": false,
                      }
                    }
                    clickDelay={150}
                    disabled={true}
                    duration={350}
                    isOpen={false}
                    items={
                      Array [
                        Object {
                          "disabled": true,
                          "label": "0",
                          "rightComponent": <React.Fragment>
                            <Portal
                              name="product.variant-select.picker.availability.before"
                              props={
                                Object {
                                  "state": undefined,
                                  "text": undefined,
                                }
                              }
                            />
                            <Portal
                              name="product.variant-select.picker.availability"
                              props={
                                Object {
                                  "state": undefined,
                                  "text": undefined,
                                }
                              }
                            />
                            <Portal
                              name="product.variant-select.picker.availability.after"
                              props={
                                Object {
                                  "state": undefined,
                                  "text": undefined,
                                }
                              }
                            />
                          </React.Fragment>,
                          "value": "1",
                        },
                        Object {
                          "disabled": true,
                          "label": "11",
                          "rightComponent": <React.Fragment>
                            <Portal
                              name="product.variant-select.picker.availability.before"
                              props={
                                Object {
                                  "state": undefined,
                                  "text": undefined,
                                }
                              }
                            />
                            <Portal
                              name="product.variant-select.picker.availability"
                              props={
                                Object {
                                  "state": undefined,
                                  "text": undefined,
                                }
                              }
                            />
                            <Portal
                              name="product.variant-select.picker.availability.after"
                              props={
                                Object {
                                  "state": undefined,
                                  "text": undefined,
                                }
                              }
                            />
                          </React.Fragment>,
                          "value": "2",
                        },
                        Object {
                          "disabled": true,
                          "label": "7",
                          "rightComponent": <React.Fragment>
                            <Portal
                              name="product.variant-select.picker.availability.before"
                              props={
                                Object {
                                  "state": undefined,
                                  "text": undefined,
                                }
                              }
                            />
                            <Portal
                              name="product.variant-select.picker.availability"
                              props={
                                Object {
                                  "state": undefined,
                                  "text": undefined,
                                }
                              }
                            />
                            <Portal
                              name="product.variant-select.picker.availability.after"
                              props={
                                Object {
                                  "state": undefined,
                                  "text": undefined,
                                }
                              }
                            />
                          </React.Fragment>,
                          "value": "3",
                        },
                      ]
                    }
                    key="2"
                    label="Size"
                    onChange={[Function]}
                    onClose={[Function]}
                    placeholder={
                      <Translate
                        className=""
                        params={
                          Array [
                            "Size",
                          ]
                        }
                        string="product.pick_an_attribute"
                      />
                    }
                    value={null}
                  >
                    <Picker
                      buttonComponent={[Function]}
                      buttonProps={
                        Object {
                          "highlighted": false,
                        }
                      }
                      className="css-degt7t"
                      clickDelay={150}
                      disabled={true}
                      duration={350}
                      isOpen={false}
                      items={
                        Array [
                          Object {
                            "disabled": true,
                            "label": "0",
                            "rightComponent": <React.Fragment>
                              <Portal
                                name="product.variant-select.picker.availability.before"
                                props={
                                  Object {
                                    "state": undefined,
                                    "text": undefined,
                                  }
                                }
                              />
                              <Portal
                                name="product.variant-select.picker.availability"
                                props={
                                  Object {
                                    "state": undefined,
                                    "text": undefined,
                                  }
                                }
                              />
                              <Portal
                                name="product.variant-select.picker.availability.after"
                                props={
                                  Object {
                                    "state": undefined,
                                    "text": undefined,
                                  }
                                }
                              />
                            </React.Fragment>,
                            "value": "1",
                          },
                          Object {
                            "disabled": true,
                            "label": "11",
                            "rightComponent": <React.Fragment>
                              <Portal
                                name="product.variant-select.picker.availability.before"
                                props={
                                  Object {
                                    "state": undefined,
                                    "text": undefined,
                                  }
                                }
                              />
                              <Portal
                                name="product.variant-select.picker.availability"
                                props={
                                  Object {
                                    "state": undefined,
                                    "text": undefined,
                                  }
                                }
                              />
                              <Portal
                                name="product.variant-select.picker.availability.after"
                                props={
                                  Object {
                                    "state": undefined,
                                    "text": undefined,
                                  }
                                }
                              />
                            </React.Fragment>,
                            "value": "2",
                          },
                          Object {
                            "disabled": true,
                            "label": "7",
                            "rightComponent": <React.Fragment>
                              <Portal
                                name="product.variant-select.picker.availability.before"
                                props={
                                  Object {
                                    "state": undefined,
                                    "text": undefined,
                                  }
                                }
                              />
                              <Portal
                                name="product.variant-select.picker.availability"
                                props={
                                  Object {
                                    "state": undefined,
                                    "text": undefined,
                                  }
                                }
                              />
                              <Portal
                                name="product.variant-select.picker.availability.after"
                                props={
                                  Object {
                                    "state": undefined,
                                    "text": undefined,
                                  }
                                }
                              />
                            </React.Fragment>,
                            "value": "3",
                          },
                        ]
                      }
                      label="Size"
                      listComponent={[Function]}
                      modalComponent={[Function]}
                      onChange={[Function]}
                      onClose={[Function]}
                      onSelect={[Function]}
                      placeholder={
                        <Translate
                          className=""
                          params={
                            Array [
                              "Size",
                            ]
                          }
                          string="product.pick_an_attribute"
                        />
                      }
                      value={null}
                    >
                      <div
                        className="css-degt7t"
                      >
                        <ProductVariantPickerButton
                          disabled={true}
                          highlighted={false}
                          label={
                            <Translate
                              className=""
                              params={
                                Array [
                                  "Size",
                                ]
                              }
                              string="product.pick_an_attribute"
                            />
                          }
                          openList={null}
                          value=""
                        >
                          <button
                            className="css-upjo2d css-1tr18jt"
                            data-test-id="variantSelector"
                            onClick={null}
                          >
                            <span
                              className="css-1358lbd"
                            >
                              <Translate
                                className=""
                                params={
                                  Array [
                                    "Size",
                                  ]
                                }
                                string="product.pick_an_attribute"
                              >
                                <span
                                  className=""
                                >
                                  product.pick_an_attribute
                                </span>
                              </Translate>
                            </span>
                          </button>
                        </ProductVariantPickerButton>
                        <Portal
                          isOpened={true}
                          onClose={[Function]}
                          onOpen={[Function]}
                          onUpdate={[Function]}
                        />
                      </div>
                    </Picker>
                  </Picker>
                </div>
              </div>
            </RouteGuard>
          </Connect(RouteGuard)>
        </div>
      </VariantSelects>
    </_class>
  </Connect(_class)>
</Provider>
`;

exports[`<ProductVariants /> should update after selectionUpdate 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(_class)>
    <_class
      currentBaseProductId="1013"
      currentProductVariantId="1013-1018"
      getProductData={[Function]}
      getVariantsByProductId={[Function]}
      selection={null}
      setProductVariantId={[Function]}
      variants={
        Object {
          "characteristics": Array [
            Object {
              "id": "1",
              "label": "Color",
              "values": Array [
                Object {
                  "id": "1",
                  "label": "Black",
                },
                Object {
                  "id": "2",
                  "label": "Blue",
                },
              ],
            },
            Object {
              "id": "2",
              "label": "Size",
              "values": Array [
                Object {
                  "id": "1",
                  "label": "0",
                },
                Object {
                  "id": "2",
                  "label": "11",
                },
                Object {
                  "id": "3",
                  "label": "7",
                },
              ],
            },
          ],
          "products": Array [
            Object {
              "availability": Object {
                "state": "waning",
                "text": "Limited stock available",
              },
              "characteristics": Object {
                "1": "1",
                "2": "1",
              },
              "hasOptions": false,
              "id": "1013-1014",
            },
            Object {
              "availability": Object {
                "state": "alert",
                "text": "Out of stock",
              },
              "characteristics": Object {
                "1": "1",
                "2": "2",
              },
              "hasOptions": false,
              "id": "1013-1015",
            },
            Object {
              "availability": Object {
                "state": "ok",
                "text": "Available",
              },
              "characteristics": Object {
                "1": "1",
                "2": "3",
              },
              "hasOptions": false,
              "id": "1013-1016",
            },
            Object {
              "availability": Object {
                "state": "ok",
                "text": "Available",
              },
              "characteristics": Object {
                "1": "2",
                "2": "1",
              },
              "hasOptions": false,
              "id": "1013-1017",
            },
            Object {
              "availability": Object {
                "state": "ok",
                "text": "Available",
              },
              "characteristics": Object {
                "1": "2",
                "2": "2",
              },
              "hasOptions": false,
              "id": "1013-1018",
            },
            Object {
              "availability": Object {
                "state": "ok",
                "text": "Available",
              },
              "characteristics": Object {
                "1": "2",
                "2": "3",
              },
              "hasOptions": false,
              "id": "1013-1019",
            },
          ],
        }
      }
    >
      <VariantSelects
        closeDelay={300}
        currentBaseProductId="1013"
        currentProductVariantId="1013-1018"
        getProductData={[Function]}
        getVariantsByProductId={[Function]}
        handleSelectionUpdate={[Function]}
        selection={
          Array [
            Object {
              "disabled": false,
              "id": "1",
              "label": "Color",
              "selected": true,
              "value": "1",
              "values": Array [
                Object {
                  "availability": null,
                  "disabled": false,
                  "id": "1",
                  "label": "Black",
                  "selected": true,
                },
                Object {
                  "availability": null,
                  "disabled": false,
                  "id": "2",
                  "label": "Blue",
                  "selected": false,
                },
              ],
            },
            Object {
              "disabled": false,
              "id": "2",
              "label": "Size",
              "selected": false,
              "value": null,
              "values": Array [
                Object {
                  "availability": Object {
                    "state": "waning",
                    "text": "Limited stock available",
                  },
                  "disabled": false,
                  "id": "1",
                  "label": "0",
                  "selected": false,
                },
                Object {
                  "availability": Object {
                    "state": "alert",
                    "text": "Out of stock",
                  },
                  "disabled": false,
                  "id": "2",
                  "label": "11",
                  "selected": false,
                },
                Object {
                  "availability": null,
                  "disabled": false,
                  "id": "3",
                  "label": "7",
                  "selected": false,
                },
              ],
            },
          ]
        }
        setAnimationState={[Function]}
        setProductVariantId={[Function]}
      >
        <div
          data-test-id="variantsPicker"
        >
          <Connect(RouteGuard)>
            <RouteGuard
              currentRoute="item/1013"
              dispatch={[Function]}
            >
              <div>
                <div
                  data-test-id="Color"
                >
                  <Picker
                    buttonComponent={[Function]}
                    buttonProps={
                      Object {
                        "highlighted": false,
                      }
                    }
                    clickDelay={150}
                    disabled={false}
                    duration={350}
                    isOpen={false}
                    items={
                      Array [
                        Object {
                          "disabled": false,
                          "label": "Black",
                          "rightComponent": <React.Fragment>
                            <Portal
                              name="product.variant-select.picker.availability.before"
                              props={
                                Object {
                                  "state": undefined,
                                  "text": undefined,
                                }
                              }
                            />
                            <Portal
                              name="product.variant-select.picker.availability"
                              props={
                                Object {
                                  "state": undefined,
                                  "text": undefined,
                                }
                              }
                            />
                            <Portal
                              name="product.variant-select.picker.availability.after"
                              props={
                                Object {
                                  "state": undefined,
                                  "text": undefined,
                                }
                              }
                            />
                          </React.Fragment>,
                          "value": "1",
                        },
                        Object {
                          "disabled": false,
                          "label": "Blue",
                          "rightComponent": <React.Fragment>
                            <Portal
                              name="product.variant-select.picker.availability.before"
                              props={
                                Object {
                                  "state": undefined,
                                  "text": undefined,
                                }
                              }
                            />
                            <Portal
                              name="product.variant-select.picker.availability"
                              props={
                                Object {
                                  "state": undefined,
                                  "text": undefined,
                                }
                              }
                            />
                            <Portal
                              name="product.variant-select.picker.availability.after"
                              props={
                                Object {
                                  "state": undefined,
                                  "text": undefined,
                                }
                              }
                            />
                          </React.Fragment>,
                          "value": "2",
                        },
                      ]
                    }
                    key="1"
                    label="Color"
                    onChange={[Function]}
                    onClose={[Function]}
                    placeholder={
                      <Translate
                        className=""
                        params={
                          Array [
                            "Color",
                          ]
                        }
                        string="product.pick_an_attribute"
                      />
                    }
                    value="1"
                  >
                    <Picker
                      buttonComponent={[Function]}
                      buttonProps={
                        Object {
                          "highlighted": false,
                        }
                      }
                      className="css-degt7t"
                      clickDelay={150}
                      disabled={false}
                      duration={350}
                      isOpen={false}
                      items={
                        Array [
                          Object {
                            "disabled": false,
                            "label": "Black",
                            "rightComponent": <React.Fragment>
                              <Portal
                                name="product.variant-select.picker.availability.before"
                                props={
                                  Object {
                                    "state": undefined,
                                    "text": undefined,
                                  }
                                }
                              />
                              <Portal
                                name="product.variant-select.picker.availability"
                                props={
                                  Object {
                                    "state": undefined,
                                    "text": undefined,
                                  }
                                }
                              />
                              <Portal
                                name="product.variant-select.picker.availability.after"
                                props={
                                  Object {
                                    "state": undefined,
                                    "text": undefined,
                                  }
                                }
                              />
                            </React.Fragment>,
                            "value": "1",
                          },
                          Object {
                            "disabled": false,
                            "label": "Blue",
                            "rightComponent": <React.Fragment>
                              <Portal
                                name="product.variant-select.picker.availability.before"
                                props={
                                  Object {
                                    "state": undefined,
                                    "text": undefined,
                                  }
                                }
                              />
                              <Portal
                                name="product.variant-select.picker.availability"
                                props={
                                  Object {
                                    "state": undefined,
                                    "text": undefined,
                                  }
                                }
                              />
                              <Portal
                                name="product.variant-select.picker.availability.after"
                                props={
                                  Object {
                                    "state": undefined,
                                    "text": undefined,
                                  }
                                }
                              />
                            </React.Fragment>,
                            "value": "2",
                          },
                        ]
                      }
                      label="Color"
                      listComponent={[Function]}
                      modalComponent={[Function]}
                      onChange={[Function]}
                      onClose={[Function]}
                      onSelect={[Function]}
                      placeholder={
                        <Translate
                          className=""
                          params={
                            Array [
                              "Color",
                            ]
                          }
                          string="product.pick_an_attribute"
                        />
                      }
                      value="1"
                    >
                      <div
                        className="css-degt7t"
                      >
                        <ProductVariantPickerButton
                          disabled={false}
                          highlighted={false}
                          label="Color"
                          openList={[Function]}
                          value="Black"
                        >
                          <button
                            className="css-upjo2d css-164ggb6"
                            data-test-id="variantSelector"
                            onClick={[Function]}
                          >
                            <span
                              className="css-1358lbd"
                            >
                              Color
                            </span>
                            <span
                              className="css-13rzlhv"
                            >
                              Black
                            </span>
                          </button>
                        </ProductVariantPickerButton>
                        <Portal
                          isOpened={true}
                          onClose={[Function]}
                          onOpen={[Function]}
                          onUpdate={[Function]}
                        />
                      </div>
                    </Picker>
                  </Picker>
                </div>
                <div
                  data-test-id="Size"
                >
                  <Picker
                    buttonComponent={[Function]}
                    buttonProps={
                      Object {
                        "highlighted": false,
                      }
                    }
                    clickDelay={150}
                    disabled={false}
                    duration={350}
                    isOpen={false}
                    items={
                      Array [
                        Object {
                          "disabled": false,
                          "label": "0",
                          "rightComponent": <React.Fragment>
                            <Portal
                              name="product.variant-select.picker.availability.before"
                              props={
                                Object {
                                  "state": "waning",
                                  "text": "Limited stock available",
                                }
                              }
                            />
                            <Portal
                              name="product.variant-select.picker.availability"
                              props={
                                Object {
                                  "state": "waning",
                                  "text": "Limited stock available",
                                }
                              }
                            >
                              <Availability
                                className="css-1kcjft6"
                                showWhenAvailable={false}
                                state="waning"
                                text="Limited stock available"
                              />
                            </Portal>
                            <Portal
                              name="product.variant-select.picker.availability.after"
                              props={
                                Object {
                                  "state": "waning",
                                  "text": "Limited stock available",
                                }
                              }
                            />
                          </React.Fragment>,
                          "value": "1",
                        },
                        Object {
                          "disabled": false,
                          "label": "11",
                          "rightComponent": <React.Fragment>
                            <Portal
                              name="product.variant-select.picker.availability.before"
                              props={
                                Object {
                                  "state": "alert",
                                  "text": "Out of stock",
                                }
                              }
                            />
                            <Portal
                              name="product.variant-select.picker.availability"
                              props={
                                Object {
                                  "state": "alert",
                                  "text": "Out of stock",
                                }
                              }
                            >
                              <Availability
                                className="css-1kcjft6"
                                showWhenAvailable={false}
                                state="alert"
                                text="Out of stock"
                              />
                            </Portal>
                            <Portal
                              name="product.variant-select.picker.availability.after"
                              props={
                                Object {
                                  "state": "alert",
                                  "text": "Out of stock",
                                }
                              }
                            />
                          </React.Fragment>,
                          "value": "2",
                        },
                        Object {
                          "disabled": false,
                          "label": "7",
                          "rightComponent": <React.Fragment>
                            <Portal
                              name="product.variant-select.picker.availability.before"
                              props={
                                Object {
                                  "state": undefined,
                                  "text": undefined,
                                }
                              }
                            />
                            <Portal
                              name="product.variant-select.picker.availability"
                              props={
                                Object {
                                  "state": undefined,
                                  "text": undefined,
                                }
                              }
                            />
                            <Portal
                              name="product.variant-select.picker.availability.after"
                              props={
                                Object {
                                  "state": undefined,
                                  "text": undefined,
                                }
                              }
                            />
                          </React.Fragment>,
                          "value": "3",
                        },
                      ]
                    }
                    key="2"
                    label="Size"
                    onChange={[Function]}
                    onClose={[Function]}
                    placeholder={
                      <Translate
                        className=""
                        params={
                          Array [
                            "Size",
                          ]
                        }
                        string="product.pick_an_attribute"
                      />
                    }
                    value={null}
                  >
                    <Picker
                      buttonComponent={[Function]}
                      buttonProps={
                        Object {
                          "highlighted": false,
                        }
                      }
                      className="css-degt7t"
                      clickDelay={150}
                      disabled={false}
                      duration={350}
                      isOpen={false}
                      items={
                        Array [
                          Object {
                            "disabled": false,
                            "label": "0",
                            "rightComponent": <React.Fragment>
                              <Portal
                                name="product.variant-select.picker.availability.before"
                                props={
                                  Object {
                                    "state": "waning",
                                    "text": "Limited stock available",
                                  }
                                }
                              />
                              <Portal
                                name="product.variant-select.picker.availability"
                                props={
                                  Object {
                                    "state": "waning",
                                    "text": "Limited stock available",
                                  }
                                }
                              >
                                <Availability
                                  className="css-1kcjft6"
                                  showWhenAvailable={false}
                                  state="waning"
                                  text="Limited stock available"
                                />
                              </Portal>
                              <Portal
                                name="product.variant-select.picker.availability.after"
                                props={
                                  Object {
                                    "state": "waning",
                                    "text": "Limited stock available",
                                  }
                                }
                              />
                            </React.Fragment>,
                            "value": "1",
                          },
                          Object {
                            "disabled": false,
                            "label": "11",
                            "rightComponent": <React.Fragment>
                              <Portal
                                name="product.variant-select.picker.availability.before"
                                props={
                                  Object {
                                    "state": "alert",
                                    "text": "Out of stock",
                                  }
                                }
                              />
                              <Portal
                                name="product.variant-select.picker.availability"
                                props={
                                  Object {
                                    "state": "alert",
                                    "text": "Out of stock",
                                  }
                                }
                              >
                                <Availability
                                  className="css-1kcjft6"
                                  showWhenAvailable={false}
                                  state="alert"
                                  text="Out of stock"
                                />
                              </Portal>
                              <Portal
                                name="product.variant-select.picker.availability.after"
                                props={
                                  Object {
                                    "state": "alert",
                                    "text": "Out of stock",
                                  }
                                }
                              />
                            </React.Fragment>,
                            "value": "2",
                          },
                          Object {
                            "disabled": false,
                            "label": "7",
                            "rightComponent": <React.Fragment>
                              <Portal
                                name="product.variant-select.picker.availability.before"
                                props={
                                  Object {
                                    "state": undefined,
                                    "text": undefined,
                                  }
                                }
                              />
                              <Portal
                                name="product.variant-select.picker.availability"
                                props={
                                  Object {
                                    "state": undefined,
                                    "text": undefined,
                                  }
                                }
                              />
                              <Portal
                                name="product.variant-select.picker.availability.after"
                                props={
                                  Object {
                                    "state": undefined,
                                    "text": undefined,
                                  }
                                }
                              />
                            </React.Fragment>,
                            "value": "3",
                          },
                        ]
                      }
                      label="Size"
                      listComponent={[Function]}
                      modalComponent={[Function]}
                      onChange={[Function]}
                      onClose={[Function]}
                      onSelect={[Function]}
                      placeholder={
                        <Translate
                          className=""
                          params={
                            Array [
                              "Size",
                            ]
                          }
                          string="product.pick_an_attribute"
                        />
                      }
                      value={null}
                    >
                      <div
                        className="css-degt7t"
                      >
                        <ProductVariantPickerButton
                          disabled={false}
                          highlighted={false}
                          label={
                            <Translate
                              className=""
                              params={
                                Array [
                                  "Size",
                                ]
                              }
                              string="product.pick_an_attribute"
                            />
                          }
                          openList={[Function]}
                          value=""
                        >
                          <button
                            className="css-upjo2d css-164ggb6"
                            data-test-id="variantSelector"
                            onClick={[Function]}
                          >
                            <span
                              className="css-1358lbd"
                            >
                              <Translate
                                className=""
                                params={
                                  Array [
                                    "Size",
                                  ]
                                }
                                string="product.pick_an_attribute"
                              >
                                <span
                                  className=""
                                >
                                  product.pick_an_attribute
                                </span>
                              </Translate>
                            </span>
                          </button>
                        </ProductVariantPickerButton>
                        <Portal
                          isOpened={true}
                          onClose={[Function]}
                          onOpen={[Function]}
                          onUpdate={[Function]}
                        />
                      </div>
                    </Picker>
                  </Picker>
                </div>
              </div>
            </RouteGuard>
          </Connect(RouteGuard)>
        </div>
      </VariantSelects>
    </_class>
  </Connect(_class)>
</Provider>
`;

exports[`<ProductVariants /> shouldn't render without variants 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(_class)>
    <_class
      currentBaseProductId="1013"
      currentProductVariantId={null}
      getProductData={[Function]}
      getVariantsByProductId={[Function]}
      selection={null}
      setProductVariantId={[Function]}
      variants={null}
    >
      <VariantSelects
        closeDelay={300}
        currentBaseProductId="1013"
        currentProductVariantId={null}
        getProductData={[Function]}
        getVariantsByProductId={[Function]}
        handleSelectionUpdate={[Function]}
        selection={null}
        setAnimationState={[Function]}
        setProductVariantId={[Function]}
      />
    </_class>
  </Connect(_class)>
</Provider>
`;
