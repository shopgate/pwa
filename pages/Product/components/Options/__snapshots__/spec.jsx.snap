// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Options /> Given the component was mounted to the DOM should match snapshot 1`] = `
<I18nProvider
  lang="en"
  locales={Object {}}
>
  <Options
    currentOptions={Object {}}
    options={
      Array [
        Object {
          "id": "test-id",
          "items": Array [
            Object {
              "currency": "USD",
              "price": 10,
            },
            Object {
              "currency": "USD",
              "price": 10,
            },
          ],
          "label": "label",
          "type": "select",
        },
      ]
    }
    storeSelection={
      [MockFunction] {
        "calls": Array [
          Array [
            "test-id",
            undefined,
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
  >
    <Portal
      name="product.options.before"
      props={null}
    />
    <Portal
      name="product.options"
      props={null}
    >
      <div
        data-test-id="optionsPicker"
      >
        <Option
          id="test-id"
          items={
            Array [
              Object {
                "currency": "USD",
                "price": 10,
              },
              Object {
                "currency": "USD",
                "price": 10,
              },
            ]
          }
          key="test-id"
          label="label"
          onChange={
            [MockFunction] {
              "calls": Array [
                Array [
                  "test-id",
                  undefined,
                ],
              ],
              "results": Array [
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
              ],
            }
          }
          value={null}
        >
          <div
            data-test-id="label"
            key="test-id"
          >
            <Picker
              buttonComponent={null}
              buttonProps={Object {}}
              clickDelay={150}
              items={
                Array [
                  Object {
                    "currency": "USD",
                    "price": 10,
                    "rightComponent": <PriceDifference
                      className="css-fxshz5"
                      currency="USD"
                      difference={10}
                    />,
                  },
                  Object {
                    "currency": "USD",
                    "price": 10,
                    "rightComponent": <PriceDifference
                      className="css-fxshz5"
                      currency="USD"
                      difference={10}
                    />,
                  },
                ]
              }
              label="label"
              onChange={[Function]}
              placeholder={
                <Translate
                  className=""
                  params={
                    Array [
                      "label",
                    ]
                  }
                  string="product.pick_an_attribute"
                />
              }
              value={null}
            >
              <Picker
                buttonComponent={[Function]}
                buttonProps={Object {}}
                className="css-murgv5"
                clickDelay={150}
                disabled={false}
                duration={300}
                isOpen={false}
                items={
                  Array [
                    Object {
                      "currency": "USD",
                      "price": 10,
                      "rightComponent": <PriceDifference
                        className="css-fxshz5"
                        currency="USD"
                        difference={10}
                      />,
                    },
                    Object {
                      "currency": "USD",
                      "price": 10,
                      "rightComponent": <PriceDifference
                        className="css-fxshz5"
                        currency="USD"
                        difference={10}
                      />,
                    },
                  ]
                }
                label="label"
                listComponent={[Function]}
                modalComponent={[Function]}
                onChange={[Function]}
                onClose={[Function]}
                onSelect={[Function]}
                placeholder={
                  <Translate
                    className=""
                    params={
                      Array [
                        "label",
                      ]
                    }
                    string="product.pick_an_attribute"
                  />
                }
                value={null}
              >
                <div
                  className="css-murgv5"
                >
                  <Button
                    disabled={false}
                    label={
                      <Translate
                        className=""
                        params={
                          Array [
                            "label",
                          ]
                        }
                        string="product.pick_an_attribute"
                      />
                    }
                    openList={[Function]}
                    value=""
                  >
                    <button
                      className="css-164ggb6"
                      onClick={[Function]}
                    >
                      <span
                        className="css-1358lbd"
                      >
                        <Translate
                          className=""
                          params={
                            Array [
                              "label",
                            ]
                          }
                          string="product.pick_an_attribute"
                        >
                          <span
                            className=""
                          >
                            product.pick_an_attribute
                          </span>
                        </Translate>
                      </span>
                    </button>
                  </Button>
                  <Portal
                    isOpened={true}
                    onClose={[Function]}
                    onOpen={[Function]}
                    onUpdate={[Function]}
                  />
                </div>
              </Picker>
            </Picker>
          </div>
        </Option>
      </div>
    </Portal>
    <Portal
      name="product.options.after"
      props={null}
    />
  </Options>
</I18nProvider>
`;
