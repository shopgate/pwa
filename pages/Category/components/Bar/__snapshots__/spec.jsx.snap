// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Bar /> should match snapshot 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <CategoryBar>
    <Consume
      context={
        Object {
          "Consumer": [Function],
        }
      }
      props={
        Object {
          "categoryId": "params.categoryId",
          "filters": "state.filters",
        }
      }
    >
      <Consumer>
        <Consume
          context={
            Object {
              "$$typeof": Symbol(react.context),
              "Consumer": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": [Circular],
              },
              "Provider": Object {
                "$$typeof": Symbol(react.provider),
                "_context": [Circular],
              },
              "_calculateChangedBits": null,
              "_currentRenderer": null,
              "_currentRenderer2": null,
              "_currentValue": undefined,
              "_currentValue2": undefined,
              "_threadCount": 0,
            }
          }
          props={
            Object {
              "ref": "ref.current",
            }
          }
        >
          <FilterBar
            categoryId="1234"
            filters={null}
            viewRef={null}
          >
            <section
              aria-hidden={true}
            >
              <div
                className="css-gpg0x2"
                data-test-id="filterBar"
                style={
                  Object {
                    "background": "#fff",
                    "color": "#000",
                  }
                }
              >
                <FilterBarContent>
                  <div
                    className="css-1cte488"
                  >
                    <Connect(Sort)>
                      <Sort
                        historyReplace={[Function]}
                        route={Object {}}
                      >
                        <Consumer>
                          <SelectBox
                            className="css-1bjlaf3"
                            classNames={
                              Object {
                                "button": "css-1oszrp2",
                                "dropdown": "css-1upf7n9",
                                "icon": "css-1fjm4uv",
                                "iconOpen": "css-1ttjj3p",
                                "selectBox": "css-1bjlaf3",
                                "selectItem": "css-69lc22",
                                "selection": "css-c8vppc",
                              }
                            }
                            defaultText="filter.sort.default"
                            duration={225}
                            handleSelectionUpdate={[Function]}
                            icon={[Function]}
                            initialValue="relevance"
                            item={[Function]}
                            items={
                              Array [
                                Object {
                                  "label": "filter.sort.most_popular",
                                  "value": "relevance",
                                },
                                Object {
                                  "label": "filter.sort.price_desc",
                                  "value": "priceDesc",
                                },
                                Object {
                                  "label": "filter.sort.price_asc",
                                  "value": "priceAsc",
                                },
                              ]
                            }
                            testId="sorting"
                          >
                            <div
                              className="css-1bjlaf3"
                              data-test-id="sorting"
                            >
                              <button
                                className="css-1oszrp2"
                                data-test-id="filter.sort.most_popular"
                                onClick={[Function]}
                                type="button"
                              >
                                <span
                                  className="css-c8vppc"
                                >
                                  <Translate
                                    className=""
                                    params={Object {}}
                                    role={null}
                                    string="filter.sort.most_popular"
                                  >
                                    <span
                                      className=""
                                      role={null}
                                    >
                                      filter.sort.most_popular
                                    </span>
                                  </Translate>
                                </span>
                                <div
                                  className="css-1fjm4uv"
                                >
                                  <ArrowDrop>
                                    <Icon
                                      className=""
                                      color={null}
                                      content="<path d=\\"M7 10l5 5 5-5z\\"/>"
                                      size="inherit"
                                      viewBox="0 0 24 24"
                                    >
                                      <svg
                                        className="css-yys9hb "
                                        dangerouslySetInnerHTML={
                                          Object {
                                            "__html": "<path d=\\"M7 10l5 5 5-5z\\"/>",
                                          }
                                        }
                                        style={
                                          Object {
                                            "fill": null,
                                            "fontSize": "inherit",
                                          }
                                        }
                                        viewBox="0 0 24 24"
                                        xmlns="http://www.w3.org/2000/svg"
                                      />
                                    </Icon>
                                  </ArrowDrop>
                                </div>
                              </button>
                              <Dropdown
                                className="css-1upf7n9"
                                duration={225}
                                easing={null}
                                isOpen={false}
                                onComplete={[Function]}
                                onStart={[Function]}
                              >
                                <Transition
                                  duration={225}
                                  easing={null}
                                  from={
                                    Object {
                                      "height": 0,
                                    }
                                  }
                                  onComplete={[Function]}
                                  onStart={[Function]}
                                  origin="0 0 0"
                                  set={null}
                                  to={
                                    Object {
                                      "height": 0,
                                    }
                                  }
                                >
                                  <div
                                    className="css-rdsogp css-1upf7n9"
                                    key=".0"
                                  >
                                    <div>
                                      <SelectBoxItem
                                        className="css-69lc22"
                                        handleSelectionUpdate={[Function]}
                                        key="relevance"
                                        label="filter.sort.most_popular"
                                        value="relevance"
                                        wrapper={[Function]}
                                      >
                                        <button
                                          className="css-69lc22"
                                          data-test-id="filter.sort.most_popular"
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          <Item>
                                            <Ripple
                                              className="css-m6e8uq"
                                              color="#000"
                                              disabled={false}
                                              fill={true}
                                              onClick={[Function]}
                                              onComplete={[Function]}
                                              overflow={false}
                                              size={null}
                                            >
                                              <div
                                                className="css-m6e8uq"
                                                data-test-id="Ripple"
                                                onClick={[Function]}
                                                style={null}
                                              >
                                                <Translate
                                                  className=""
                                                  params={Object {}}
                                                  role={null}
                                                  string="filter.sort.most_popular"
                                                >
                                                  <span
                                                    className=""
                                                    role={null}
                                                  >
                                                    filter.sort.most_popular
                                                  </span>
                                                </Translate>
                                              </div>
                                            </Ripple>
                                          </Item>
                                        </button>
                                      </SelectBoxItem>
                                      <SelectBoxItem
                                        className="css-69lc22"
                                        handleSelectionUpdate={[Function]}
                                        key="priceDesc"
                                        label="filter.sort.price_desc"
                                        value="priceDesc"
                                        wrapper={[Function]}
                                      >
                                        <button
                                          className="css-69lc22"
                                          data-test-id="filter.sort.price_desc"
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          <Item>
                                            <Ripple
                                              className="css-m6e8uq"
                                              color="#000"
                                              disabled={false}
                                              fill={true}
                                              onClick={[Function]}
                                              onComplete={[Function]}
                                              overflow={false}
                                              size={null}
                                            >
                                              <div
                                                className="css-m6e8uq"
                                                data-test-id="Ripple"
                                                onClick={[Function]}
                                                style={null}
                                              >
                                                <Translate
                                                  className=""
                                                  params={Object {}}
                                                  role={null}
                                                  string="filter.sort.price_desc"
                                                >
                                                  <span
                                                    className=""
                                                    role={null}
                                                  >
                                                    filter.sort.price_desc
                                                  </span>
                                                </Translate>
                                              </div>
                                            </Ripple>
                                          </Item>
                                        </button>
                                      </SelectBoxItem>
                                      <SelectBoxItem
                                        className="css-69lc22"
                                        handleSelectionUpdate={[Function]}
                                        key="priceAsc"
                                        label="filter.sort.price_asc"
                                        value="priceAsc"
                                        wrapper={[Function]}
                                      >
                                        <button
                                          className="css-69lc22"
                                          data-test-id="filter.sort.price_asc"
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          <Item>
                                            <Ripple
                                              className="css-m6e8uq"
                                              color="#000"
                                              disabled={false}
                                              fill={true}
                                              onClick={[Function]}
                                              onComplete={[Function]}
                                              overflow={false}
                                              size={null}
                                            >
                                              <div
                                                className="css-m6e8uq"
                                                data-test-id="Ripple"
                                                onClick={[Function]}
                                                style={null}
                                              >
                                                <Translate
                                                  className=""
                                                  params={Object {}}
                                                  role={null}
                                                  string="filter.sort.price_asc"
                                                >
                                                  <span
                                                    className=""
                                                    role={null}
                                                  >
                                                    filter.sort.price_asc
                                                  </span>
                                                </Translate>
                                              </div>
                                            </Ripple>
                                          </Item>
                                        </button>
                                      </SelectBoxItem>
                                    </div>
                                  </div>
                                </Transition>
                              </Dropdown>
                            </div>
                          </SelectBox>
                        </Consumer>
                      </Sort>
                    </Connect(Sort)>
                    <_default>
                      <Consumer>
                        <Connect(Component)
                          categoryId="1234"
                          navigate={[Function]}
                          query={
                            Object {
                              "s": "abc",
                            }
                          }
                        >
                          <Component
                            categoryId="1234"
                            navigate={[Function]}
                            query={
                              Object {
                                "s": "abc",
                              }
                            }
                          >
                            <button
                              className="css-v67geb"
                              data-test-id="filterButton"
                              onClick={[Function]}
                              type="button"
                            >
                              <Ripple
                                className="css-10g4052"
                                color="#000"
                                disabled={false}
                                fill={true}
                                onClick={[Function]}
                                onComplete={[Function]}
                                overflow={false}
                                size={null}
                              >
                                <div
                                  className="css-10g4052"
                                  data-test-id="Ripple"
                                  onClick={[Function]}
                                  style={null}
                                >
                                  <Grid
                                    className=""
                                    component="div"
                                    wrap={false}
                                  >
                                    <div
                                      className=" css-h7r55a"
                                    >
                                      <GridItem
                                        className="css-1cqgl9p"
                                        component="div"
                                        grow={0}
                                        shrink={1}
                                      >
                                        <div
                                          className="css-1cqgl9p"
                                        >
                                          <span
                                            className="css-1ev2b29"
                                          >
                                            <Translate
                                              className=""
                                              params={Object {}}
                                              role={null}
                                              string="titles.filter"
                                            >
                                              <span
                                                className=""
                                                role={null}
                                              >
                                                titles.filter
                                              </span>
                                            </Translate>
                                          </span>
                                        </div>
                                      </GridItem>
                                      <GridItem
                                        className=""
                                        component="div"
                                        grow={0}
                                        shrink={1}
                                      >
                                        <div
                                          className=""
                                        >
                                          <Filter>
                                            <Icon
                                              className=""
                                              color={null}
                                              content="<path d=\\"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\\"/>"
                                              size="inherit"
                                              viewBox="0 0 24 24"
                                            >
                                              <svg
                                                className="css-yys9hb "
                                                dangerouslySetInnerHTML={
                                                  Object {
                                                    "__html": "<path d=\\"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\\"/>",
                                                  }
                                                }
                                                style={
                                                  Object {
                                                    "fill": null,
                                                    "fontSize": "inherit",
                                                  }
                                                }
                                                viewBox="0 0 24 24"
                                                xmlns="http://www.w3.org/2000/svg"
                                              />
                                            </Icon>
                                          </Filter>
                                        </div>
                                      </GridItem>
                                    </div>
                                  </Grid>
                                </div>
                              </Ripple>
                            </button>
                          </Component>
                        </Connect(Component)>
                      </Consumer>
                    </_default>
                  </div>
                  <Consume
                    context={
                      Object {
                        "Consumer": [Function],
                      }
                    }
                    props={
                      Object {
                        "filters": "state.filters",
                        "routeId": "id",
                      }
                    }
                  >
                    <Consumer>
                      <Consume
                        context={
                          Object {
                            "$$typeof": Symbol(react.context),
                            "Consumer": Object {
                              "$$typeof": Symbol(react.context),
                              "_calculateChangedBits": null,
                              "_context": [Circular],
                            },
                            "Provider": Object {
                              "$$typeof": Symbol(react.provider),
                              "_context": [Circular],
                            },
                            "_calculateChangedBits": null,
                            "_currentRenderer": null,
                            "_currentRenderer2": null,
                            "_currentValue": undefined,
                            "_currentValue2": undefined,
                            "_threadCount": 0,
                          }
                        }
                        props={
                          Object {
                            "scrollTop": "scrollTop",
                          }
                        }
                      >
                        <Connect(FilterChips)
                          filters={null}
                          routeId=""
                          scrollTop={null}
                        >
                          <FilterChips
                            currentPathname={null}
                            filters={null}
                            openFilters={[Function]}
                            routeId=""
                            scrollTop={null}
                            updateFilters={[Function]}
                          />
                        </Connect(FilterChips)>
                      </Consume>
                    </Consumer>
                  </Consume>
                </FilterBarContent>
              </div>
            </section>
          </FilterBar>
        </Consume>
      </Consumer>
    </Consume>
  </CategoryBar>
</Provider>
`;
