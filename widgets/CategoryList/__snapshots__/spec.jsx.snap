// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<CategoryListWidget /> should not render the CategoryListWidget 1`] = `
<CategoryListWidget
  fetchCategory={[Function]}
  getCategory={[Function]}
  items={null}
  settings={
    Object {
      "categoryNumber": "",
      "headline": "Yay Categories",
      "showImages": false,
    }
  }
/>
`;

exports[`<CategoryListWidget /> should render the CategoryListWidget 1`] = `
<CategoryListWidget
  fetchCategory={[Function]}
  getCategory={[Function]}
  items={
    Array [
      Object {
        "id": "1",
        "imageUrl": "/some/url",
        "name": "Headline",
      },
      Object {
        "id": "2",
        "imageUrl": "/some/url",
        "name": "Headline",
      },
    ]
  }
  settings={
    Object {
      "categoryNumber": "",
      "headline": "Yay Categories",
      "showImages": false,
    }
  }
>
  <div
    className="css-1tgouoh"
    data-test-id="categoryList"
  >
    <h3
      className="css-twewb4"
    >
      Yay Categories
    </h3>
    <ResponsiveContainer
      appAlways={true}
      appOnly={false}
      breakpoint="<=xs"
      webAlways={false}
      webOnly={false}
    >
      <CategoryListDefault
        categories={
          Array [
            Object {
              "id": "1",
              "imageUrl": "/some/url",
              "name": "Headline",
            },
            Object {
              "id": "2",
              "imageUrl": "/some/url",
              "name": "Headline",
            },
          ]
        }
        settings={
          Object {
            "categoryNumber": "",
            "headline": "Yay Categories",
            "showImages": false,
          }
        }
      >
        <SheetList
          className={
            Object {
              "data-css-tgxhyl": "",
            }
          }
          hasImages={false}
          testId={null}
        >
          <List
            className={
              Object {
                "data-css-tgxhyl": "",
              }
            }
            role="listbox"
          >
            <ul
              className={
                Object {
                  "data-css-tgxhyl": "",
                }
              }
              role="listbox"
            >
              <ListItem
                className="css-id5jvr css-171mywc"
                isSelected={false}
                key="child-0/.$1"
                role={null}
                tabIndex={0}
              >
                <li
                  className="css-1p5q8vq css-id5jvr css-171mywc css-16gj3o1"
                  data-test-id="listItem"
                  role={null}
                >
                  <div
                    className="css-1ckzvk7"
                    data-test-id={null}
                  >
                    <ForwardRef(WithForwardedRef(Item))
                      image={null}
                      key="1"
                      link="/category/31"
                      linkComponent={[Function]}
                      rightComponent={
                        <Image
                          alt={null}
                          animating={true}
                          backgroundColor="#f2f2f2"
                          className="css-j7qxnf"
                          forcePlaceholder={false}
                          highestResolutionLoaded={[Function]}
                          onError={null}
                          onLoad={null}
                          ratio={null}
                          resolutions={
                            Array [
                              Object {
                                "blur": 2,
                                "height": 50,
                                "width": 50,
                              },
                              Object {
                                "height": 440,
                                "width": 440,
                              },
                            ]
                          }
                          src="/some/url"
                          srcmap={null}
                          transition={null}
                        />
                      }
                      testId="Headline"
                      title="Headline"
                    >
                      <Item
                        className={null}
                        description={null}
                        forwardedRef={null}
                        image={null}
                        isDisabled={false}
                        isSelected={false}
                        link="/category/31"
                        linkComponent={[Function]}
                        linkState={null}
                        onClick={null}
                        rightComponent={
                          <Image
                            alt={null}
                            animating={true}
                            backgroundColor="#f2f2f2"
                            className="css-j7qxnf"
                            forcePlaceholder={false}
                            highestResolutionLoaded={[Function]}
                            onError={null}
                            onLoad={null}
                            ratio={null}
                            resolutions={
                              Array [
                                Object {
                                  "blur": 2,
                                  "height": 50,
                                  "width": 50,
                                },
                                Object {
                                  "height": 440,
                                  "width": 440,
                                },
                              ]
                            }
                            src="/some/url"
                            srcmap={null}
                            transition={null}
                          />
                        }
                        testId="Headline"
                        title="Headline"
                      >
                        <ForwardRef(WithForwardedRef(Glow))
                          className={null}
                          styles={
                            Object {
                              "hover": Object {
                                "boxShadow": "-20px 0 0 red, 20px 0 0 #f7f7f7",
                              },
                            }
                          }
                        >
                          <Glow
                            className={null}
                            color="#f7f7f7"
                            forwardedRef={null}
                            styles={
                              Object {
                                "hover": Object {
                                  "boxShadow": "-20px 0 0 red, 20px 0 0 #f7f7f7",
                                },
                              }
                            }
                          >
                            <div
                              className="css-13azwyo"
                              onClick={[Function]}
                            >
                              <div
                                className="css-1bmd5dz"
                                style={Object {}}
                              />
                              <TextLink
                                className={null}
                                href="/category/31"
                                onClick={null}
                                state={null}
                                tabIndex={0}
                              >
                                <Link
                                  className="css-u12qp7"
                                  href="/category/31"
                                  onClick={null}
                                  state={null}
                                  tabIndex={0}
                                  tag="a"
                                >
                                  <div />
                                </Link>
                              </TextLink>
                            </div>
                          </Glow>
                        </ForwardRef(WithForwardedRef(Glow))>
                      </Item>
                    </ForwardRef(WithForwardedRef(Item))>
                  </div>
                </li>
              </ListItem>
              <ListItem
                className="css-id5jvr css-171mywc"
                isSelected={false}
                key="child-1/.$2"
                role={null}
                tabIndex={0}
              >
                <li
                  className="css-1p5q8vq css-id5jvr css-171mywc css-16gj3o1"
                  data-test-id="listItem"
                  role={null}
                >
                  <div
                    className="css-1ckzvk7"
                    data-test-id={null}
                  >
                    <ForwardRef(WithForwardedRef(Item))
                      image={null}
                      key="2"
                      link="/category/32"
                      linkComponent={[Function]}
                      rightComponent={
                        <Image
                          alt={null}
                          animating={true}
                          backgroundColor="#f2f2f2"
                          className="css-j7qxnf"
                          forcePlaceholder={false}
                          highestResolutionLoaded={[Function]}
                          onError={null}
                          onLoad={null}
                          ratio={null}
                          resolutions={
                            Array [
                              Object {
                                "blur": 2,
                                "height": 50,
                                "width": 50,
                              },
                              Object {
                                "height": 440,
                                "width": 440,
                              },
                            ]
                          }
                          src="/some/url"
                          srcmap={null}
                          transition={null}
                        />
                      }
                      testId="Headline"
                      title="Headline"
                    >
                      <Item
                        className={null}
                        description={null}
                        forwardedRef={null}
                        image={null}
                        isDisabled={false}
                        isSelected={false}
                        link="/category/32"
                        linkComponent={[Function]}
                        linkState={null}
                        onClick={null}
                        rightComponent={
                          <Image
                            alt={null}
                            animating={true}
                            backgroundColor="#f2f2f2"
                            className="css-j7qxnf"
                            forcePlaceholder={false}
                            highestResolutionLoaded={[Function]}
                            onError={null}
                            onLoad={null}
                            ratio={null}
                            resolutions={
                              Array [
                                Object {
                                  "blur": 2,
                                  "height": 50,
                                  "width": 50,
                                },
                                Object {
                                  "height": 440,
                                  "width": 440,
                                },
                              ]
                            }
                            src="/some/url"
                            srcmap={null}
                            transition={null}
                          />
                        }
                        testId="Headline"
                        title="Headline"
                      >
                        <ForwardRef(WithForwardedRef(Glow))
                          className={null}
                          styles={
                            Object {
                              "hover": Object {
                                "boxShadow": "-20px 0 0 red, 20px 0 0 #f7f7f7",
                              },
                            }
                          }
                        >
                          <Glow
                            className={null}
                            color="#f7f7f7"
                            forwardedRef={null}
                            styles={
                              Object {
                                "hover": Object {
                                  "boxShadow": "-20px 0 0 red, 20px 0 0 #f7f7f7",
                                },
                              }
                            }
                          >
                            <div
                              className="css-13azwyo"
                              onClick={[Function]}
                            >
                              <div
                                className="css-1bmd5dz"
                                style={Object {}}
                              />
                              <TextLink
                                className={null}
                                href="/category/32"
                                onClick={null}
                                state={null}
                                tabIndex={0}
                              >
                                <Link
                                  className="css-u12qp7"
                                  href="/category/32"
                                  onClick={null}
                                  state={null}
                                  tabIndex={0}
                                  tag="a"
                                >
                                  <div />
                                </Link>
                              </TextLink>
                            </div>
                          </Glow>
                        </ForwardRef(WithForwardedRef(Glow))>
                      </Item>
                    </ForwardRef(WithForwardedRef(Item))>
                  </div>
                </li>
              </ListItem>
            </ul>
          </List>
        </SheetList>
      </CategoryListDefault>
    </ResponsiveContainer>
    <ResponsiveContainer
      appAlways={false}
      appOnly={false}
      breakpoint=">xs"
      webAlways={false}
      webOnly={true}
    />
  </div>
</CategoryListWidget>
`;
