// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ImageSliderWidget /> should map the correct image settings to the components 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <ImageSliderWidget
    className=""
    settings={
      Object {
        "autostart": false,
        "delay": 7000,
        "images": Array [
          Object {
            "image": "http://placehold.it/350x150",
            "link": "http://example.com",
          },
          Object {
            "image": "http://placehold.it/10x10",
            "link": "http://other.example.com",
          },
        ],
        "loop": false,
        "pagination": true,
      }
    }
  >
    <Swiper
      autoPlay={false}
      className=""
      classNames={Object {}}
      controls={false}
      indicators={true}
      initialSlide={0}
      interval={7000}
      loop={false}
      maxIndicators={null}
      onSlideChange={[Function]}
      rebuildOnUpdate={false}
      slidesPerView={1}
      snapItems={true}
    >
      <div
        className="css-1hlki0z"
      >
        <ReactIdSwiper
          ContainerEl="div"
          WrapperEl="div"
          autoplay={false}
          containerClass="css-rdsogp"
          freeMode={false}
          getSwiper={[Function]}
          initialSlide={0}
          loop={false}
          modules={
            Array [
              Object {
                "create": [Function],
                "name": "pagination",
                "on": Object {
                  "activeIndexChange": [Function],
                  "click": [Function],
                  "destroy": [Function],
                  "init": [Function],
                  "slidesLengthChange": [Function],
                  "snapGridLengthChange": [Function],
                  "snapIndexChange": [Function],
                },
                "params": Object {
                  "pagination": Object {
                    "bulletActiveClass": "swiper-pagination-bullet-active",
                    "bulletClass": "swiper-pagination-bullet",
                    "bulletElement": "span",
                    "clickable": false,
                    "clickableClass": "swiper-pagination-clickable",
                    "currentClass": "swiper-pagination-current",
                    "dynamicBullets": false,
                    "dynamicMainBullets": 1,
                    "el": null,
                    "formatFractionCurrent": [Function],
                    "formatFractionTotal": [Function],
                    "hiddenClass": "swiper-pagination-hidden",
                    "hideOnClick": false,
                    "lockClass": "swiper-pagination-lock",
                    "modifierClass": "swiper-pagination-",
                    "progressbarFillClass": "swiper-pagination-progressbar-fill",
                    "progressbarOpposite": false,
                    "progressbarOppositeClass": "swiper-pagination-progressbar-opposite",
                    "renderBullet": null,
                    "renderCustom": null,
                    "renderFraction": null,
                    "renderProgressbar": null,
                    "totalClass": "swiper-pagination-total",
                    "type": "bullets",
                  },
                },
              },
              Object {
                "create": [Function],
                "name": "navigation",
                "on": Object {
                  "click": [Function],
                  "destroy": [Function],
                  "fromEdge": [Function],
                  "init": [Function],
                  "toEdge": [Function],
                },
                "params": Object {
                  "navigation": Object {
                    "disabledClass": "swiper-button-disabled",
                    "hiddenClass": "swiper-button-hidden",
                    "hideOnClick": false,
                    "lockClass": "swiper-button-lock",
                    "nextEl": null,
                    "prevEl": null,
                  },
                },
              },
            ]
          }
          navigation={
            Object {
              "nextEl": null,
              "prevEl": null,
            }
          }
          on={
            Object {
              "slideChange": [Function],
            }
          }
          pagination={
            Object {
              "bulletActiveClass": "css-hpsgy2",
              "bulletClass": "css-cvsmqf",
              "el": ".swiper-pagination",
              "type": "bullets",
            }
          }
          rebuildOnUpdate={false}
          renderNextButton={[Function]}
          renderPagination={[Function]}
          renderParallax={[Function]}
          renderPrevButton={[Function]}
          renderScrollbar={[Function]}
          slideClass="swiper-slide"
          slidesPerView={1}
          wrapperClass="swiper-wrapper"
        >
          <div
            className="css-rdsogp"
          >
            <div
              className="swiper-wrapper"
            >
              <SwiperItem
                className="swiper-slide"
                key=".$http=2//placehold.it/350x150"
              >
                <div
                  className="swiper-slide"
                  data-test-id="Slider"
                >
                  <Connect(Link)
                    className="css-63oe3q"
                    data-test-id="withLink"
                    href="http://example.com"
                  >
                    <Link
                      className="css-63oe3q"
                      data-test-id="withLink"
                      disabled={false}
                      historyPush={[Function]}
                      historyReplace={[Function]}
                      href="http://example.com"
                      replace={false}
                      state={Object {}}
                      tag="div"
                    >
                      <div
                        className="css-c6ki83 css-63oe3q"
                        data-test-id="link: http://example.com"
                        onClick={[Function]}
                        role="link"
                      >
                        <img
                          className={
                            Object {
                              "data-css-1rozygh": "",
                            }
                          }
                          data-test-id="link : undefined"
                          src="http://placehold.it/350x150"
                        />
                      </div>
                    </Link>
                  </Connect(Link)>
                </div>
              </SwiperItem>
              <SwiperItem
                className="swiper-slide"
                key=".$http=2//placehold.it/10x10"
              >
                <div
                  className="swiper-slide"
                  data-test-id="Slider"
                >
                  <Connect(Link)
                    className="css-63oe3q"
                    data-test-id="withLink"
                    href="http://other.example.com"
                  >
                    <Link
                      className="css-63oe3q"
                      data-test-id="withLink"
                      disabled={false}
                      historyPush={[Function]}
                      historyReplace={[Function]}
                      href="http://other.example.com"
                      replace={false}
                      state={Object {}}
                      tag="div"
                    >
                      <div
                        className="css-c6ki83 css-63oe3q"
                        data-test-id="link: http://other.example.com"
                        onClick={[Function]}
                        role="link"
                      >
                        <img
                          className={
                            Object {
                              "data-css-1rozygh": "",
                            }
                          }
                          data-test-id="link : undefined"
                          src="http://placehold.it/10x10"
                        />
                      </div>
                    </Link>
                  </Connect(Link)>
                </div>
              </SwiperItem>
            </div>
            <div
              className="swiper-pagination"
            />
          </div>
        </ReactIdSwiper>
      </div>
    </Swiper>
  </ImageSliderWidget>
</Provider>
`;

exports[`<ImageSliderWidget /> should render no slider with just a single image 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <ImageSliderWidget
    className=""
    settings={
      Object {
        "autostart": false,
        "delay": 7000,
        "images": Array [
          Object {
            "image": "http://placehold.it/350x150",
            "link": "http://example.com",
          },
        ],
        "loop": false,
        "pagination": true,
      }
    }
  >
    <div
      className=""
    >
      <Connect(Link)
        className="css-63oe3q"
        data-test-id="withLink"
        href="http://example.com"
      >
        <Link
          className="css-63oe3q"
          data-test-id="withLink"
          disabled={false}
          historyPush={[Function]}
          historyReplace={[Function]}
          href="http://example.com"
          replace={false}
          state={Object {}}
          tag="div"
        >
          <div
            className="css-c6ki83 css-63oe3q"
            data-test-id="link: http://example.com"
            onClick={[Function]}
            role="link"
          >
            <img
              className={
                Object {
                  "data-css-1rozygh": "",
                }
              }
              data-test-id="link : undefined"
              src="http://placehold.it/350x150"
            />
          </div>
        </Link>
      </Connect(Link)>
    </div>
  </ImageSliderWidget>
</Provider>
`;

exports[`<ImageSliderWidget /> should render the images unlinked if no link is set 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <ImageSliderWidget
    className=""
    settings={
      Object {
        "autostart": false,
        "delay": 7000,
        "images": Array [
          Object {
            "image": "http://placehold.it/350x150",
            "link": null,
          },
        ],
        "loop": false,
        "pagination": true,
      }
    }
  >
    <div
      className=""
    >
      <img
        className={
          Object {
            "data-css-1rozygh": "",
          }
        }
        data-test-id="link : undefined"
        src="http://placehold.it/350x150"
      />
    </div>
  </ImageSliderWidget>
</Provider>
`;

exports[`<ImageSliderWidget /> should render the images with links 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <ImageSliderWidget
    className=""
    settings={
      Object {
        "autostart": false,
        "delay": 7000,
        "images": Array [
          Object {
            "image": "http://placehold.it/350x150",
            "link": null,
          },
          Object {
            "image": "http://placehold.it/10x10",
            "link": "http://other.example.com",
          },
        ],
        "loop": false,
        "pagination": true,
      }
    }
  >
    <Swiper
      autoPlay={false}
      className=""
      classNames={Object {}}
      controls={false}
      indicators={true}
      initialSlide={0}
      interval={7000}
      loop={false}
      maxIndicators={null}
      onSlideChange={[Function]}
      rebuildOnUpdate={false}
      slidesPerView={1}
      snapItems={true}
    >
      <div
        className="css-1hlki0z"
      >
        <ReactIdSwiper
          ContainerEl="div"
          WrapperEl="div"
          autoplay={false}
          containerClass="css-rdsogp"
          freeMode={false}
          getSwiper={[Function]}
          initialSlide={0}
          loop={false}
          modules={
            Array [
              Object {
                "create": [Function],
                "name": "pagination",
                "on": Object {
                  "activeIndexChange": [Function],
                  "click": [Function],
                  "destroy": [Function],
                  "init": [Function],
                  "slidesLengthChange": [Function],
                  "snapGridLengthChange": [Function],
                  "snapIndexChange": [Function],
                },
                "params": Object {
                  "pagination": Object {
                    "bulletActiveClass": "swiper-pagination-bullet-active",
                    "bulletClass": "swiper-pagination-bullet",
                    "bulletElement": "span",
                    "clickable": false,
                    "clickableClass": "swiper-pagination-clickable",
                    "currentClass": "swiper-pagination-current",
                    "dynamicBullets": false,
                    "dynamicMainBullets": 1,
                    "el": null,
                    "formatFractionCurrent": [Function],
                    "formatFractionTotal": [Function],
                    "hiddenClass": "swiper-pagination-hidden",
                    "hideOnClick": false,
                    "lockClass": "swiper-pagination-lock",
                    "modifierClass": "swiper-pagination-",
                    "progressbarFillClass": "swiper-pagination-progressbar-fill",
                    "progressbarOpposite": false,
                    "progressbarOppositeClass": "swiper-pagination-progressbar-opposite",
                    "renderBullet": null,
                    "renderCustom": null,
                    "renderFraction": null,
                    "renderProgressbar": null,
                    "totalClass": "swiper-pagination-total",
                    "type": "bullets",
                  },
                },
              },
              Object {
                "create": [Function],
                "name": "navigation",
                "on": Object {
                  "click": [Function],
                  "destroy": [Function],
                  "fromEdge": [Function],
                  "init": [Function],
                  "toEdge": [Function],
                },
                "params": Object {
                  "navigation": Object {
                    "disabledClass": "swiper-button-disabled",
                    "hiddenClass": "swiper-button-hidden",
                    "hideOnClick": false,
                    "lockClass": "swiper-button-lock",
                    "nextEl": null,
                    "prevEl": null,
                  },
                },
              },
            ]
          }
          navigation={
            Object {
              "nextEl": null,
              "prevEl": null,
            }
          }
          on={
            Object {
              "slideChange": [Function],
            }
          }
          pagination={
            Object {
              "bulletActiveClass": "css-hpsgy2",
              "bulletClass": "css-cvsmqf",
              "el": ".swiper-pagination",
              "type": "bullets",
            }
          }
          rebuildOnUpdate={false}
          renderNextButton={[Function]}
          renderPagination={[Function]}
          renderParallax={[Function]}
          renderPrevButton={[Function]}
          renderScrollbar={[Function]}
          slideClass="swiper-slide"
          slidesPerView={1}
          wrapperClass="swiper-wrapper"
        >
          <div
            className="css-rdsogp"
          >
            <div
              className="swiper-wrapper"
            >
              <SwiperItem
                className="swiper-slide"
                key=".$http=2//placehold.it/350x150"
              >
                <div
                  className="swiper-slide"
                  data-test-id="Slider"
                >
                  <img
                    className={
                      Object {
                        "data-css-1rozygh": "",
                      }
                    }
                    data-test-id="link : undefined"
                    src="http://placehold.it/350x150"
                  />
                </div>
              </SwiperItem>
              <SwiperItem
                className="swiper-slide"
                key=".$http=2//placehold.it/10x10"
              >
                <div
                  className="swiper-slide"
                  data-test-id="Slider"
                >
                  <Connect(Link)
                    className="css-63oe3q"
                    data-test-id="withLink"
                    href="http://other.example.com"
                  >
                    <Link
                      className="css-63oe3q"
                      data-test-id="withLink"
                      disabled={false}
                      historyPush={[Function]}
                      historyReplace={[Function]}
                      href="http://other.example.com"
                      replace={false}
                      state={Object {}}
                      tag="div"
                    >
                      <div
                        className="css-c6ki83 css-63oe3q"
                        data-test-id="link: http://other.example.com"
                        onClick={[Function]}
                        role="link"
                      >
                        <img
                          className={
                            Object {
                              "data-css-1rozygh": "",
                            }
                          }
                          data-test-id="link : undefined"
                          src="http://placehold.it/10x10"
                        />
                      </div>
                    </Link>
                  </Connect(Link)>
                </div>
              </SwiperItem>
            </div>
            <div
              className="swiper-pagination"
            />
          </div>
        </ReactIdSwiper>
      </div>
    </Swiper>
  </ImageSliderWidget>
</Provider>
`;

exports[`<ImageSliderWidget /> should render the slider with the correct number of images 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <ImageSliderWidget
    className=""
    settings={
      Object {
        "autostart": false,
        "delay": 7000,
        "images": Array [
          Object {
            "image": "http://placehold.it/350x150",
            "link": "http://example.com",
          },
          Object {
            "image": "http://placehold.it/10x10",
            "link": "http://other.example.com",
          },
        ],
        "loop": false,
        "pagination": true,
      }
    }
  >
    <Swiper
      autoPlay={false}
      className=""
      classNames={Object {}}
      controls={false}
      indicators={true}
      initialSlide={0}
      interval={7000}
      loop={false}
      maxIndicators={null}
      onSlideChange={[Function]}
      rebuildOnUpdate={false}
      slidesPerView={1}
      snapItems={true}
    >
      <div
        className="css-1hlki0z"
      >
        <ReactIdSwiper
          ContainerEl="div"
          WrapperEl="div"
          autoplay={false}
          containerClass="css-rdsogp"
          freeMode={false}
          getSwiper={[Function]}
          initialSlide={0}
          loop={false}
          modules={
            Array [
              Object {
                "create": [Function],
                "name": "pagination",
                "on": Object {
                  "activeIndexChange": [Function],
                  "click": [Function],
                  "destroy": [Function],
                  "init": [Function],
                  "slidesLengthChange": [Function],
                  "snapGridLengthChange": [Function],
                  "snapIndexChange": [Function],
                },
                "params": Object {
                  "pagination": Object {
                    "bulletActiveClass": "swiper-pagination-bullet-active",
                    "bulletClass": "swiper-pagination-bullet",
                    "bulletElement": "span",
                    "clickable": false,
                    "clickableClass": "swiper-pagination-clickable",
                    "currentClass": "swiper-pagination-current",
                    "dynamicBullets": false,
                    "dynamicMainBullets": 1,
                    "el": null,
                    "formatFractionCurrent": [Function],
                    "formatFractionTotal": [Function],
                    "hiddenClass": "swiper-pagination-hidden",
                    "hideOnClick": false,
                    "lockClass": "swiper-pagination-lock",
                    "modifierClass": "swiper-pagination-",
                    "progressbarFillClass": "swiper-pagination-progressbar-fill",
                    "progressbarOpposite": false,
                    "progressbarOppositeClass": "swiper-pagination-progressbar-opposite",
                    "renderBullet": null,
                    "renderCustom": null,
                    "renderFraction": null,
                    "renderProgressbar": null,
                    "totalClass": "swiper-pagination-total",
                    "type": "bullets",
                  },
                },
              },
              Object {
                "create": [Function],
                "name": "navigation",
                "on": Object {
                  "click": [Function],
                  "destroy": [Function],
                  "fromEdge": [Function],
                  "init": [Function],
                  "toEdge": [Function],
                },
                "params": Object {
                  "navigation": Object {
                    "disabledClass": "swiper-button-disabled",
                    "hiddenClass": "swiper-button-hidden",
                    "hideOnClick": false,
                    "lockClass": "swiper-button-lock",
                    "nextEl": null,
                    "prevEl": null,
                  },
                },
              },
            ]
          }
          navigation={
            Object {
              "nextEl": null,
              "prevEl": null,
            }
          }
          on={
            Object {
              "slideChange": [Function],
            }
          }
          pagination={
            Object {
              "bulletActiveClass": "css-hpsgy2",
              "bulletClass": "css-cvsmqf",
              "el": ".swiper-pagination",
              "type": "bullets",
            }
          }
          rebuildOnUpdate={false}
          renderNextButton={[Function]}
          renderPagination={[Function]}
          renderParallax={[Function]}
          renderPrevButton={[Function]}
          renderScrollbar={[Function]}
          slideClass="swiper-slide"
          slidesPerView={1}
          wrapperClass="swiper-wrapper"
        >
          <div
            className="css-rdsogp"
          >
            <div
              className="swiper-wrapper"
            >
              <SwiperItem
                className="swiper-slide"
                key=".$http=2//placehold.it/350x150"
              >
                <div
                  className="swiper-slide"
                  data-test-id="Slider"
                >
                  <Connect(Link)
                    className="css-63oe3q"
                    data-test-id="withLink"
                    href="http://example.com"
                  >
                    <Link
                      className="css-63oe3q"
                      data-test-id="withLink"
                      disabled={false}
                      historyPush={[Function]}
                      historyReplace={[Function]}
                      href="http://example.com"
                      replace={false}
                      state={Object {}}
                      tag="div"
                    >
                      <div
                        className="css-c6ki83 css-63oe3q"
                        data-test-id="link: http://example.com"
                        onClick={[Function]}
                        role="link"
                      >
                        <img
                          className={
                            Object {
                              "data-css-1rozygh": "",
                            }
                          }
                          data-test-id="link : undefined"
                          src="http://placehold.it/350x150"
                        />
                      </div>
                    </Link>
                  </Connect(Link)>
                </div>
              </SwiperItem>
              <SwiperItem
                className="swiper-slide"
                key=".$http=2//placehold.it/10x10"
              >
                <div
                  className="swiper-slide"
                  data-test-id="Slider"
                >
                  <Connect(Link)
                    className="css-63oe3q"
                    data-test-id="withLink"
                    href="http://other.example.com"
                  >
                    <Link
                      className="css-63oe3q"
                      data-test-id="withLink"
                      disabled={false}
                      historyPush={[Function]}
                      historyReplace={[Function]}
                      href="http://other.example.com"
                      replace={false}
                      state={Object {}}
                      tag="div"
                    >
                      <div
                        className="css-c6ki83 css-63oe3q"
                        data-test-id="link: http://other.example.com"
                        onClick={[Function]}
                        role="link"
                      >
                        <img
                          className={
                            Object {
                              "data-css-1rozygh": "",
                            }
                          }
                          data-test-id="link : undefined"
                          src="http://placehold.it/10x10"
                        />
                      </div>
                    </Link>
                  </Connect(Link)>
                </div>
              </SwiperItem>
            </div>
            <div
              className="swiper-pagination"
            />
          </div>
        </ReactIdSwiper>
      </div>
    </Swiper>
  </ImageSliderWidget>
</Provider>
`;
