// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ImageSliderWidget /> should map the correct image settings to the components 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <shouldUpdate(ImageSliderWidget)
    settings={
      Object {
        "autostart": false,
        "delay": 7000,
        "images": Array [
          Object {
            "image": "http://placehold.it/350x150",
            "link": "http://example.com",
          },
          Object {
            "image": "http://placehold.it/10x10",
            "link": "http://other.example.com",
          },
        ],
        "loop": false,
        "pagination": true,
      }
    }
  >
    <ImageSliderWidget
      className=""
      settings={
        Object {
          "autostart": false,
          "delay": 7000,
          "images": Array [
            Object {
              "image": "http://placehold.it/350x150",
              "link": "http://example.com",
            },
            Object {
              "image": "http://placehold.it/10x10",
              "link": "http://other.example.com",
            },
          ],
          "loop": false,
          "pagination": true,
        }
      }
    >
      <ImageSlider
        autoPlay={false}
        className=" css-1u3tffh"
        classNames={Object {}}
        controls={false}
        disabled={false}
        historyPath=""
        indicators={true}
        initialSlide={0}
        interval={7000}
        loop={false}
        maxIndicators={null}
        onSlideChange={null}
        rebuildOnUpdate={false}
        slidesPerView={1}
        snapItems={true}
      >
        <Connect(Slider)
          autoPlay={false}
          className=" css-1u3tffh"
          classNames={
            Object {
              "activeIndicator": "css-so6ht",
              "container": "css-nil",
              "inactiveIndicator": "css-1hipsfp",
              "indicator": Object {
                "bullets": "css-dwzljy",
                "fraction": "css-eyy1lx",
              },
              "slide": "css-nil",
              "slider": "css-1i764wo",
            }
          }
          controls={false}
          disabled={false}
          historyPath=""
          indicators={true}
          initialSlide={0}
          interval={7000}
          loop={false}
          maxIndicators={10}
          onSlideChange={null}
          rebuildOnUpdate={true}
          slidesPerView={1}
          snapItems={true}
        >
          <Slider
            autoPlay={false}
            className=" css-1u3tffh"
            classNames={
              Object {
                "activeIndicator": "css-so6ht",
                "container": "css-nil",
                "inactiveIndicator": "css-1hipsfp",
                "indicator": Object {
                  "bullets": "css-dwzljy",
                  "fraction": "css-eyy1lx",
                },
                "slide": "css-nil",
                "slider": "css-1i764wo",
              }
            }
            controls={false}
            disabled={false}
            dispatch={[Function]}
            historyPath={null}
            indicators={true}
            initialSlide={0}
            interval={7000}
            loop={false}
            maxIndicators={10}
            onSlideChange={null}
            rebuildOnUpdate={true}
            slidesPerView={1}
            snapItems={true}
          >
            <div
              className="css-1hlki0z  css-1u3tffh"
            >
              <ReactIdSwiper
                autoplay={null}
                bulletActiveClass="css-so6ht"
                bulletClass="css-1hipsfp"
                containerClass="sg-swiper-container css-rdsogp css-nil"
                freeMode={false}
                initialSlide={0}
                loop={false}
                nextButton={null}
                onInit={[Function]}
                onSlideChangeEnd={[Function]}
                onTouchStart={[Function]}
                onTransitionEnd={[Function]}
                onTransitionStart={[Function]}
                pagination=".css-dwzljy"
                paginationModifierClass="sg-swiper-pagination-"
                paginationType="bullets"
                prevButton={null}
                rebuildOnUpdate={true}
                slideClass="sg-swiper-slide"
                slidesPerView={1}
                wrapperClass="swiper-wrapper"
              >
                <div
                  className="sg-swiper-container css-rdsogp css-nil"
                >
                  <div
                    className="swiper-wrapper"
                  >
                    <div
                      className="sg-swiper-slide css-1l9a57c "
                      data-test-id="Slider"
                      key=".$cff8d88442d10b88424de77967c68124_0_0"
                    >
                      <SliderItem
                        key="cff8d88442d10b88424de77967c68124_0"
                      >
                        <div
                          className="css-10a4qrv"
                        >
                          <Connect(Link)
                            className="css-63oe3q"
                            data-test-id="withLink"
                            href="http://example.com"
                            key="cff8d88442d10b88424de77967c68124"
                          >
                            <Link
                              className="css-63oe3q"
                              data-test-id="withLink"
                              disabled={false}
                              historyPush={[Function]}
                              historyReplace={[Function]}
                              href="http://example.com"
                              replace={false}
                              state={Object {}}
                              tag="div"
                            >
                              <div
                                className="css-c6ki83 css-63oe3q"
                                data-test-id="link: http://example.com"
                                onClick={[Function]}
                                role="link"
                              >
                                <img
                                  className={
                                    Object {
                                      "data-css-1rozygh": "",
                                    }
                                  }
                                  data-test-id="link : undefined"
                                  src="http://placehold.it/350x150"
                                />
                              </div>
                            </Link>
                          </Connect(Link)>
                        </div>
                      </SliderItem>
                    </div>
                    <div
                      className="sg-swiper-slide css-1l9a57c "
                      data-test-id="Slider"
                      key=".$77387b0455b43e9c56aaeff7c21c7340_1_1"
                    >
                      <SliderItem
                        key="77387b0455b43e9c56aaeff7c21c7340_1"
                      >
                        <div
                          className="css-10a4qrv"
                        >
                          <Connect(Link)
                            className="css-63oe3q"
                            data-test-id="withLink"
                            href="http://other.example.com"
                            key="77387b0455b43e9c56aaeff7c21c7340"
                          >
                            <Link
                              className="css-63oe3q"
                              data-test-id="withLink"
                              disabled={false}
                              historyPush={[Function]}
                              historyReplace={[Function]}
                              href="http://other.example.com"
                              replace={false}
                              state={Object {}}
                              tag="div"
                            >
                              <div
                                className="css-c6ki83 css-63oe3q"
                                data-test-id="link: http://other.example.com"
                                onClick={[Function]}
                                role="link"
                              >
                                <img
                                  className={
                                    Object {
                                      "data-css-1rozygh": "",
                                    }
                                  }
                                  data-test-id="link : undefined"
                                  src="http://placehold.it/10x10"
                                />
                              </div>
                            </Link>
                          </Connect(Link)>
                        </div>
                      </SliderItem>
                    </div>
                  </div>
                  <div
                    className="css-dwzljy "
                  />
                </div>
              </ReactIdSwiper>
            </div>
          </Slider>
        </Connect(Slider)>
      </ImageSlider>
    </ImageSliderWidget>
  </shouldUpdate(ImageSliderWidget)>
</Provider>
`;

exports[`<ImageSliderWidget /> should render no slider with just a single image 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <shouldUpdate(ImageSliderWidget)
    settings={
      Object {
        "autostart": false,
        "delay": 7000,
        "images": Array [
          Object {
            "image": "http://placehold.it/350x150",
            "link": "http://example.com",
          },
        ],
        "loop": false,
        "pagination": true,
      }
    }
  >
    <ImageSliderWidget
      className=""
      settings={
        Object {
          "autostart": false,
          "delay": 7000,
          "images": Array [
            Object {
              "image": "http://placehold.it/350x150",
              "link": "http://example.com",
            },
          ],
          "loop": false,
          "pagination": true,
        }
      }
    >
      <ImageSlider
        autoPlay={false}
        className=" css-1u3tffh"
        classNames={Object {}}
        controls={false}
        disabled={false}
        historyPath=""
        indicators={true}
        initialSlide={0}
        interval={7000}
        loop={false}
        maxIndicators={null}
        onSlideChange={null}
        rebuildOnUpdate={false}
        slidesPerView={1}
        snapItems={true}
      >
        <Connect(Link)
          className="css-63oe3q"
          data-test-id="withLink"
          href="http://example.com"
          key=".$cff8d88442d10b88424de77967c68124"
        >
          <Link
            className="css-63oe3q"
            data-test-id="withLink"
            disabled={false}
            historyPush={[Function]}
            historyReplace={[Function]}
            href="http://example.com"
            replace={false}
            state={Object {}}
            tag="div"
          >
            <div
              className="css-c6ki83 css-63oe3q"
              data-test-id="link: http://example.com"
              onClick={[Function]}
              role="link"
            >
              <img
                className={
                  Object {
                    "data-css-1rozygh": "",
                  }
                }
                data-test-id="link : undefined"
                src="http://placehold.it/350x150"
              />
            </div>
          </Link>
        </Connect(Link)>
      </ImageSlider>
    </ImageSliderWidget>
  </shouldUpdate(ImageSliderWidget)>
</Provider>
`;

exports[`<ImageSliderWidget /> should render the images unlinked if no link is set 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <shouldUpdate(ImageSliderWidget)
    settings={
      Object {
        "autostart": false,
        "delay": 7000,
        "images": Array [
          Object {
            "image": "http://placehold.it/350x150",
            "link": null,
          },
        ],
        "loop": false,
        "pagination": true,
      }
    }
  >
    <ImageSliderWidget
      className=""
      settings={
        Object {
          "autostart": false,
          "delay": 7000,
          "images": Array [
            Object {
              "image": "http://placehold.it/350x150",
              "link": null,
            },
          ],
          "loop": false,
          "pagination": true,
        }
      }
    >
      <ImageSlider
        autoPlay={false}
        className=" css-1u3tffh"
        classNames={Object {}}
        controls={false}
        disabled={false}
        historyPath=""
        indicators={true}
        initialSlide={0}
        interval={7000}
        loop={false}
        maxIndicators={null}
        onSlideChange={null}
        rebuildOnUpdate={false}
        slidesPerView={1}
        snapItems={true}
      >
        <img
          className={
            Object {
              "data-css-1rozygh": "",
            }
          }
          data-test-id="withoutLink"
          key=".$cff8d88442d10b88424de77967c68124"
          src="http://placehold.it/350x150"
        />
      </ImageSlider>
    </ImageSliderWidget>
  </shouldUpdate(ImageSliderWidget)>
</Provider>
`;

exports[`<ImageSliderWidget /> should render the images with links 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <shouldUpdate(ImageSliderWidget)
    settings={
      Object {
        "autostart": false,
        "delay": 7000,
        "images": Array [
          Object {
            "image": "http://placehold.it/350x150",
            "link": "http://example.com",
          },
          Object {
            "image": "http://placehold.it/350x150",
            "link": null,
          },
          Object {
            "image": "http://placehold.it/350x150",
            "link": "http://example.com",
          },
          Object {
            "image": "http://placehold.it/350x150",
            "link": "http://example.com",
          },
        ],
        "loop": false,
        "pagination": true,
      }
    }
  >
    <ImageSliderWidget
      className=""
      settings={
        Object {
          "autostart": false,
          "delay": 7000,
          "images": Array [
            Object {
              "image": "http://placehold.it/350x150",
              "link": "http://example.com",
            },
            Object {
              "image": "http://placehold.it/350x150",
              "link": null,
            },
            Object {
              "image": "http://placehold.it/350x150",
              "link": "http://example.com",
            },
            Object {
              "image": "http://placehold.it/350x150",
              "link": "http://example.com",
            },
          ],
          "loop": false,
          "pagination": true,
        }
      }
    >
      <ImageSlider
        autoPlay={false}
        className=" css-1u3tffh"
        classNames={Object {}}
        controls={false}
        disabled={false}
        historyPath=""
        indicators={true}
        initialSlide={0}
        interval={7000}
        loop={false}
        maxIndicators={null}
        onSlideChange={null}
        rebuildOnUpdate={false}
        slidesPerView={1}
        snapItems={true}
      >
        <Connect(Slider)
          autoPlay={false}
          className=" css-1u3tffh"
          classNames={
            Object {
              "activeIndicator": "css-so6ht",
              "container": "css-nil",
              "inactiveIndicator": "css-1hipsfp",
              "indicator": Object {
                "bullets": "css-dwzljy",
                "fraction": "css-eyy1lx",
              },
              "slide": "css-nil",
              "slider": "css-1i764wo",
            }
          }
          controls={false}
          disabled={false}
          historyPath=""
          indicators={true}
          initialSlide={0}
          interval={7000}
          loop={false}
          maxIndicators={10}
          onSlideChange={null}
          rebuildOnUpdate={true}
          slidesPerView={1}
          snapItems={true}
        >
          <Slider
            autoPlay={false}
            className=" css-1u3tffh"
            classNames={
              Object {
                "activeIndicator": "css-so6ht",
                "container": "css-nil",
                "inactiveIndicator": "css-1hipsfp",
                "indicator": Object {
                  "bullets": "css-dwzljy",
                  "fraction": "css-eyy1lx",
                },
                "slide": "css-nil",
                "slider": "css-1i764wo",
              }
            }
            controls={false}
            disabled={false}
            dispatch={[Function]}
            historyPath={null}
            indicators={true}
            initialSlide={0}
            interval={7000}
            loop={false}
            maxIndicators={10}
            onSlideChange={null}
            rebuildOnUpdate={true}
            slidesPerView={1}
            snapItems={true}
          >
            <div
              className="css-1hlki0z  css-1u3tffh"
            >
              <ReactIdSwiper
                autoplay={null}
                bulletActiveClass="css-so6ht"
                bulletClass="css-1hipsfp"
                containerClass="sg-swiper-container css-rdsogp css-nil"
                freeMode={false}
                initialSlide={0}
                loop={false}
                nextButton={null}
                onInit={[Function]}
                onSlideChangeEnd={[Function]}
                onTouchStart={[Function]}
                onTransitionEnd={[Function]}
                onTransitionStart={[Function]}
                pagination=".css-dwzljy"
                paginationModifierClass="sg-swiper-pagination-"
                paginationType="bullets"
                prevButton={null}
                rebuildOnUpdate={true}
                slideClass="sg-swiper-slide"
                slidesPerView={1}
                wrapperClass="swiper-wrapper"
              >
                <div
                  className="sg-swiper-container css-rdsogp css-nil"
                >
                  <div
                    className="swiper-wrapper"
                  >
                    <div
                      className="sg-swiper-slide css-1l9a57c "
                      data-test-id="Slider"
                      key=".$cff8d88442d10b88424de77967c68124_0_0"
                    >
                      <SliderItem
                        key="cff8d88442d10b88424de77967c68124_0"
                      >
                        <div
                          className="css-10a4qrv"
                        >
                          <Connect(Link)
                            className="css-63oe3q"
                            data-test-id="withLink"
                            href="http://example.com"
                            key="cff8d88442d10b88424de77967c68124"
                          >
                            <Link
                              className="css-63oe3q"
                              data-test-id="withLink"
                              disabled={false}
                              historyPush={[Function]}
                              historyReplace={[Function]}
                              href="http://example.com"
                              replace={false}
                              state={Object {}}
                              tag="div"
                            >
                              <div
                                className="css-c6ki83 css-63oe3q"
                                data-test-id="link: http://example.com"
                                onClick={[Function]}
                                role="link"
                              >
                                <img
                                  className={
                                    Object {
                                      "data-css-1rozygh": "",
                                    }
                                  }
                                  data-test-id="link : undefined"
                                  src="http://placehold.it/350x150"
                                />
                              </div>
                            </Link>
                          </Connect(Link)>
                        </div>
                      </SliderItem>
                    </div>
                    <div
                      className="sg-swiper-slide css-1l9a57c "
                      data-test-id="Slider"
                      key=".$cff8d88442d10b88424de77967c68124_1_1"
                    >
                      <SliderItem
                        key="cff8d88442d10b88424de77967c68124_1"
                      >
                        <div
                          className="css-10a4qrv"
                        >
                          <img
                            className={
                              Object {
                                "data-css-1rozygh": "",
                              }
                            }
                            data-test-id="withoutLink"
                            key="cff8d88442d10b88424de77967c68124"
                            src="http://placehold.it/350x150"
                          />
                        </div>
                      </SliderItem>
                    </div>
                    <div
                      className="sg-swiper-slide css-1l9a57c "
                      data-test-id="Slider"
                      key=".$cff8d88442d10b88424de77967c68124_2_2"
                    >
                      <SliderItem
                        key="cff8d88442d10b88424de77967c68124_2"
                      >
                        <div
                          className="css-10a4qrv"
                        >
                          <Connect(Link)
                            className="css-63oe3q"
                            data-test-id="withLink"
                            href="http://example.com"
                            key="cff8d88442d10b88424de77967c68124"
                          >
                            <Link
                              className="css-63oe3q"
                              data-test-id="withLink"
                              disabled={false}
                              historyPush={[Function]}
                              historyReplace={[Function]}
                              href="http://example.com"
                              replace={false}
                              state={Object {}}
                              tag="div"
                            >
                              <div
                                className="css-c6ki83 css-63oe3q"
                                data-test-id="link: http://example.com"
                                onClick={[Function]}
                                role="link"
                              >
                                <img
                                  className={
                                    Object {
                                      "data-css-1rozygh": "",
                                    }
                                  }
                                  data-test-id="link : undefined"
                                  src="http://placehold.it/350x150"
                                />
                              </div>
                            </Link>
                          </Connect(Link)>
                        </div>
                      </SliderItem>
                    </div>
                    <div
                      className="sg-swiper-slide css-1l9a57c "
                      data-test-id="Slider"
                      key=".$cff8d88442d10b88424de77967c68124_3_3"
                    >
                      <SliderItem
                        key="cff8d88442d10b88424de77967c68124_3"
                      >
                        <div
                          className="css-10a4qrv"
                        >
                          <Connect(Link)
                            className="css-63oe3q"
                            data-test-id="withLink"
                            href="http://example.com"
                            key="cff8d88442d10b88424de77967c68124"
                          >
                            <Link
                              className="css-63oe3q"
                              data-test-id="withLink"
                              disabled={false}
                              historyPush={[Function]}
                              historyReplace={[Function]}
                              href="http://example.com"
                              replace={false}
                              state={Object {}}
                              tag="div"
                            >
                              <div
                                className="css-c6ki83 css-63oe3q"
                                data-test-id="link: http://example.com"
                                onClick={[Function]}
                                role="link"
                              >
                                <img
                                  className={
                                    Object {
                                      "data-css-1rozygh": "",
                                    }
                                  }
                                  data-test-id="link : undefined"
                                  src="http://placehold.it/350x150"
                                />
                              </div>
                            </Link>
                          </Connect(Link)>
                        </div>
                      </SliderItem>
                    </div>
                  </div>
                  <div
                    className="css-dwzljy "
                  />
                </div>
              </ReactIdSwiper>
            </div>
          </Slider>
        </Connect(Slider)>
      </ImageSlider>
    </ImageSliderWidget>
  </shouldUpdate(ImageSliderWidget)>
</Provider>
`;

exports[`<ImageSliderWidget /> should render the slider with the correct number of images 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <shouldUpdate(ImageSliderWidget)
    settings={
      Object {
        "autostart": false,
        "delay": 7000,
        "images": Array [
          Object {
            "image": "http://placehold.it/350x150",
            "link": "http://example.com",
          },
          Object {
            "image": "http://placehold.it/350x150",
            "link": "http://example.com",
          },
          Object {
            "image": "http://placehold.it/350x150",
            "link": "http://example.com",
          },
        ],
        "loop": false,
        "pagination": true,
      }
    }
  >
    <ImageSliderWidget
      className=""
      settings={
        Object {
          "autostart": false,
          "delay": 7000,
          "images": Array [
            Object {
              "image": "http://placehold.it/350x150",
              "link": "http://example.com",
            },
            Object {
              "image": "http://placehold.it/350x150",
              "link": "http://example.com",
            },
            Object {
              "image": "http://placehold.it/350x150",
              "link": "http://example.com",
            },
          ],
          "loop": false,
          "pagination": true,
        }
      }
    >
      <ImageSlider
        autoPlay={false}
        className=" css-1u3tffh"
        classNames={Object {}}
        controls={false}
        disabled={false}
        historyPath=""
        indicators={true}
        initialSlide={0}
        interval={7000}
        loop={false}
        maxIndicators={null}
        onSlideChange={null}
        rebuildOnUpdate={false}
        slidesPerView={1}
        snapItems={true}
      >
        <Connect(Slider)
          autoPlay={false}
          className=" css-1u3tffh"
          classNames={
            Object {
              "activeIndicator": "css-so6ht",
              "container": "css-nil",
              "inactiveIndicator": "css-1hipsfp",
              "indicator": Object {
                "bullets": "css-dwzljy",
                "fraction": "css-eyy1lx",
              },
              "slide": "css-nil",
              "slider": "css-1i764wo",
            }
          }
          controls={false}
          disabled={false}
          historyPath=""
          indicators={true}
          initialSlide={0}
          interval={7000}
          loop={false}
          maxIndicators={10}
          onSlideChange={null}
          rebuildOnUpdate={true}
          slidesPerView={1}
          snapItems={true}
        >
          <Slider
            autoPlay={false}
            className=" css-1u3tffh"
            classNames={
              Object {
                "activeIndicator": "css-so6ht",
                "container": "css-nil",
                "inactiveIndicator": "css-1hipsfp",
                "indicator": Object {
                  "bullets": "css-dwzljy",
                  "fraction": "css-eyy1lx",
                },
                "slide": "css-nil",
                "slider": "css-1i764wo",
              }
            }
            controls={false}
            disabled={false}
            dispatch={[Function]}
            historyPath={null}
            indicators={true}
            initialSlide={0}
            interval={7000}
            loop={false}
            maxIndicators={10}
            onSlideChange={null}
            rebuildOnUpdate={true}
            slidesPerView={1}
            snapItems={true}
          >
            <div
              className="css-1hlki0z  css-1u3tffh"
            >
              <ReactIdSwiper
                autoplay={null}
                bulletActiveClass="css-so6ht"
                bulletClass="css-1hipsfp"
                containerClass="sg-swiper-container css-rdsogp css-nil"
                freeMode={false}
                initialSlide={0}
                loop={false}
                nextButton={null}
                onInit={[Function]}
                onSlideChangeEnd={[Function]}
                onTouchStart={[Function]}
                onTransitionEnd={[Function]}
                onTransitionStart={[Function]}
                pagination=".css-dwzljy"
                paginationModifierClass="sg-swiper-pagination-"
                paginationType="bullets"
                prevButton={null}
                rebuildOnUpdate={true}
                slideClass="sg-swiper-slide"
                slidesPerView={1}
                wrapperClass="swiper-wrapper"
              >
                <div
                  className="sg-swiper-container css-rdsogp css-nil"
                >
                  <div
                    className="swiper-wrapper"
                  >
                    <div
                      className="sg-swiper-slide css-1l9a57c "
                      data-test-id="Slider"
                      key=".$cff8d88442d10b88424de77967c68124_0_0"
                    >
                      <SliderItem
                        key="cff8d88442d10b88424de77967c68124_0"
                      >
                        <div
                          className="css-10a4qrv"
                        >
                          <Connect(Link)
                            className="css-63oe3q"
                            data-test-id="withLink"
                            href="http://example.com"
                            key="cff8d88442d10b88424de77967c68124"
                          >
                            <Link
                              className="css-63oe3q"
                              data-test-id="withLink"
                              disabled={false}
                              historyPush={[Function]}
                              historyReplace={[Function]}
                              href="http://example.com"
                              replace={false}
                              state={Object {}}
                              tag="div"
                            >
                              <div
                                className="css-c6ki83 css-63oe3q"
                                data-test-id="link: http://example.com"
                                onClick={[Function]}
                                role="link"
                              >
                                <img
                                  className={
                                    Object {
                                      "data-css-1rozygh": "",
                                    }
                                  }
                                  data-test-id="link : undefined"
                                  src="http://placehold.it/350x150"
                                />
                              </div>
                            </Link>
                          </Connect(Link)>
                        </div>
                      </SliderItem>
                    </div>
                    <div
                      className="sg-swiper-slide css-1l9a57c "
                      data-test-id="Slider"
                      key=".$cff8d88442d10b88424de77967c68124_1_1"
                    >
                      <SliderItem
                        key="cff8d88442d10b88424de77967c68124_1"
                      >
                        <div
                          className="css-10a4qrv"
                        >
                          <Connect(Link)
                            className="css-63oe3q"
                            data-test-id="withLink"
                            href="http://example.com"
                            key="cff8d88442d10b88424de77967c68124"
                          >
                            <Link
                              className="css-63oe3q"
                              data-test-id="withLink"
                              disabled={false}
                              historyPush={[Function]}
                              historyReplace={[Function]}
                              href="http://example.com"
                              replace={false}
                              state={Object {}}
                              tag="div"
                            >
                              <div
                                className="css-c6ki83 css-63oe3q"
                                data-test-id="link: http://example.com"
                                onClick={[Function]}
                                role="link"
                              >
                                <img
                                  className={
                                    Object {
                                      "data-css-1rozygh": "",
                                    }
                                  }
                                  data-test-id="link : undefined"
                                  src="http://placehold.it/350x150"
                                />
                              </div>
                            </Link>
                          </Connect(Link)>
                        </div>
                      </SliderItem>
                    </div>
                    <div
                      className="sg-swiper-slide css-1l9a57c "
                      data-test-id="Slider"
                      key=".$cff8d88442d10b88424de77967c68124_2_2"
                    >
                      <SliderItem
                        key="cff8d88442d10b88424de77967c68124_2"
                      >
                        <div
                          className="css-10a4qrv"
                        >
                          <Connect(Link)
                            className="css-63oe3q"
                            data-test-id="withLink"
                            href="http://example.com"
                            key="cff8d88442d10b88424de77967c68124"
                          >
                            <Link
                              className="css-63oe3q"
                              data-test-id="withLink"
                              disabled={false}
                              historyPush={[Function]}
                              historyReplace={[Function]}
                              href="http://example.com"
                              replace={false}
                              state={Object {}}
                              tag="div"
                            >
                              <div
                                className="css-c6ki83 css-63oe3q"
                                data-test-id="link: http://example.com"
                                onClick={[Function]}
                                role="link"
                              >
                                <img
                                  className={
                                    Object {
                                      "data-css-1rozygh": "",
                                    }
                                  }
                                  data-test-id="link : undefined"
                                  src="http://placehold.it/350x150"
                                />
                              </div>
                            </Link>
                          </Connect(Link)>
                        </div>
                      </SliderItem>
                    </div>
                  </div>
                  <div
                    className="css-dwzljy "
                  />
                </div>
              </ReactIdSwiper>
            </div>
          </Slider>
        </Connect(Slider)>
      </ImageSlider>
    </ImageSliderWidget>
  </shouldUpdate(ImageSliderWidget)>
</Provider>
`;
